
• Software Link:

http://www.opencart.com/

• Affected Versions:

Version 1.5.6.4 and prior versions.

• Vulnerability Description:

The vulnerable code is located in the “Cart::getProducts()” method defined in /system/library/cart.php:
23
24
25
26
27
28
29
30
31
32
33
	
foreach ($this->session->data[&#039;cart&#039;] as $key => $quantity) {
    $product = explode(&#039;:&#039;, $key);
    $product_id = $product[0];
    $stock = true;
 
    // Options
    if (!empty($product[1])) {
        $options = unserialize(base64_decode($product[1]));
    } else {
        $options = array();
    }

The vulnerability exists because this method uses the “unserialize()” function with the key values of the array stored into the “data[cart]” session variable without a proper validation. Such values might be manipulated by an unauthenticated attacker via the $_POST[&#039;quantity&#039;] parameter during an “update” request. This can be exploited to inject arbitrary PHP objects into the application scope, and could allow an attacker to conduct Server-Side Request Forgery (SSRF) attacks by abusing the destructor method of the “DBMySQLi“ class and possibly other attacks leveraging magic methods of classes defined in third-party extensions.

NOTE: if OpenCart is running on PHP before version 5.3.23 or 5.4.13 this vulnerability could also be exploited to carry out XML External Entity (XXE) attacks, which in turn might allow arbitrary command execution if the PHP “expect“ extension is installed.

• Solution:

Update to version 1.5.6.5 when will be released or apply this patch: http://git.io/F3dGoA

• Disclosure Timeline:

[02/06/2014] – First attempt to contact the vendor
[04/06/2014] – Issue reported to http://git.io/uOsKfA
[06/06/2014] – CVE number requested
[06/06/2014] – CVE number assigned
[25/06/2014] – Vendor contacted again asking when will be released a fixed version
[25/06/2014] – Vendor replied there’s no need to alert its users because the vulnerability is very weak
[14/07/2014] – Public disclosure

• CVE Reference:

The Common Vulnerabilities and Exposures project (cve.mitre.org)
has assigned the name CVE-2014-3990 to this vulnerability.

