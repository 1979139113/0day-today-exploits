YITH WooCommerce Compare WordPress Plugin unauthenticated PHP Object
injection vulnerability
------------------------------------------------------------------------
Yorick Koster, June 2016

------------------------------------------------------------------------
Abstract
------------------------------------------------------------------------
A PHP Object injection vulnerability was found in the YITH WooCommerce
Compare WordPress Plugin, which can be used by an unauthenticated user
to instantiate arbitrary PHP Objects. Using this vulnerability it is
possible to execute arbitrary PHP code.

------------------------------------------------------------------------
OVE ID
------------------------------------------------------------------------
OVE-20160803-0006

------------------------------------------------------------------------
Tested versions
------------------------------------------------------------------------
This issue was successfully tested on the YITH WooCommerce Compare
WordPress Plugin version 2.0.9.

------------------------------------------------------------------------
Fix
------------------------------------------------------------------------
This issue is resolved in YITH WooCommerce Compare version 2.1.0.

------------------------------------------------------------------------
Details
------------------------------------------------------------------------

This issue is possible due to an unsafe call to unserialize() in the __construct() method. The input is taken directly from the yith_woocompare_list cookie as can be seen in the following code fragment:

includes/class.yith-woocompare-frontend.php:

/**
    * Constructor
    *
    * @return YITH_Woocompare_Frontend
    * @since 1.0.0
    */
   public function __construct() {
   
      // set coookiename
      if ( is_multisite() ) $this->cookie_name .= '_' . get_current_blog_id();
   
      // populate the list of products
      $this->products_list = isset( $_COOKIE[ $this->cookie_name ] ) ? json_decode( maybe_unserialize( $_COOKIE[ $this->cookie_name ] ) ) : array();

It has been confirmed that this issues can be used to execute arbitrary PHP code.
------------------------------------------------------------------------
Summer of Pwnage (https://sumofpwn.nl) is a Dutch community project. Its
goal is to contribute to the security of popular, widely used OSS
projects in a fun and educational way.

