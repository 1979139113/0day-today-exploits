
Details:
========
A filter bypass vulnerability is detected in the Barracuda Networks Appliances Applications. Remote attackers 
with privileged user accounts bypass the application internal filter & exception-handling. Successful exploitation 
of the vulnerability result in dbms (Server) or application (Web) compromise. Exploitation requires low or medium 
user inter action & with privileged user account.

The input filter blocks persistent input attacks with a restriction/filter exception for double quotes, <>,frames, 
scripts & statements. The vulnerability allows to bypass the existing input validation filter & exception handling.

The bug is located when processing to save the url path name (db stored) with attached file. The vulnerability 
allows to bypass the path url name parse restriction which leads to the execution on a secound vulnerable bound 
module which displays the input as output listing. The Account MyResource Display (example listing + input) & Upload 
File modules are executing the earlier saved `save` path of url-path/folder which leads to the bypass of the input 
validation filter & exception-handling. The result is the persistent execution of malicious script codes out of the 
security appliance application context. 

The vulnerability allows to bypass this method with this tricky way ...

The url path function save the context of the input path name(parsed) as client side request (GET) via URL. If the 
request is getting bound with the file (POST), which is getting stored (persistent) displayed later on the overview 
listings, the code will be unauthorized executed out of the security application context(persistent|server-side).


Vulnerable Module(s):
      [+] MyResource, File System & File Upload Output/Input - Input Validation Filter Restriction &  Listing

NOTE: The vulnerability is also located on different other security appliances on all resource listings or file uploads with url path save.


Proof of Concept:
=================
The vulnerability can be exploited by local low privileged user accounts & with medium or high required user inter action.
For demonstration or reproduce ...

Manually ...

1. Login into for example the SSL VPN appliance
2. Switch over to the MyResources File System
3. Open via Tamper the following url ... fileSystem.do?ActionTarget=list&path=smb/random folder/
4. Now save the path and switch to new folder
5. The setting of the path has been implemented automatic. Change the Path to your scriptcode after it has been parsed.
6. Now switch after the save to the uplaod files function. Upload any random file which is bound to the malicious title.

<a href="?launchId=l7e68d5&startRow=0&
path=smb%2F%22%3E%3C[PERSISTENT SCRIPT CODE EXECUTION!]+%3C&pageSize=25&sortReverse=
false&sortName=fileSystem.size&
amp;amp;actionTarget=list" class="columnHeader">Size</a>
</td>

... or

<span><a href="fileSystem.do?actionTarget=list&launchId=l7e68d5&path=smb/Sales%20Folder">Sales Folder
</a> / <a href="fileSystem.do?actionTarget=list&launchId=l7e68d5&path=smb/Sales%20Folder/Testing%20from%20Tri%20Opt">
Testing from Tri Opt</a> /​​​​​ <a href="fileSystem.do?actionTarget=list&
launchId=l7e68d5&path=smb/Sales%20Folder/
Testing%20from%20Tri%20Opt/%22%3E%3C[PERSISTENT SCRIPT CODE INJECT VIA PATH%22%29%20%3C">
"​​​​​><[PERSISTENT SCRIPT CODE EXECUTION!]&#039; <<="" a=""> /  </span></div>


Reference(s):
      ../video-poc.wmv


Solution:
=========
The vulnerability can be fixed by parsing the secound input request of the file upload function next to the display of the myresource listing. 
To fix the issue completly it is also required to parse the path url request which allows to include but not execute the context.

2012-07-14:  Vendor Fix/Patch by Barracuda Networks


Risk:
=====
The security risk of the input validation filter bypass vulnerability is estimated as high(-).



