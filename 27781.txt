===============


Product & Service Introduction:
===============================
Add a registration form on FrontOffice, a newsletter manager on backoffice manage skins, address book, archives and direct answers.


Abstract Advisory Information:
==============================
An independent vulnerability laboratory researcher discovered a stored cross site and cross site request forgery vulnerability in the official  EELV Newsletter v4.5 Plugin.


Vulnerability Disclosure Timeline:
==================================
2017-05-15: Public Disclosure (Vulnerability Laboratory)


Discovery Status:
=================
Published


Affected Product(s):
====================
Bastien Ho


Exploitation Technique:
=======================
Remote


Severity Level:
===============
Medium


Technical Details & Description:
================================
The persistent web vulnerability allows remote attackers to inject own malicious script code on the application-side of the web-application.
The cross site request forgery vulnerability allows remote attackers to perform malicious client-side requests with user interaction to 
manipulate the web-application.

1.1
The application-side cross site vulnerability is located in the `s` value of the page module POST method request. Remote attackers are able to 
inject own malicious script codes to the application-side of the online service web-application to compromise user session information or data. 
The request method to inject is POST and the attack vector is persistent.

1.2
crafted webpages to perform client-side delete requests with the administrator session. The request method to execute is GET and the attack 
vector of the vulnerability is non-persistent.

The security risk of the client-side web vulnerabilities are estimated as medium with a cvss (common vulnerability scoring system) count of 3.3.
Exploitation of the persistent web vulnerability requires no privileged web application user account and low user interaction (click link).
Exploitation of the csrf web vulnerability requires no privileged web application user account and low user interaction (click link). 
Successful exploitation of the vulnerability results in session hijacking, persistent phishing, persistent external redirects, 
persistent load of malicious script codes or persistent web module context manipulation.

Request Method(s):
[+] GET

Vulnerable Service(s):

Vulnerable Module(s):
[+] ./wp-contact/theme/truemag

Vulnerable Parameter(s):
[+] s


Proof of Concept (PoC):
=======================
The persistent cross site vulnerability can be exploited by remote attackers with privileged web-application user account and low user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

1.1
PoC: XSS (Payload)
"><script>alert(document.cookie)</script>

Manual steps to reproduce the vulnerability ...
2. Create new adress book 
3. Include the following payload to the input field
Note: "><script>alert(document.cookie)</script>
4. Click save and the payload executes within the same module context
5. Successful reproduce of the persistent cross site vulnerability!


1.2
PoC CSRF:


Reference(s):


Solution - Fix & Patch:
=======================
The vulnerability can be patched by a secure parse  the webpage GET method request.

