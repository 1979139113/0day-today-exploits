===============
Flash Operator Panel v2.31.03 - Command Execution Vulnerability


Product & Service Introduction:
===============================
A new approach on getting CDR reports for your phone system, centered on the user and call direction. Top lists, 
Usage pattern and real time view are included. This version works under any Linux flavor (i386, x86_64 and R-Pi3). 
Versions 1.2, 1.4, 1.6, 1.8, 10, 11 and 12 with the manager interface enabled to asterisk. PHP 5 & MySQL 5: only 
required for the visual phonebook, call history and recordings interface.

(Copy of the Vendor Homepage: https://www.fop2.com/index.php )


Abstract Advisory Information:
==============================
The vulnerability laboratory core research team discovered a remote command execution in the official Flash Operator Panel v2.31.03.


Vulnerability Disclosure Timeline:
==================================
2018-01-08: Non-Public Disclosure (Vulnerability Laboratory - Shared Customer Research Feed)



Affected Product(s):
====================
Nicolas Gudino (Asternic)
Product: Flash Operator Panel 2 - User Control Panel (Web-Application) CentOS 2.31.03, Debian 2.31.03 & RPI-ARM 2.30.03


Technical Details & Description:
================================
A command inject web vulnerability has been discovered in the official Flash Operator Panel v2.31.03 web-application.
The security vulnerability allows remote attackers to inject own system specific commands via web-application.

The command inject web vulnerability is located in the the `command` path variable paramter of the `index.php` file.
Remote attackers with low privileged web-application user account roles are able to perform command requests via 
callforward module. Thus allows an user account with restricted privileges to perform unauthorized command requests 
to compromise the operator panel web-application. The request method to inject the malicious command to the index path 
variable is GET. The attack is limited on exploitation to a restricted authenticated user account of the application.

The security risk of the command injection is estimated as high with a cvss (common vulnerability scoring system) count of 6.2. 
Exploitation of the command inject vulnerability requires a low privileged web-application user account and no user interaction. 
Successful exploitation of the vulnerability results in web-application-, database management system or web-server -compromise.

Request Method(s):
[+] GET

Vulnerable Module(s):
[+] UCP - User Control Panel

Vulnerable File(s):
[+] index.php

Vulnerable Parameter(s):
[+] command


Proof of Concept (PoC):
=======================
The vulnerability can be exploited by remote attackers without user interaction and with low privileged user account.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.


PoC: Exploitation
http://ucp-fop.localhost:8000/ucp/index.php?quietmode=1337&module=callforward&command=./&[Variable Command Inject Vulnerability!]


PoC: Vulnerable Source (command)
($_REQUEST['quietmode']) && $user !== false && !empty($user)) 
(isset($_REQUEST['command']) && ($_REQUEST['command'] == 'login' 
$_REQUEST['command'] == 'forgot' 
$_REQUEST['command'] == 'reset'))) {
$m = !empty($_REQUEST['module']) ? $_REQUEST['module'] : null;
$ucp->Ajax->doRequest($m,$_REQUEST['command']);

Note: The request can be performed by restricted user accounts of the user control panel for higher access privileges.
The main administrator can use the command parameter to attack the backend of the main administrator by the same method.
The callforward uses the command variable to execute which is the same method performed for basic restricted user accounts.


Reference(s):
http://ucp-fop.localhost:8000/
http://ucp-fop.localhost:8000/ucp/
http://ucp-fop.localhost:8000/ucp/index.php
http://ucp-fop.localhost:8000/ucp/index.php?quietmode=1337
http://ucp-fop.localhost:8000/ucp/index.php?quietmode=1337&module=callforward
http://ucp-fop.localhost:8000/ucp/index.php?quietmode=1337&module=callforward&command


Solution - Fix & Patch:
=======================
The command injection web vulnerability can be patched by a secure approval of the command parameter in the index.php file GET method request. 

