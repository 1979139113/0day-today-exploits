===============
Apple iOS v7.1.2 - Merge Apps Service Local Bypass Vulnerability

Product & Service Introduction:
===============================
the iPhone and iPod Touch, it has been extended to support other Apple devices such as the iPad and Apple TV. Unlike Microsoft`s 
Windows Phone (Windows CE) and Google`s Android, Apple does not license iOS for installation on non-Apple hardware. As of 
September 12, 2012, Apple`s App Store contained more than 700,000 iOS applications, which have collectively been downloaded more 
than 30 billion times. It had a 14.9% share of the smartphone mobile operating system units shipped in the third quarter of 2012, 
behind only Google`s Android. In June 2012, it accounted for 65% of mobile web data consumption (including use on both the iPod 
Touch and the iPad). At the half of 2012, there were 410 million devices activated. According to the special media event held by 
Apple on September 12, 2012, 400 million devices have been sold through June 2012.

The user interface of iOS is based on the concept of direct manipulation, using multi-touch gestures. Interface control elements 
consist of sliders, switches, and buttons. Interaction with the OS includes gestures such as swipe, tap, pinch, and reverse pinch, 
all of which have specific definitions within the context of the iOS operating system and its multi-touch interface. Internal 
accelerometers are used by some applications to respond to shaking the device (one common result is the undo command) or rotating 
it in three dimensions (one common result is switching from portrait to landscape mode).

iOS is derived from OS X, with which it shares the Darwin foundation. iOS is Apple`s mobile version of the OS X operating system 
used on Apple computers.

In iOS, there are four abstraction layers: the Core OS layer, the Core Services layer, the Media layer, and the Cocoa Touch layer. 
The current version of the operating system (iOS 6.1) dedicates 1-1.5 GB of the device`s flash memory for the system partition, 
using roughly 800 MB of that partition (varying by model) for iOS itself. iOS currently runs on iPhone, Apple TV, iPod Touch, and iPad.

( Copy of the Homepage: http://en.wikipedia.org/wiki/IOS )

Affected Product(s):
====================
Apple
Product: iOS - Mobile Device System 7.1.2 (11D257)

Technical Details & Description:
================================
A local pass code (code lock) bypass has been discovered in the Apple (iPhone) iOS v7.1.2 (11D257) mobile device system.
The vulnerability allows to bypass via evade or glitch the local pass code service of iOS to compromise the mobile device.

The local bypass vulnerability is located in the pass code module of the Apple iOS v7.1.2. Local attackers with physical 
access can merge local installed apps and default services via glitch ahead to the pass code module of the apple iphone device.
Regular the security policy of the device disallows to merge services ahead to the logon screen (pass code).

Local attackers without restricted physcial account can merge apps with functions ahead to the pass code module to compromise 
During the tests we revealed that the exploitation is only possible (merge apps ahead to pass code) when the siri edit command 
context has been involved to save temporarily context.

last used apps to compromise the iOS device.

The security risk of the local pass code bypass vulnerability is estimated as medium with a cvss (common vulnerability scoring 
system) count of 5.9. Exploitation of the local glitch bypass vulnerability requires a privileged web-application user account, 
multi user account or restricted physical device access without user interaction. Successful exploitation of the local pass code 
bypass vulnerability results in device compromise or information leaking.

Affected Device(s):
      [+] Apple > iPhone 5s

Affected OS Version(s):
      [+] iOS v7.1.2 - 11D257

Tested Device(s):
      [+] Apple iPhone 5s > iOS 11D257


Proof of Concept (PoC):
=======================
The local pass code bypass vulnerability can be exploited by local attackers with privileged device user account without user interaction.
For security demonstration or to reproduce the vulnerability follow the provided information and steps below to continue.

Manual steps to reproduce the issue ...

1. Login to your iPhone device and update it to the newst iOS version (7.1.2 - 11D257)
2. Go to settings > Code (Code Lock Settings) and ensure siri service is activated (service activated by default)
3. Lock the iphone or ipad by usage of the power button, slide the to the pass code
4. Press the siri button 2 seconds and in the last second the emergency call button too 
Note: The siri opens and the emergency call site is in the background. It is not allowed to use siri in the emergency call mask!
5. Start siri in the locked iphone/ipad mode
6. Use the command "Open/Call Contact Hacker A A"
Note: The contact you call needs more then 3 entries with the same letter to be saved
7. In our tests it opens after the command the siri mask and shows us the visible contacts of the phone with the same name
8. Go on top of the mask were the user is able to edit manually the input of the command
9. Click to Edit the input field of the siri command on top and save the all the input temporarily
Note: The contact button allowed in the last version to access the addressbook but the issue is patched yet
11. Now we hold the home and siri button together and stop holding the power button same time
Note: The policy disallows to use any function ahead to the pass code (lock-screen) of iOS devices

Case Scenario:
During the security test we used the new iphone 5s of a lab member in our office to verify. We included the messages, face-time and 
mail service in front on top of the iOS login mask. The local attacker is able to save through the evil glitch any program which is 
available at the phone ahead to the login screen (pass code) module. At the end we made jokes by writing messages ahead to the 
phone pass code (lock screen) module. The glitch has been reproduced when the watch of the login screen becomes visible in all 
backgrounds of the used app.

