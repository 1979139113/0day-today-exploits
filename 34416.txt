# Author: Besim ALTINOK
# Vendor Homepage: https://sourceforge.net/projects/qdpm/
# Software Link: https://sourceforge.net/projects/qdpm/
# Version: v9.1 (Maybe it affect other versions)
# Tested on: Xampp
# Credit: Ä°smail BOZKURT
# Remotely: Yes

Description
--------------------------------------------------------------------

When a normal user tries to update their profile, they can arbitrarily
upload files to the user_photo area. Because there are no file extension
controls. Additionally, the .htaccess file has some protection against
malicious .php file. But, the developer writes the wrong regex. So, the
Attacker can change extension as (.PHP) and run code on the server

.htaccess file content:
----------------------------------------------
# This is used to restrict access to this folder to anything other
# than images

# Prevents any script files from being accessed from the images folder
<FilesMatch "\.(php([0-9]|s)?|s?p?html|cgi|pl|exe)$">
   Order Deny,Allow
   Deny from all
</FilesMatch>

Vulnerable File-1: actions.class.php
----------------------------------------------
Vulnerable function: processForm
---------------------------------------------
Vulnerable area:
---------------------------------------------

<?php

protected function processForm(sfWebRequest $request, sfForm $form)
  {
    $files = $request->getFiles();
    $userPhoto = $files[&#039;users&#039;][&#039;photo&#039;][&#039;name&#039;];

    $form->bind($request->getParameter($form->getName()),
$request->getFiles($form->getName()));
    if ($form->isValid())
    {
      $user = $this->getUser()->getAttribute(&#039;user&#039;);

      $this->checkUser($form[&#039;email&#039;]->getValue(),$user->getId());

      $form->setFieldValue(&#039;users_group_id&#039;,$user->getUsersGroupId());
      $form->setFieldValue(&#039;active&#039;,$user->getActive());

      $hasher = new PasswordHash(11, false);

      if(isset($form[&#039;new_password&#039;]))
      {
        if(strlen($form[&#039;new_password&#039;]->getValue())>0)
        {
          $form->setFieldValue(&#039;password&#039;,
$hasher->HashPassword($form[&#039;new_password&#039;]->getValue()));
        }
      }

      if(strlen($userPhoto)>0)
      {
        $userPhoto =  rand(111111,999999) . &#039;-&#039; . $userPhoto;
        $filename = sfConfig::get(&#039;sf_upload_dir&#039;) . &#039;/users/&#039; . $userPhoto;
        move_uploaded_file($files[&#039;users&#039;][&#039;photo&#039;][&#039;tmp_name&#039;], $filename);
        $form->setFieldValue(&#039;photo&#039;, $userPhoto);

        app::image_resize($filename,$filename);
      }
      else
      {
      }

?>

