# Google Dork: "Powered by TorrentTrader v2.06"
# Date: 29 DÃ©cembre 2010
# Author: EsS4ndre
# Software Link: http://sourceforge.net/projects/torrenttrader/files/TorrentTrader%20v2/TorrentTrader-v2.06/
# Version: 2.6
# Tested on: Linux
 
-----------------------------------------------------------------------------------------------------------------
 
blocks-edit.php
     
    Line 27:
     
        echo "<a name=\"".$name."\"></a>";
         
            echo "<br /><center><b>"._BLC_USE_SITE_SET_."</b><hr>";
            echo "<table border=0 width=200 align=\"center\"><tr><td>";
            include("blocks/".$name."_block.php");
            echo "</td></tr></table><hr>";
            echo "<center><a href=\"javascript: self.close();\">"._CLS_WIN_."</a></center>";
             
        end_frame();
        stdfoot();
        die();
         
     
     
     
    Line 28:
     
        echo "<a name=\"".$name."\"></a>";
         
        Like the variable $name isn&#039;t declared, it&#039;s exploitable for a XSS from the url.
     
 
     
    Line 46:
     
    if($addnew){
        foreach($addnew as $addthis){
        $i = $addthis;
         
        $addblock = $_POST["addblock_".$i];
        $wantedname = "&#039;".$_POST["wantedname_".$i]."&#039;";
        $name = "&#039;".str_replace("_block.php","",$addblock)."&#039;";
        $description = "&#039;".$_POST["wanteddescription_".$i]."&#039;";
 
        mysql_query("INSERT INTO blocks (named, name, description, position, enabled, sort)
        VALUES ($wantedname, $name, $description, &#039;left&#039;, 0, 0)")  or ((mysql_errno() == 1062)
        ? show_error_msg("Error","Sorry, this block is in database already!",1) :
        show_error_msg("Error","Database Query failed: " . mysql_error()));
        if(mysql_affected_rows() != 0){
            $success = "<center><font size=\"3\"><b>"._SUCCESS_ADD_."</b></font></center><br />";
        }
     
    The variables $description, $addblock, $name and $wantedname aren&#039;t filtered, so it&#039;s vulnerable for a sql injection.
 
    Line 189:
     
        if($left){
        mysql_query("UPDATE blocks SET position = &#039;left&#039;, sort = $nextleft WHERE id = ".$left)
        or show_error_msg(_ERROR_,_FAIL_DB_QUERY_.": " . mysql_error());
         
    The variable $left isn&#039;t declared in the file, so it&#039;s vulnerable to Sql injection from the url.
    It&#039;s exploitable with a csrf.
     
    Line 196:
        if($middle){
        mysql_query("UPDATE blocks SET position = &#039;middle&#039;, sort = $nextmiddle WHERE id = ".$middle)
        or show_error_msg(_ERROR_,_FAIL_DB_QUERY_.": " . mysql_error());
         
    The variable $middle isn&#039;t declared in the file, so it&#039;s vulnerable to Sql injection from the url.
     
    Line 203:
     
    if($right){
        mysql_query("UPDATE blocks SET position = &#039;right&#039;, sort = $nextright WHERE enabled=1 AND id = ".$right)
        or show_error_msg(_ERROR_,_FAIL_DB_QUERY_.": " . mysql_error());
     
    The variable $right isn&#039;t declared in the file, so it&#039;s vulnerable to Sql injection from the url.
     
    Line 210:
     
    if($up){
        $cur = mysql_query("SELECT position, sort, id FROM blocks WHERE id = $up");
        $curent = mysql_fetch_assoc($cur);
 
        mysql_query("UPDATE blocks SET sort = ".$sort." WHERE sort = ".($sort-1)." AND
        id != $up AND position = &#039;".$position."&#039;") or show_error_msg(_ERROR_,_FAIL_DB_QUERY_.": " . mysql_error());
         
        mysql_query("UPDATE blocks SET sort = ".($sort-1)." WHERE id=$up")
        or show_error_msg(_ERROR_,_FAIL_DB_QUERY_.": " . mysql_error());
         
    }
     
    The variable $up isn&#039;t declared in the file, so it&#039;s vulnerable to Sql injection.
     
    Line 219:
     
    if($down){
        $cur = mysql_query("SELECT position, sort, id FROM blocks WHERE id = $down");
        $curent = mysql_fetch_assoc($cur);
 
        mysql_query("UPDATE blocks SET sort = ".($sort+1)." WHERE id=$down")
        or show_error_msg(_ERROR_,_FAIL_DB_QUERY_.": " . mysql_error());
        mysql_query("UPDATE blocks SET sort = ".$sort." WHERE sort = ".($sort+1)."
        AND id != $down AND position = &#039;".$position."&#039;") or
        show_error_msg(_ERROR_,_FAIL_DB_QUERY_.": " . mysql_error());
    }
     
    The variable $down isn&#039;t declared in the file, so it&#039;s vulnerable to Sql injection.
     
     
    Info:
        - Register_globale is required
        - There needs to be admin
        - All this vulnerabilities are exploitables by crsf.
         
    Line 82 to 146:
     
    The upload form doesn&#039;t filter uploaded files.
    So, it&#039;s possible to send a backdoor on the server with the upload form.
    Rename the backdoor in backdoor_block.php and the file will be uploaded in the /blocks directory.
    http://localhost/blocks/backdoor_block.php
     
 
=================================================================================================================
 
torrents-import.php
     
    Line 101 :
     
    $ret = mysql_query("INSERT INTO torrents (filename, owner, name, descr, image1,
    image2, category, added, info_hash, size, numfiles, save_as, announce, external,
    nfo, torrentlang, anon) VALUES (".sqlesc($fname).", &#039;".$CURUSER[&#039;id&#039;]."&#039;, ".sqlesc($name).",
    ".sqlesc($descr).", &#039;".$inames[0]."&#039;, &#039;".$inames[1]."&#039;, &#039;".$type."&#039;, &#039;" . get_date_time() . "&#039;,
    &#039;".$infohash."&#039;, &#039;".$torrentsize."&#039;, &#039;".$filecount."&#039;, ".sqlesc($fname).", &#039;".$announce."&#039;,
    &#039;".$external."&#039;, &#039;".$nfo."&#039;, &#039;".$langid."&#039;,&#039;$anon&#039;)");
         
    Sql vulnÃ©rability, the variable $type isn&#039;t declared.
     
    Info:
        - There needs to be moderator
        - Register_globale is required.
         
=================================================================================================================
 
report.php
 
    The variables $takeuser, $takeuser, $takeforumid, $takecomment, $takeforumpost are vulnerable
    to sql injection and the variable $takereason is vulnerable to XSS.
     
    Line 40:
 
        $res = mysql_query("SELECT id FROM reports WHERE addedby = $CURUSER[id] AND votedfor = $takeuser AND type = &#039;user&#039;");
 
    Line 43:
 
         mysql_query("INSERT into reports (addedby,votedfor,type,reason) VALUES ($CURUSER[id],$takeuser,&#039;user&#039;, &#039;$takereason&#039;)");
 
    Line 44:
 
        print("User: $takeuser, Reason: $takereason<p></p>Successfully Reported");
         
    Line 65:
     
        $res = mysql_query("SELECT id FROM reports WHERE addedby = $CURUSER[id] AND votedfor = $taketorrent AND type = &#039;torrent&#039;");
     
    Line 68:
     
        print("Torrent: $taketorrent, Reason: $takereason<p></p>Successfully Reported");
 
    Line 89:
     
        $res = mysql_query("SELECT id FROM reports WHERE addedby = $CURUSER[id] AND votedfor = $takecomment AND type = &#039;comment&#039;");
         
    Line 92:
     
        print("Comment: $takecomment, Reason: $takereason<p></p>Successfully Reported");
         
    Line 113:
     
        $res = mysql_query("SELECT id FROM reports WHERE addedby = $CURUSER[id] AND votedfor= $takeforumid AND
        votedfor_xtra= $takeforumpost AND type = &#039;forum&#039;");
         
    Line 117:
     
        print("User: $takeuser, Reason: $takereason<p></p>Successfully Reported");
         
=================================================================================================================
 
/torrents.php
     
    The variable $parent_check isn&#039;t declared in the file, so it&#039;s vulnerable to sql injection.
     
    Line 89:
     
        $res = mysql_query("SELECT COUNT(*) FROM torrents LEFT JOIN categories
        ON category = categories.id $where $parent_check") or die(mysql_error());
     
    Line 94:
     
        if ($count) {
            list($pagertop, $pagerbottom, $limit) = pager(20, $count, "torrents.php?" . $addparam);
            $query = "SELECT torrents.id, torrents.anon, torrents.announce, torrents.category, torrents.leechers,
            torrents.nfo, torrents.seeders, torrents.name, torrents.times_completed, torrents.size, torrents.added,
            torrents.comments, torrents.numfiles, torrents.filename, torrents.owner, torrents.external,
            torrents.freeleech, categories.name AS cat_name, categories.parent_cat AS cat_parent,
            categories.image AS cat_pic, users.username, users.privacy, IF(torrents.numratings < 2,
            NULL, ROUND(torrents.ratingsum / torrents.numratings, 1)) AS rating FROM torrents LEFT
            JOIN categories ON category = categories.id LEFT JOIN users ON torrents.owner = users.id
            $where $parent_check $orderby $limit";
            $res = mysql_query($query) or die(mysql_error());
        }else{
            unset($res);
        }
         
     
    Info:
        Register_globale is required.
 
=================================================================================================================
 
/torrents-search.php
 
    The variable parent_cat and parent_check aren&#039;t securised in this file.
     
    Line 10:
     
        $parent_cat = $_GET["parent_cat"];
         
    Line 167:
     
        $res = mysql_query("SELECT COUNT(*) FROM torrents $where $parent_check") or die(mysql_error());
     
    Line 191;
     
        $res = mysql_query("SELECT COUNT(*) FROM torrents $where $parent_check");
     
    Line 212:
     
    if ($count) {
        //SEARCH QUERIES!
        list($pagertop, $pagerbottom, $limit) = pager(20, $count, "torrents-search.php?" . $addparam);
        $query = "SELECT torrents.id, torrents.anon, torrents.announce, torrents.category, torrents.leechers,
        torrents.nfo, torrents.seeders, torrents.name, torrents.times_completed, torrents.size, torrents.added,
        torrents.comments, torrents.numfiles, torrents.filename, torrents.owner, torrents.external,
        torrents.freeleech, categories.name AS cat_name, categories.parent_cat AS cat_parent,
        categories.image AS cat_pic, users.username, users.privacy, IF(torrents.numratings < 2,
        NULL, ROUND(torrents.ratingsum / torrents.numratings, 1)) AS rating FROM torrents LEFT
        JOIN categories ON category = categories.id LEFT JOIN users ON torrents.owner = users.id
        $where $parent_check $orderby $limit";
        $res = mysql_query($query) or die(mysql_error());
 
    }else{
        unset($res);
    }
     
    Line 217:
     
        $query = "SELECT torrents.id, torrents.anon, torrents.announce, torrents.category,
        torrents.leechers, torrents.nfo, torrents.seeders, torrents.name, torrents.times_completed,
        torrents.size, torrents.added, torrents.comments, torrents.numfiles, torrents.filename,
        torrents.owner, torrents.external, torrents.freeleech, categories.name AS cat_name,
        categories.parent_cat AS cat_parent, categories.image AS cat_pic, users.username,
        users.privacy, IF(torrents.numratings < 2, NULL, ROUND(torrents.ratingsum / torrents.numratings, 1))
        AS rating FROM torrents LEFT JOIN categories ON category = categories.id LEFT JOIN users
        ON torrents.owner = users.id $where $parent_check $orderby $limit";
         
        $res = mysql_query($query) or die(mysql_error());
     
    Line 257:  
     
        $subcatsquery = mysql_query("SELECT id, name, parent_cat FROM categories WHERE parent_cat=&#039;$parent_cat&#039;
        ORDER BY name")or die(mysql_error());
         
        - Need magic_quotes: off.
     
    Info:
        Register_globale is required
         
 
=================================================================================================================
 
/faq.php
 
    The data returned from the sql query are displayed without being filtered and it&#039;s possible
    to inject javascript from the administrator pannel (/faq-actions.php). So it&#039;s vulnerable to XSS.
 
=================================================================================================================
 
/faq-actions.php
 
    The variable $_POST[order] isn&#039;t filtered, it&#039;s vulnerable to sql injection.
     
    Line 20:
     
        if ($_GET[action] == "reorder") {
         foreach($_POST[order] as $id => $position) mysql_query("UPDATE `faq` SET `order`=&#039;$position&#039; WHERE id=&#039;$id&#039;");
         header("Refresh: 0; url=faq-manage.php");
        }
     
     
    The variable $_GET[id] isn&#039;t filtere, so it&#039;s vulnerable to sql injection.
     
    Line 31:
        $res = mysql_query("SELECT * FROM `faq` WHERE `id`=&#039;$_GET[id]&#039; LIMIT 1");
         
         
    The variables $_POST[flag], $_POST[categ] and $_POST[id] aren&#039;t filtered, so it&#039;s vulnerable to sql injection.
         
    Line 72:
     
    elseif ($_GET[action] == "edititem" && $_POST[id] != NULL && $_POST[question] != NULL &&
    $_POST[answer] != NULL && $_POST[flag] != NULL && $_POST[categ] != NULL) {
     
     $question = addslashes($_POST[question]);
     $answer = addslashes($_POST[answer]);
     mysql_query("UPDATE `faq` SET `question`=&#039;$question&#039;, `answer`=&#039;$answer&#039;, `flag`=&#039;$_POST[flag]&#039;,
     `categ`=&#039;$_POST[categ]&#039; WHERE id=&#039;$_POST[id]&#039;");
     header("Refresh: 0; url=faq-manage.php");
    }
 
    Line 80:
     
    elseif ($_GET[action] == "editsect" && $_POST[id] != NULL && $_POST[title] != NULL && $_POST[flag] != NULL) {
     $title = addslashes($_POST[title]);
     mysql_query("UPDATE `faq` SET `question`=&#039;$title&#039;, `answer`=&#039;&#039;, `flag`=&#039;$_POST[flag]&#039;, `categ`=&#039;0&#039; WHERE id=&#039;$_POST[id]&#039;");
      
    Line 87:
     
    elseif ($_GET[action] == "delete" && isset($_GET[id])) {
     if ($_GET[confirm] == "yes") {
      mysql_query("DELETE FROM `faq` WHERE `id`=&#039;$_GET[id]&#039; LIMIT 1");
      header("Refresh: 0; url=faq-manage.php");
     }
      
    Line 139:
     
    elseif ($_GET[action] == "addnewitem" && $_POST[question] != NULL && $_POST[answer] != NULL
    && $_POST[flag] != NULL && $_POST[categ] != NULL) {
     $question = addslashes($_POST[question]);
     $answer = addslashes($_POST[answer]);
     $res = mysql_query("SELECT MAX(`order`) FROM `faq` WHERE `type`=&#039;item&#039; AND `categ`=&#039;$_POST[categ]&#039;");
     while ($arr = mysql_fetch_array($res, MYSQL_BOTH)) $order = $arr[0] + 1;
     mysql_query("INSERT INTO `faq` (`type`, `question`, `answer`, `flag`, `categ`, `order`) VALUES
     (&#039;item&#039;, &#039;$question&#039;, &#039;$answer&#039;, &#039;$_POST[flag]&#039;, &#039;$_POST[categ]&#039;, &#039;$order&#039;)");
     header("Refresh: 0; url=faq-manage.php");
    }
     
    Line 149:
     
    elseif ($_GET[action] == "addnewsect" && $_POST[title] != NULL && $_POST[flag] != NULL) {
     $title = addslashes($_POST[title]);
     $res = mysql_query("SELECT MAX(`order`) FROM `faq` WHERE `type`=&#039;categ&#039;");
     while ($arr = mysql_fetch_array($res, MYSQL_BOTH)) $order = $arr[0] + 1;
     mysql_query("INSERT INTO `faq` (`type`, `question`, `answer`, `flag`, `categ`, `order`) VALUES
     (&#039;categ&#039;, &#039;$title&#039;, &#039;&#039;, &#039;$_POST[flag]&#039;, &#039;0&#039;, &#039;$order&#039;)");
     header("Refresh: 0; url=faq-manage.php");
    }
     
    Info:
        There needs to be admin
         
=================================================================================================================
 
/admincp.php
 
    Line 347:
     
        if (mysql_query("INSERT INTO stylesheets (name, uri) VALUES (&#039;$_POST[name]&#039;, &#039;$_POST[uri]&#039;)"))
         
        The variable $_POST[name] and $_POST[uri] are vulnerable to sql injection.
         
    Line 348:
     
        show_error_msg("Success", "Theme &#039;$_POST[name]&#039; added.", 0);
     
        The variable $_POST[name] isn&#039;t filtered, so it&#039;s vulnerable to XSS.
     
    Line 588:
         
        print("<input type=hidden name=returnto value=$returnto>\n");
         
        The variable $returnto isn&#039;t filtered, so it&#039;s vulnerable to XSS.
         
    Line 793:
 
        mysql_query("UPDATE torrents SET category=$newcatid WHERE category=$id") or die(mysql_error());
         
        The variable $newcatid isn&#039;t filtered, so it&#039;s vulnerable to sql injection.
     
    Line 1406:
     
        $url = " .$_SERVER[PHP_SELF]";
        $count = $row[0];
        $perpage = 40;list($pagertop, $pagerbottom, $limit) = pager($perpage, $count, $url);
        print("<BR><b> Current Email Bans ($count)</b>\n");
 
        $url isn&#039;t filtered and pager() does not filter anything. So it&#039;s vulnerable to XSS.
         
    Line 2006:
     
        $query = mysql_query("SELECT id FROM users WHERE class IN (".implode(",", $updateset).")");
         
        The variable $updateset isn&#039;t filtered, so it&#039;s vulnerable to sql injection.
     
    Line 2340:
     
        if($action == "censor") {
        stdhead("Censor");
        navmenu();
        //Output
        if ($_POST[&#039;submit&#039;] == &#039;Add Censor&#039;){
        $query = "INSERT INTO censor (word, censor) VALUES (&#039;" . $_POST[&#039;word&#039;] . "&#039;,&#039;" . $_POST[&#039;censor&#039;] . "&#039;);";
                     mysql_query($query);
                     }
        if ($_POST[&#039;submit&#039;] == &#039;Delete Censor&#039;){
          $aquery = "DELETE FROM censor WHERE word = &#039;" . $_POST[&#039;censor&#039;] . "&#039; LIMIT 1";
          mysql_query($aquery);
          }
         
        The variables $_POST[&#039;word&#039;] and $_POST[&#039;censor&#039;] aren&#039;t filtered, so it&#039;s vulnerable to sql injection.
         
         
    Info:
        There needs to be admin
         
=================================================================================================================
 
admin-modtasks.php
 
    Line 71:
     
        mysql_query("UPDATE users SET title=".sqlesc($title).", downloaded=&#039;$downloaded&#039;,
        uploaded=&#039;$uploaded&#039;, signature=".sqlesc($signature).", avatar=&#039;$avatar&#039;, ip=&#039;$ip&#039;,
        donated=&#039;$donated&#039;, forumbanned=&#039;$forumbanned&#039;, warned=&#039;$warned&#039;,  modcomment=&#039;$modcomment&#039;,
        enabled=&#039;$enabled&#039;, invites=&#039;$invites&#039; WHERE id=$userid");
         
         
        The variables $invites, $enabled, $modcomment, $warned, $forumbanned,
        $donated, $ip, $avatar, $uploaded and $downloaded are vulnerable to sql injection.
         
    Info:
        There needs to be admin
         
=================================================================================================================
 
/backend/functions.php
 
    Line 136:
     
    function getip() {
       if (isset($_SERVER)) {
         if (isset($_SERVER[&#039;HTTP_X_FORWARDED_FOR&#039;]) && validip($_SERVER[&#039;HTTP_X_FORWARDED_FOR&#039;])) {
           $ip = $_SERVER[&#039;HTTP_X_FORWARDED_FOR&#039;];
         } elseif (isset($_SERVER[&#039;HTTP_CLIENT_IP&#039;]) && validip($_SERVER[&#039;HTTP_CLIENT_IP&#039;])) {
           $ip = $_SERVER[&#039;HTTP_CLIENT_IP&#039;];
         } else {
           $ip = $_SERVER[&#039;REMOTE_ADDR&#039;];
         }
       } else {
         if (getenv(&#039;HTTP_X_FORWARDED_FOR&#039;) && validip(getenv(&#039;HTTP_X_FORWARDED_FOR&#039;))) {
           $ip = getenv(&#039;HTTP_X_FORWARDED_FOR&#039;);
         } elseif (getenv(&#039;HTTP_CLIENT_IP&#039;) && validip(getenv(&#039;HTTP_CLIENT_IP&#039;))) {
           $ip = getenv(&#039;HTTP_CLIENT_IP&#039;);
         } else {
           $ip = getenv(&#039;REMOTE_ADDR&#039;);
         }
       }
       return $ip;
    }
     
    It&#039;s possible of spoof your ip address with the header X-Forwarded-For or Client-ip.
    Use $_SERVER[&#039;HTTP_X_FORWARDED_FOR&#039;] or $_SERVER[&#039;HTTP_CLIENT_IP&#039;] isn&#039;t secured.
    Prefer using $_SERVER[&#039;REMOTE_ADDR&#039;].
     
    Line 296:
     
    function show_error_msg($title, $message, $wrapper = "1") {
        if ($wrapper=="1") {
            stdhead($title);
            //echo "<b>DEBUG: stdhead Wrapper ON/Kill php gen further</b>";//remove later
        }
            begin_frame("<font color=red>". htmlspecialchars($title) ."</font>");
            print("<p><CENTER><B>" . stripslashes(sqlesc($message)) . "</B></CENTER></p>\n");
            end_frame();
 
        if ($wrapper=="1"){
            stdfoot();
            die();
        }
    }
     
    if the $message variable isn&#039;t filtered before being passed as a parameter to the function that is vulnerable to XSS.
     
=================================================================================================================
 
/backend/smilies.php
 
Line 159:
 
    function insert_smilies_frame () {
        GLOBAL $site_config, $smilies;
 
        echo "<table><tr><td class=\"colhead\">Type...</td><td class=\"colhead\">To make a...</td></tr>";
        foreach ($smilies as $code => $url) {
            echo "<tr><td>$code</td><td><a href=\"javascript:window.opener.SmileIT(&#039;$code&#039;,
            &#039;$_GET[form]&#039;, &#039;$_GET[text]&#039;)\"><img src=\"$site_config[SITEURL]/images/smilies/$url\"
            alt=\"$code\" title=\"$code\" border=\"0\"></a></td></tr>";
        }
        echo "</table>";
    }
     
    The variable $_GET[form] and $_GET[text] are vulnerable to XSS.
     
    http://localhost/backend/smilies.php?action=display&text=[XSS]
     
    /backend/smilies.php is included in backend/functions.php, so it&#039;s exploitable with all the files that contain this include.
     
 
-----------------------------------------------------------------------------------------------------------------
 
    Greetz and Thanks to :
 
        Mr Pad, Sh0ck, Syscall, PhOeNiX95, BestPig, Spl3en, Xylitol, Nico and those i forgot <3  
         
-----------------------------------------------------------------------------------------------------------------



