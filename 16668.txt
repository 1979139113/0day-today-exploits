DORK:allintitle:videodb
 
# Vendor: http://www.videodb.net/blog/
 
 $ -----------#
 | S3C0VERUN  |
 & ------------@
 
along with this i was able in some sites to determine that you can overwrite the databse contents and also if you look in the source you se there password the server name and the dbuser htis is a problem because most likely the site could be taken over
due to the fact the admin doesnt usually change passwords on the same box
 
 
vulnerable software is videodb
 
this is an information disclosure vulnerability it appears most sites running this are vulnerable and have the same database structure im not sure if this is an old version or if it is
completely vulnerable im downloading the new version now from source
 
 
 
<?php
/**
 * Borrow Manager
 *
 * Handles lending of disks
 *
 * @package videoDB
 * @author  Andreas Gohr <a.gohr@web.de>
 * @version $Id: borrow.php,v 2.20 2008/05/12 13:01:12 andig2 Exp $
 */
 
require_once &#039;./core/functions.php&#039;;
require_once &#039;./core/output.php&#039;;
 
// check for localnet
localnet_or_die();
 
// permission check
permission_or_die(PERM_WRITE, PERM_ANY);
 
// borrowmanagement for single disk
$editable = false;
if (!empty($diskid))
{
    if (check_permission(PERM_WRITE, get_owner_id($diskid,true)))
    {
        $editable = true;
        if ($return) {
            $SQL    = "DELETE FROM ".TBL_LENT." WHERE diskid = &#039;".addslashes($diskid)."&#039;";
            runSQL($SQL);
        }
        if (!empty($who)) {
            $who = addslashes($who);
            $SQL    = "INSERT INTO ".TBL_LENT." SET who = &#039;".addslashes($who)."&#039;, diskid = &#039;".addslashes($diskid)."&#039;";
            runSQL($SQL);
        }
 
        $SQL    = "SELECT who, DATE_FORMAT(dt,&#039;%d.%m.%Y&#039;) AS dt
                     FROM ".TBL_LENT."
                    WHERE diskid = &#039;".addslashes($diskid)."&#039;";
        $result = runSQL($SQL);
         
        $who = $result[0][&#039;who&#039;];
        $dt  = $result[0][&#039;dt&#039;];
    }
}
 
$WHERES = &#039;&#039;;
 
if ($config[&#039;multiuser&#039;])
{
    // get owner from session- or use current user
    session_default(&#039;owner&#039;, get_username(get_current_user_id()));
 
    // build html select box
    $all = strtoupper($lang[&#039;radio_all&#039;]);
    $smarty->assign(&#039;owners&#039;, out_owners(array($all => $all), PERM_READ));
    $smarty->assign(&#039;owner&#039;, $owner);
 
    // if we don&#039;t have read all permissions, limit visibility using cross-user permissions
    if (!check_permission(PERM_READ))
    {
        $JOINS   = &#039; LEFT JOIN &#039;.TBL_PERMISSIONS.&#039; ON &#039;.TBL_DATA.&#039;.owner_id = &#039;.TBL_PERMISSIONS.&#039;.to_uid&#039;;
        $WHERES .= &#039; AND &#039;.TBL_PERMISSIONS.&#039;.from_uid = &#039;.get_current_user_id().&#039; AND &#039;.TBL_PERMISSIONS.&#039;.permissions & &#039;.PERM_READ.&#039; != 0&#039;;
    }
         
    // further limit to single owner
    if ($owner != $all) $WHERES .= " AND ".TBL_USERS.".name = &#039;".addslashes($owner)."&#039;";
}
 
// overview on lent disks
$SQL    = "SELECT who, DATE_FORMAT(dt,&#039;%d.%m.%Y&#039;) as dt, ".TBL_LENT.".diskid,
                  CASE WHEN subtitle = &#039;&#039; THEN title ELSE CONCAT(title,&#039; - &#039;,subtitle) END AS title,
                  ".TBL_DATA.".id, COUNT(".TBL_LENT.".diskid) AS count, ".TBL_USERS.".name AS owner
             FROM ".TBL_LENT.", ".TBL_DATA."
        LEFT JOIN ".TBL_USERS." ON owner_id = ".TBL_USERS.".id
           $JOINS
            WHERE ".TBL_LENT.".diskid = ".TBL_DATA.".diskid
          $WHERES
         GROUP BY ".TBL_LENT.".diskid
         ORDER BY who, ".TBL_LENT.".diskid";
$result = runSQL($SQL);
 
// check permissions
for($i=0; $i < count($result); $i++)
{
    $result[$i][&#039;editable&#039;] = check_permission(PERM_WRITE, get_userid($result[$i][&#039;owner&#039;]));
}
 
tpl_page();
 
$smarty->assign(&#039;diskid&#039;, $diskid);
$smarty->assign(&#039;who&#039;, $who);
$smarty->assign(&#039;dt&#039;,  $dt);
$smarty->assign(&#039;editable&#039;,   $editable);
$smarty->assign(&#039;borrowlist&#039;, $result);
 
// display templates
tpl_display(&#039;borrow.tpl&#039;);
 
?>
 
ADDSLASHES IS THE PROBLEM I ASSUME IT COULD BE MUCH WORSE IF HE MADE THIS MISTAKE I URGE YOU ALL TOO LOOK INTO THE CODE
 
 
the problem here is the fact he is using addslashes that can be bypassed with a valid multi byte  ending in 0x5c describd in chris Shiflett&#039;s  article
 
if i must say this could be either good or bad thing is it just throws an error the injection is possible on all of these
nnow what are we to do this could be huge or small depending on if it is used widely or just  small based but this is the new code from sourceforge
 
 
i believe this to b the script that caused the issue most of the sites including the makers demo use borrow  few others changed



