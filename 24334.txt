Vendor: Kaspersky Lab ZAO
Affected Version(s): 8.1.0.1042, 10.2.1.23
Tested Version(s): 8.1.0.1042, 10.2.1.23
Vulnerability Type: Use of a One-Way Hash without a Salt (CWE-759)
Risk Level: Low
Solution Status: Fixed
Vendor Notification: 2015-02-19
Solution Date: 2015-10-01
Public Disclosure: 2015-10-01
CVE Reference: Not yet assigned
Authors of Advisory: Sven Freund and Matthias Deeg (SySS GmbH)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Overview:

Kaspersky Endpoint Security for Windows provides centralized protection
of Windows workstations and Windows servers from malware, potentially
dangerous programs and network attacks. It includes features such as
data encryption functionality for encrypting hard drives and removable
devices, centralized vulnerability flagging and virtual machine support
(see [1]).

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Vulnerability Details:

The SySS GmbH found out that the admin password for protecting
different functions of the Kaspersky Endpoint Security software, like
managing backups or stopping protection services, is stored as raw, 
unsalted MD5 hash value in the Windows registry.

The used registry value

"HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\KasperskyLab\protected\KES10\settings\OPEP"

is by default readable by every user.

The use of the cryptographic one-way hash function MD5 without using a 
salt for storing sensitive data like admin passwords allows an attacker
with access to this data to perform efficient password guessing attacks

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Proof of Concept (PoC):

The configured admin password is stored as raw, unsalted MD5 hash value

For instance, it can be read using the following command:

C:\Users\SySS>reg query HKLM\SOFTWARE\Wow6432Node\KasperskyLab\protected\KES10\settings /v OPEP

HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\KasperskyLab\protected\KES10\settings
    OPEP    REG_SZ    CFB37E7C04BEA837D23005199B1CD62B


The read string in this example is a raw, unsalted MD5 hash value of the
UTF-16 string "syss", as the following output illustrates:

$ echo -en "s\x00y\x00s\x00s\x00" | md5sum
cfb37e7c04bea837d23005199b1cd62b  -

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Solution:

According to information by Kaspersky, the described security issue has
been fixed in newer software releases.

Please contact the manufacturer for further information or support.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Disclosure Timeline:

2015-02-19: Vulnerability reported to manufacturer
2015-02-19: Manufacturer acknowledges e-mail with SySS security advisory          
2015-03-17: Rescheduling of the publication date in agreement with the
            manufacturer
2015-04-14: Rescheduling of the publication date in agreement with the
            manufacturer
2015-09-28: SySS asks for further information about software fix
2015-10-01: Public release of security advisory on agreed publication
            date

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

References:

[1] Product Web site for Kaspersky Endpoint Security for Windows
    http://support.kaspersky.com/kes10wks
[2] SySS Security Advisory SYSS-2015-002
    https://www.syss.de/fileadmin/dokumente/Publikationen/Advisories/SYSS-2015-002.txt
[3] SySS Responsible Disclosure Policy
    https://www.syss.de/en/news/responsible-disclosure-policy/

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Credits:

This security vulnerability was found by Sven Freund and Matthias Deeg 
of the SySS GmbH.

E-Mail: sven.freund (at) syss.de
Public Key: https://www.syss.de/fileadmin/dokumente/Materialien/PGPKeys/Sven_Freund.asc
Key fingerprint = DCDB 7627 C1E3 9CE8 62DF 2666 8A5F A853 415D 46DC

E-Mail: matthias.deeg (at) syss.de
Public Key: https://www.syss.de/fileadmin/dokumente/Materialien/PGPKeys/Matthias_Deeg.asc
Key fingerprint = D1F0 A035 F06C E675 CDB9 0514 D9A4 BF6A 34AD 4DAB

