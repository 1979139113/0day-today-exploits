
CVE-2017-0571



When frames are transmitted from the dongle to the host OS on the SDIO interface, they are encapsulated in several additional layers. First, the initial framing is done in hardware by SDPCM, which includes hardware-added headers. Next are the software-added headers, which indicate logical properties of the data being transmitted (such as the "channel" on which the data is transmitted - indicating either data frames or out-of-band responses to ioctls, etc.).



However, most of the included internal functions which handle WLFC information fail to validate length fields. For example, when information with the tag WLFC_CTL_TYPE_HOST_REORDER_RXPKTS is encountered, the "_dhd_wlfc_reorderinfo_indicate" function is called, which performs a simply copy operation, like so:

1. static void _dhd_wlfc_reorderinfo_indicate(uint8 *val, uint8 len, uchar *info_buf, uint *info_len) {
2. if (info_len) {
3. if (info_buf) {
4. bcopy(val, info_buf, len);
5. *info_len = len;
6. }
7. else
8. *info_len = 0;
9. }
10. }

Where "len" is the length field supplied in the TLV, "val" is a pointer to the TLV&#039;s value buffer, and "info_len" is a pointer to a stack-allocated buffer of size WLHOST_REORDERDATA_TOTLEN (12) which is allocated in "dhdsdio_readframes" (or in "dhdsdio_rxglom" if the frame is glommed).

An attacker controlling the dongle could send a malicious frame containing a TLV with the WLFC_CTL_TYPE_HOST_REORDER_RXPKTS tag and a length field of 255. Doing so will overflow the stack-allocated buffer with attacker controlled data. Moreover, in order to enable WLFC parsing, the attacker may first craft a special BRCM ethertype packet containing the event "WLC_E_FIFO_CREDIT_MAP". Doing so will cause the "bcmdhd" driver to call "dhd_wlfc_event" in order to handle the event, which in turn will call "dhd_wlfc_enable", thus enabling WLFC parsing on subsequent frames.

I&#039;ve been able to statically verify this issue on the "bcmdhd-3.10" driver, and in the corresponding "bcmdhd" driver on the Nexus 5 (hammerhead).

This bug is subject to a 90 day disclosure deadline. If 90 days elapse
without a broadly available patch, then the bug report will automatically
become visible to the public.




Found by: laginimaineb

