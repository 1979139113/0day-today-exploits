# Exploit Author: David Silveiro 
# Exploit Author Github: github.com/davidsilveiro
# Exploit Author Twitter: twitter.com/david_silveiro 
# Vendor Homepage: http://radiantcms.org/
# Software Link: http://radiantcms.org/download/
# Date: Zero day
 
Radiant is a no-fluff, open source content management system designed for small teams. It is similar to Textpattern or MovableType, but is a general purpose content management system (not just a blogging engine) written in Ruby.
 
Stored XSS 1 – File Title Upload
 
The attacker must first be a user of sorts, as there&#039;s only 2 types of roles &#039;administrator&#039; & &#039;designer&#039; we&#039;re going with the assumption of the latter. Now as the designer we have the option to upload &#039;assets&#039; such as files or images, here lyes one of the issues.
 
 
Enter the example below.
 
POC:
 
Title: </script>alert(&#039;XSS&#039;)</script>
 
 
Stored XSS 2 – User Personal Preferences
 
This time round were faced with a lot more avenues to have our JS displayed back to us. Again, we&#039;re going with the assumption that we&#039;re logged in as a designer user.
 
Let us navigate to the &#039;Settings page&#039;, where you&#039;ll see  2 options to edit Personal Preferences & Configuration, click on Edit Prefrences.
 
POC:
 
Name: <script>alert(&#039;XSS 1&#039;)</script>
Email Address: <script>alert(&#039;XSS2&#039;)</script>@gmail.com
Username: <script>alert(&#039;XSS3&#039;)</script>
 

