 
Vendor: Devellion Limited
Product: CubeCart
Version: <= 3.0.12
Website: http://www.cubecart.com
 
BID: 19782 
CVE: CVE-2006-4525 
OSVDB: 28279 28280 28281 
SECUNIA: 21659 
 
Description:
CubeCart is a very popular web application written in php that allows for an individual to open up a fully functioning online ecommerce service. Unfortunately CubeCart is vulnerable to Cross Site Scripting attacks, SQL Injection attacks, and possible remote code execution due to an attacker being able to include arbitrary php code. An updated version of CubeCart has been released and all users are encouraged to upgrade as soon as possible. 
 
 
SQL injection:
There is an SQL injection in CubeCart due to an uninitialized array being used in an sql query. Let&#039;s have a look at a section of the vulnerable code from viewCat.inc.php 
$searchwords = split ( "[ ,]", treatGet($_GET[&#039;searchStr&#039;]));   
foreach($searchwords as $word){
    $searchArray[]=$word;
}
 
$noKeys = count($searchArray);
$like = "";
for ($i=0; $i<$noKeys;$i++) {
     
$ucSearchTerm = strtoupper($searchArray[$i]);
if(($ucSearchTerm!=="AND") && ($ucSearchTerm!=="OR")){
$like .= "(name LIKE &#039;%".$searchArray[$i]."%&#039; OR description LIKE &#039;%".$searchArray[$i]."%&#039; OR 
productCode LIKE &#039;%".$searchArray[$i]."%&#039;) OR ";
 
As seen in the above code, the searchArray array is never initialized, thus allowing an attacker to inject arbitrary elements into the array. To exploit this issue all an attacker would have to do is append searchArray[]=SQL to their search request. Of course an attacker would need to replace "SQL" with a valid SQL Statement. 
 
 
Cross Site Scripting:
There is also a cross site scripting issue in cube cart due to an uninitialized array being used. The "links" array is never initialized, and an attacer may use this to inject arbitrary html or javascript into the rendered template thus allowing for cross site scripting attacks. It should be noted that register globals must be on in order to exploit this issue. 
 
 
Arbitrary File Inclusion:
// sanitise gateway variable
if($basket == TRUE && isset($_POST[&#039;gateway&#039;]) && eregi("[0-9a-z_-]",$_POST[&#039;gateway&#039;])) {
     
//$basket = $cart->setVar($basket[&#039;shipCost&#039;],"shipCost");
$basket = $cart->setVar($_POST[&#039;gateway&#039;],"gateway");
 
include("modules/gateway/".$_POST[&#039;gateway&#039;]."/transfer.inc.php");
 
 
 
Solution:
CubeCart were very quick to release an updated version, and users are encouraged to upgrade as soon as possible. 
 
 
Credits:
James Bercegay of the GulfTech Security Research Team

