# Date: 2013/3/12
# Exploit Author: Saadat Ullah ï¼Œ saadi_linux@rocketmail.com
# Software Link: http://sourceforge.net/projects/webcookbook/
# Author HomePage: http://security-geeks.blogspot.com/
# Tested on: Server: Apache/2.2.15 (Centos) PHP/5.3.3
 
# SQL Injection
 
http://localhost/cook/searchrecipe.php?sstring=[SQLi]
http://localhost/cook/showtext.php?mode=[SQLi]
 
 
http://localhost/cook/showtext.php?mode=[SQLi]
#Proof Of Concept
In showtext.php
Code:
$mode = $_GET["mode"];
.
.
showText($mode, $art);//sending $mode to a function without sanitizing it
.
.
function showText($kategorie, $art) {
    initDB();
    echo "<div class=\"rdisplay\">\n";
    $query = "SELECT * FROM dat_texte WHERE id = $kategorie"; //using a non sanitize field in the querry
    $result = mysql_query($query);
.
.
All GET Fields Are Vuln To SQLi
#p0c
In searchrecipe.php
    $title = $_GET[&#039;title&#039;];
    $postfix = $_GET[&#039;postfix&#039;];
    $tipp = $_GET[&#039;tipp&#039;];
    $ingredient = $_GET[&#039;ingredient&#039;];
    .
    .
    .
    if ($title != "") {
        $sstring = "a.title LIKE &#039;%$title%&#039; ";
    }
    .
    .
    searchRecipe($mode, $sstring);
    .
    .
    In Function SearchRecipe
                $query = "SELECT DISTINCT a.id, a.title FROM das_rezept a, dat_ingredient b WHERE a.title LIKE &#039;%$sstring%&#039; OR b.description LIKE &#039;%$sstring%&#039; AND a.id = b.recipe ORDER BY a.title";
 
 
http://localhost/cook/searchrecipe.php?sstring=[SQLi]
P0c
$sstring = $_GET[&#039;sstring&#039;];
        if ($sstring != "") {
            searchRecipe(0, $sstring);
.
.
.
    $query = "SELECT DISTINCT a.id, a.title FROM das_rezept a, dat_ingredient b WHERE a.title LIKE &#039;%$sstring%&#039; OR b.description LIKE &#039;%$sstring%&#039; AND a.id = b.recipe ORDER BY a.title";
 
 
A simple Non-Presistent XSS
 
 
#Independent Pakistani Security Researcher

